{"version":3,"sources":["./node_modules/moment/locale sync ^\\.\\/.*$","./src/$_lazy_route_resource lazy namespace object","./src/app/agent/agent-rules-dialog/agent-rules-dialog.component.ts","./src/app/agent/agent-rules-dialog/agent-rules-dialog.component.html","./src/app/agent/agent.component.ts","./src/app/agent/agent.component.html","./src/app/agent/agent.service.ts","./src/app/agent/edit-agent-dialog/edit-agent-dialog.component.ts","./src/app/agent/edit-agent-dialog/edit-agent-dialog.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/base/base.module.ts","./src/app/buoy/buoy-config.ts","./src/app/buoy/buoy.module.ts","./src/app/buoy/buoy.ts","./src/app/buoy/http-link/lighthouse-link.ts","./src/app/buoy/operations/mutation/mutation-error.ts","./src/app/buoy/operations/mutation/mutation-result.ts","./src/app/buoy/operations/mutation/mutation.ts","./src/app/buoy/operations/operation.ts","./src/app/buoy/operations/query/query-error.ts","./src/app/buoy/operations/query/query-result.ts","./src/app/buoy/operations/query/query.ts","./src/app/buoy/operations/subscription/subscription.ts","./src/app/buoy/operations/watch-query/pagination.ts","./src/app/buoy/operations/watch-query/router-rw.ts","./src/app/buoy/operations/watch-query/watch-query.ts","./src/app/buoy/subscription-drivers/pusher.ts","./src/app/buoy/subscription-drivers/subscription-driver.ts","./src/app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component.ts","./src/app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component.html","./src/app/campaigns/campaign.service.ts","./src/app/campaigns/campaigns.component.ts","./src/app/campaigns/campaigns.component.html","./src/app/campaigns/campaigns.module.ts","./src/app/campaigns/components/campaign-detail/campaign-detail.component.ts","./src/app/campaigns/components/campaign-detail/campaign-detail.component.html","./src/app/campaigns/components/utility-detail/utility-detail.component.ts","./src/app/campaigns/components/utility-detail/utility-detail.component.html","./src/app/campaigns/new-campaign-dialog/new-campaign-dialog.component.ts","./src/app/campaigns/new-campaign-dialog/new-campaign-dialog.component.html","./src/app/client-information/client-information.component.ts","./src/app/client-information/client-information.component.html","./src/app/client-information/client.service.ts","./src/app/client-information/dialogs/add-sale-status.component.ts","./src/app/client-information/dialogs/add-sale-status.component.html","./src/app/client-selector/client-selector.component.ts","./src/app/client-selector/client-selector.component.html","./src/app/contact/contact.service.ts","./src/app/core/agents/agents.service.ts","./src/app/core/agents/dialogs/add-agent.component.ts","./src/app/core/agents/dialogs/add-agent.component.html","./src/app/core/core.module.ts","./src/app/core/index.ts","./src/app/daily-sale-tracker/components/new-sale/new-sale.component.ts","./src/app/daily-sale-tracker/components/new-sale/new-sale.component.html","./src/app/daily-sale-tracker/daily-sale-tracker.component.ts","./src/app/daily-sale-tracker/daily-sale-tracker.component.html","./src/app/daily-sale-tracker/daily-sale-tracker.service.ts","./src/app/daily-sale-tracker/dialogs/add-sale.component.ts","./src/app/daily-sale-tracker/dialogs/add-sale.component.html","./src/app/daily-sale-tracker/dialogs/delete-sale.component.ts","./src/app/daily-sale-tracker/dialogs/delete-sale.component.html","./src/app/dashboard/chart-js-content.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dialogs/add-sale-dialog.component.ts","./src/app/dashboard/dialogs/add-sale-dialog.component.html","./src/app/directives/debounce-keyup.directive.ts","./src/app/directives/directives.module.ts","./src/app/directives/let.directive.ts","./src/app/directives/scroll-lock.directive.ts","./src/app/fab-float-btn/fab-float-btn.component.ts","./src/app/fab-float-btn/fab-float-btn.component.html","./src/app/fab-float-btn/fab-float-btn.module.ts","./src/app/fab-float-btn/float-btn.service.ts","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/forgot-password/forgot-password.service.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/http/error-interceptor.ts","./src/app/loading-spinner/loading-spinner.component.ts","./src/app/loading-spinner/loading-spinner.component.html","./src/app/loading-spinner/loading-spinner.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/masks/ssn.directive.ts","./src/app/material/material.module.ts","./src/app/message.service.ts","./src/app/messages/messages.component.ts","./src/app/models/agent-sales.model.ts","./src/app/models/campaign-filters.model.ts","./src/app/models/daily-sale.model.ts","./src/app/models/enums/contact-type.enum.ts","./src/app/models/geocoding-response.model.ts","./src/app/models/import-model.model.ts","./src/app/models/index.ts","./src/app/models/payroll-filter.model.ts","./src/app/models/role.model.ts","./src/app/models/user-type.enum.ts","./src/app/my-information/my-information.component.ts","./src/app/my-information/my-information.component.html","./src/app/payroll/agent-payroll-view/agent-payroll-view.component.ts","./src/app/payroll/agent-payroll-view/agent-payroll-view.component.html","./src/app/payroll/confirm-autorelease-date-dialog/confirm-autorelease-date-dialog.component.ts","./src/app/payroll/confirm-autorelease-date-dialog/confirm-autorelease-date-dialog.component.html","./src/app/payroll/confirm-release-dialog/confirm-release-dialog.component.ts","./src/app/payroll/confirm-release-dialog/confirm-release-dialog.component.html","./src/app/payroll/confirm-release-dialog/gross-total-release-amount.pipe.ts","./src/app/payroll/override-expense-dialog/override-expense-dialog.component.ts","./src/app/payroll/override-expense-dialog/override-expense-dialog.component.html","./src/app/payroll/pay-cycle/components/confirm-unpaid-selection-dialog/confirm-unpaid-selection-dialog.component.ts","./src/app/payroll/pay-cycle/components/confirm-unpaid-selection-dialog/confirm-unpaid-selection-dialog.component.html","./src/app/payroll/pay-cycle/components/edit-pay-cycle/edit-pay-cycle.component.ts","./src/app/payroll/pay-cycle/components/edit-pay-cycle/edit-pay-cycle.component.html","./src/app/payroll/pay-cycle/components/pay-cycle-dialog/pay-cycle-dialog.component.ts","./src/app/payroll/pay-cycle/components/pay-cycle-dialog/pay-cycle-dialog.component.html","./src/app/payroll/pay-cycle/components/pay-cycle-tutorial-dialog/pay-cycle-tutorial-dialog.component.ts","./src/app/payroll/pay-cycle/components/pay-cycle-tutorial-dialog/pay-cycle-tutorial-dialog.component.html","./src/app/payroll/pay-cycle/pay-cycle.component.ts","./src/app/payroll/pay-cycle/pay-cycle.component.html","./src/app/payroll/pay-cycle/pay-cycle.service.ts","./src/app/payroll/paycheck-detail.guard.ts","./src/app/payroll/paycheck-detail/paycheck-detail.component.ts","./src/app/payroll/paycheck-detail/paycheck-detail.component.html","./src/app/payroll/paycheck-detail/paycheck-detail.service.ts","./src/app/payroll/paycheck-list/paycheck-list.component.ts","./src/app/payroll/paycheck-list/paycheck-list.component.html","./src/app/payroll/paycheck-list/paycheck.service.ts","./src/app/payroll/payroll-dialog/payroll-dialog.component.ts","./src/app/payroll/payroll-dialog/payroll-dialog.component.html","./src/app/payroll/payroll-filter-dialog/payroll-filter-dialog.component.ts","./src/app/payroll/payroll-filter-dialog/payroll-filter-dialog.component.html","./src/app/payroll/payroll-list/payroll-list.component.ts","./src/app/payroll/payroll-list/payroll-list.component.html","./src/app/payroll/payroll.module.ts","./src/app/payroll/payroll.service.ts","./src/app/payroll/schedule-auto-release-dialog/schedule-auto-release-dialog.component.ts","./src/app/payroll/schedule-auto-release-dialog/schedule-auto-release-dialog.component.html","./src/app/pipes/currency-input.pipe.ts","./src/app/pipes/payroll-detail-totals.pipe.ts","./src/app/pipes/phone.pipe.ts","./src/app/pipes/pipes.module.ts","./src/app/public-home/public-home.component.ts","./src/app/public-home/public-home.component.html","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/reset-password/reset-password.service.ts","./src/app/select-mapper/select-mapper.component.ts","./src/app/select-mapper/select-mapper.component.html","./src/app/session.service.ts","./src/app/shared/index.ts","./src/app/shared/models/state.model.ts","./src/app/shared/moment-extensions.ts","./src/app/shared/quill-config.ts","./src/app/shared/shared.module.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/sidenav/sidenav.service.ts","./src/app/token.interceptor.ts","./src/app/user-features/user-features.module.ts","./src/app/user-features/user.service.ts","./src/app/utils/animations.ts","./src/app/utils/boolean-property.ts","./src/app/utils/index.ts","./src/app/utils/number-property.ts","./src/app/validators/required-validator.directive.ts","./src/app/weather.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./contact/contact.module\": [\n\t\t\"./src/app/contact/contact.module.ts\",\n\t\t\"contact-contact-module\"\n\t],\n\t\"./imports/imports.module\": [\n\t\t\"./src/app/imports/imports.module.ts\",\n\t\t\"imports-imports-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import {Component, OnInit, Inject} from '@angular/core';\nimport { IAgent, User } from '@app/models';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { IRole, Role, RoleType, IRoleType } from '@app/models/role.model';\nimport { AgentService } from '@app/agent/agent.service';\n\ninterface DialogData {\n    user:User\n}\n\n@Component({\n    selector: 'vs-agent-rules-dialog',\n    templateUrl: './agent-rules-dialog.component.html',\n    styleUrls: ['./agent-rules-dialog.component.scss']\n})\nexport class AgentRulesDialogComponent implements OnInit {\n    roleType:IRoleType = Role;\n    form:FormGroup;\n    user:User;\n    roles:RoleType[];\n    hideSalesAdminField:boolean = true;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data:DialogData, \n        public ref:MatDialogRef<AgentRulesDialogComponent>,\n        private fb:FormBuilder,\n        private agentService:AgentService\n    ) {}\n\n    ngOnInit() {\n        this.user = this.data.user;\n\n        this.getDisabledStatus();\n\n        this.createForm();\n        this.agentService.getRoleTypes()\n            .subscribe(roles => {\n                roles.forEach((r, i, a) => {\n                    r.type = r.type.charAt(0).toUpperCase() + r.type.substring(1, r.type.length);\n                    a[i] = r;\n                });\n                this.roles = roles;\n            });\n    }\n\n    getDisabledStatus():void {\n        this.hideSalesAdminField = this.user.role.role >= this.roleType.companyAdmin;        \n    }\n\n    onNoClick():void {\n        this.ref.close();\n    }\n\n    saveForm():void { \n        if(this.form.invalid) return;\n        const dto = this.prepareModel();\n        this.ref.close(dto.role);\n    }\n\n    private prepareModel():User {\n        let user = this.user;\n        user.role.role = this.form.value.role;\n        user.role.isSalesAdmin = this.form.value.isSalesAdmin;\n        user.role.userId = user.role.userId || this.user.id;\n        return user;\n    }\n\n    private createForm():void {\n        this.user.role = this.user.role || {} as IRole;\n\n        this.form = this.fb.group({\n            role: this.fb.control(this.user.role.role || '', [Validators.required]),\n            isSalesAdmin: this.fb.control(this.user.role.isSalesAdmin)\n        });\n\n        this.form.controls.role.valueChanges.subscribe(() => {\n            this.getDisabledStatus();\n        });\n    }\n}\n","\n<div mat-dialog-title class=\"d-flex justify-content-between align-items-center\">\n    <h4 class=\"mb-0\">Permissions & Rules</h4>\n    <button mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n\n<mat-dialog-content class=\"mat-typography\">\n    <p>\n        The following are permissions that allow users specific actions that are not governed\n        by their overarching user role and they will be able to access each rule if enabled, regardless \n        of what user role is selected. \n    </p>\n    <hr />\n\n    <form [formGroup]=\"form\">\n        <mat-form-field>\n            <mat-select placeholder=\"Role\" formControlName=\"role\" required>\n                <mat-option *ngFor=\"let role of roles\" [value]=\"role.id\" class=\"text-capitalize\">\n                    {{role.type}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.get('role').hasError('required')\">\n                Please select a role.\n            </mat-error>\n        </mat-form-field>\n        <div *ngIf=\"!hideSalesAdminField\">\n            <mat-checkbox formControlName=\"isSalesAdmin\" [disabled]=\"hideSalesAdminField\">\n                <span class=\"font-weight-bold\">Sales Entry Admin</span>\n            </mat-checkbox>\n            - User can access and has read/write permissions on the \n            sales tracker. This also means that they're able to see all campaigns and can assign sales to all users. \n        </div>\n    </form>\n</mat-dialog-content>\n\n<mat-dialog-actions>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">\n        Cancel\n    </button>\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"saveForm()\">\n        Save\n    </button>\n</mat-dialog-actions>","import {Component, OnInit, ViewChildren, QueryList, ElementRef, OnDestroy, AfterViewChecked, ChangeDetectorRef} from '@angular/core';\nimport {AgentService} from '@app/agent/agent.service';\nimport { IAgent, User, ICampaign, UpdateAgentMetaData } from '@app/models';\nimport { Subject, Observable, Subscription, Observer } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport { AddAgentDialogComponent } from '@app/core/agents/dialogs/add-agent.component';\nimport { FloatBtnService } from '@app/fab-float-btn/float-btn.service';\nimport { map } from 'rxjs/operators';\nimport { FormGroup, FormBuilder, FormArray, Validators, AbstractControl, FormControl } from '@angular/forms';\nimport { EditAgentDialogComponent } from '@app/agent/edit-agent-dialog/edit-agent-dialog.component';\nimport { UserService } from '@app/user-features/user.service';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { MessageService } from '@app/message.service';\nimport { AgentRulesDialogComponent } from '@app/agent/agent-rules-dialog/agent-rules-dialog.component';\nimport { CurrencyPipe } from '@angular/common';\nimport { coerceNumberProperty } from '@app/utils';\nimport { UserRole } from '@app/models/role.model';\n\ninterface DataStore {\n    users:User[],\n    managers:IAgent[]\n}\n\nenum AgentDisplay {\n    Summary, \n    Detail\n}\n\ninterface UserView extends User {\n    display:AgentDisplay,\n    pairingsForm:FormGroup\n}\n\nconst PAIRING_KEYS:string[] = ['agentId', 'campaignId', 'commission', 'clientId', 'salesId', 'salesPairingsId'];\n\n@Component({\n    selector: 'vs-agent',\n    templateUrl: './agent.component.html',\n    styleUrls: ['./agent.component.scss'],\n    providers: [FloatBtnService, CurrencyPipe]\n})\nexport class AgentComponent implements OnInit, AfterViewChecked, OnDestroy {\n    user:User;\n    store:DataStore = {} as DataStore;\n    filteredUsers:User[];\n    users:Observable<UserView[]>;\n    users$:Subject<UserView[]> = new Subject<UserView[]>();\n    managers$:Subject<IAgent[]> = new Subject<IAgent[]>();\n    floatOpen$:Observable<boolean>;\n    form:FormGroup;\n\n    searchContext:string;\n    showSearchContextChip = false;\n    searchChipValue:string;\n\n    /** internal use only to sort users */\n    private _filteredUsers:UserView[];\n    sortAscending = true;\n\n    private _campaigns:ICampaign[];\n    campaigns$:Subject<ICampaign[]> = new Subject<ICampaign[]>();\n    campaigns:ICampaign[];\n    disableAddPairingBtn = false;\n    @ViewChildren('pairingRows') pairingRows:QueryList<ElementRef>;\n    private _pairingRowsSub:Subscription;\n\n    showInactive = true;\n\n    constructor(\n        private service:AgentService,\n        private session:SessionService,\n        private dialog:MatDialog,\n        private floatBtnService:FloatBtnService,\n        private campaignService:CampaignService,\n        private fb:FormBuilder,\n        private msg:MessageService,\n        private changeDetector:ChangeDetectorRef,\n        private userService:UserService,\n        private currencyPipe:CurrencyPipe,\n        private agentService:AgentService\n    ) {\n        this.floatOpen$ = this.floatBtnService.opened$.asObservable();\n        this.users = this.users$.asObservable();\n        this.users$.subscribe(next => this._filteredUsers = next);\n        this.campaigns$.subscribe(next => this.campaigns = next);\n    }\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n            this.refreshAgents();\n\n            this.campaignService.getCampaignsByClient(this.user.sessionUser.sessionClient)\n                .subscribe(campaigns => {\n                    this._campaigns = campaigns;\n                    this.campaigns$.next(this._campaigns);\n                });\n        });\n    }\n\n    ngAfterViewChecked() {\n        this._pairingRowsSub = this.pairingRows.changes.subscribe(() => {\n            if (!this.pairingRows.length || !this.disableAddPairingBtn)\n                return;\n            this.pairingRows.last.nativeElement.focus();\n            this.changeDetector.detectChanges();\n        });\n    }\n\n    ngOnDestroy() {\n        this._pairingRowsSub.unsubscribe();\n    }\n\n    showAddAgent():void {\n        this.floatBtnService.open();\n\n        this.dialog.open(AddAgentDialogComponent, {\n            width: '600px',\n            data: {\n                user: this.user\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            this.floatBtnService.close();\n            if (result == null || !result) return;\n            this.refreshAgents();\n        });\n    }\n\n    showEditRulesDialog(user:User):void {\n        this.dialog.open(AgentRulesDialogComponent, {\n            width: '500px',\n            data: {\n                user: user\n            },\n            autoFocus: false\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if (result == null) return;\n            this.session.showLoader();\n            this.userService.saveUserRoleEntity(result)\n                .subscribe(role => {\n                    this.session.hideLoader();\n                    this.store.users.forEach((u, i, a) => {\n                        if (u.id != role.userId) return;\n                        a[i].role = role;\n                    });\n\n                });\n        });\n    }\n\n    saveNewPairing(form:FormGroup, user:UserView) {\n        if (form.invalid) return;\n        this.disableAddPairingBtn = false;\n        const model = this.preparePairingFromForm(form);\n        model.agentId = model.agentId || user.agent.agentId;\n\n        const isDuplicateEntry = this.isDuplicateCampaignPairing(user.agent.pairings, model.campaignId);\n\n        if (isDuplicateEntry) return;\n\n        this.session.showLoader();\n\n        this.service.saveAgentSalesPairing(model, model.agentId)\n            .subscribe(result => {\n                user.agent.pairings[user.agent.pairings.length - 1] = result;\n\n                this.resetPairingFormGroup(form, result);\n                this.session.hideLoader();\n            });\n    }\n\n    /**\n     * Updates an existing sales pairing entity. This is used explicitly separate from the AgentComponent.saveNewPairing\n     * because it makes different changes to the UI.\n     * \n     * @param form:@type FormGroup Form that matches the corresponding ISalesPairing entity.\n     * @param user:@type UserView The agent that owns this entity.\n     */\n    savePairingUpdate(form:FormGroup, user:UserView) {\n        if (form.invalid) return;\n        const model = this.preparePairingFromForm(form);\n\n        this.session.showLoader();\n        this.service.saveAgentSalesPairing(model, model.agentId)\n            .subscribe(result => {\n                user.agent.pairings.forEach((p:ISalesPairing, i:number) => {\n                    if (p.salesPairingsId != result.salesPairingsId) return;\n                    user.agent.pairings[i] = result;\n                });\n\n                this.resetPairingFormGroup(form, result);\n                this.session.hideLoader();\n            });\n    }\n\n    toggleAgents(event:MatSlideToggleChange):void {\n        const showAll:boolean = event.checked;\n\n        if (showAll) {\n            this.users$.next(this.store.users as UserView[]);\n            this.showInactive = true;\n        } else {\n            this.hideInactiveAgents();\n            this.showInactive = false;\n        }\n\n    }\n\n    private hideInactiveAgents() {\n        const filtered:UserView[] = this.store.users.filter(u => {\n            return u.agent.isActive == true;\n        }) as UserView[];\n        this.users$.next(filtered);\n    }\n\n    private resetPairingFormGroup(form:FormGroup, pairing:ISalesPairing):void {\n        form.patchValue({\n            salesPairingsId: pairing.salesPairingsId,\n            salesId: pairing.salesId,\n            campaignId: pairing.campaignId,\n            clientId: pairing.clientId,\n            agentId: pairing.agentId\n        }, { emitEvent: false });\n\n        const formatCommission = this.currencyPipe.transform(pairing.commission);\n        (<FormControl>form.get('commission')).setValue(formatCommission, { emitEvent: false, emitViewToModelChange: false });\n    }\n\n    private isDuplicateCampaignPairing(pairings:ISalesPairing[], proposedCampaignId:number):boolean {\n        const existing = _.find(pairings, (p:ISalesPairing) => {\n            return p.campaignId == proposedCampaignId;\n        });\n\n        if (existing) \n            this.msg.addMessage('This agent already has a code for that campaign.', 'dismiss', 5000);\n\n        return existing != null;\n    }\n\n    cancelNewPairing(form:FormGroup, user:UserView, index:number) {\n        form.patchValue({\n            campaignId: null,\n            salesId: null\n        });\n        form.reset();\n        user.agent.pairings.splice(index, 1);\n        (<FormArray>form.parent).removeAt(index);\n        this.disableAddPairingBtn = false;\n    }\n\n    addEmptyPairing(formArray:FormArray, existingPairings:ISalesPairing[]):void {\n        this.disableAddPairingBtn = true;\n        if (existingPairings != null)\n            existingPairings.push({} as ISalesPairing);\n        else \n            existingPairings = [{} as ISalesPairing];\n        formArray.push(this.buildPairingsFormGroup(PAIRING_KEYS, {} as ISalesPairing));        \n\n        // set focus on this form new form element, so that the form scrolls to where it needs to \n        // for the user.\n    }\n\n    private preparePairingFromForm(form:FormGroup):ISalesPairing {\n        let commission = form.value.commission != null \n            ? form.value.commission.toString().slice(1, form.value.commission.toString().length)\n            : null;\n\n        if (commission != null) \n            commission = coerceNumberProperty(commission);\n        \n        return {\n            salesPairingsId: form.value.salesPairingsId || 0,\n            agentId: form.value.agentId,\n            clientId: form.value.clientId || this.user.sessionUser.sessionClient,\n            campaignId: form.value.campaignId,\n            commission: commission,\n            salesId: form.value.salesId\n        };\n    }\n\n    private createPairingsForm(pairings:ISalesPairing[]):FormGroup {\n        const formArray:FormArray = this.fb.array([]);\n        pairings.forEach(p => formArray.push(this.buildPairingsFormGroup(PAIRING_KEYS, p)));\n        return this.fb.group({array:formArray});\n    }\n\n    private buildPairingsFormGroup(keys:string[], p:ISalesPairing):FormGroup {\n        const group = this.fb.group({});\n        keys.forEach(k => {\n            let validatorFn:(control:AbstractControl) => {};\n            let formControl:FormControl;\n\n            // normalize\n            const key = k.trim().toLowerCase();\n\n            if (key == 'salesid' || key == 'campaignid') {\n                validatorFn = Validators.required;\n                formControl = this.fb.control(p[k] || '', [validatorFn]);\n            } else if (key == 'commission') {\n                const formattedValue = p[k] != null ? this.currencyPipe.transform(p[k]) : null;\n                formControl = this.fb.control(formattedValue || '', { updateOn: 'blur' });\n            } else {\n                formControl = this.fb.control(p[k] || '');\n            }\n            group.addControl(k, formControl);\n        });\n        return group;\n    }\n\n    updateCommission(user:UserView, newValue:any, i:number):void {\n        const form = user.pairingsForm.get(['array', i]) as FormGroup;\n\n        if (newValue == null) {\n            (<FormControl>form.get('commission'))\n                .setValue(null, { emitEvent: false, emitViewToModelChange: false });\n            return;\n        }\n\n        if (isNaN(newValue.toString().charAt(0)))\n            newValue = newValue.slice(1, newValue.length);\n\n        if (isNaN(newValue)) {\n            (<FormControl>form.get('commission'))\n                .setValue(null, { emitEvent: false, emitViewToModelChange: false });\n            this.msg.addMessage('Numbers only please.', 'dismiss', 2500);\n            return;\n        }\n\n        const numVal = coerceNumberProperty(newValue);\n        const formattedValue = this.currencyPipe.transform(numVal);\n        (<FormControl>form.get('commission'))\n                .setValue(formattedValue, { emitEvent: false, emitViewToModelChange: false });\n\n        // if (form.invalid) return;\n\n        // this.savePairingUpdate(form, user);\n    }\n\n    /**\n     * Fetches agents... assuming that all agents must have an user account. Also, that user account \n     * has a role and the user/agent cannot have a UserRole of System Admin. Effectively, we want to ensure that \n     * we are hiding all system admins from the agents page as these users should not be sale agents anyways. \n     */\n    private refreshAgents():void {\n        this.service.getUserAgentsByClient(this.user.sessionUser.sessionClient)\n            .pipe(map(this.setMoments))\n            .subscribe(users => {\n                users = users.filter((u, i, a) => {\n                    // if agent entity is null or this is user is a system admin, remove from the list\n                    if (u.agent == null || u.role.role > UserRole.COMPANY_ADMIN) return;\n\n                    // check if the logged in user is allowed to see company admins..\n                    // only other company admins should be able to see them... \n                    if (u.role.role === UserRole.COMPANY_ADMIN && this.user.role.role < UserRole.COMPANY_ADMIN) return; \n\n                    return u.agent != null;\n                });\n                // _.remove(users, u => u.agent == null);\n\n                users.forEach((u:User, i:number) => {\n                    if (u.detail == null) \n                        users[i].detail = {\n                            userId: u.id,\n                            street: null, \n                            street2: null,\n                            city: null,\n                            state: null,\n                            zip: null,\n                            phone: null,\n                            birthDate: null,\n                            ssn: null,\n                            bankRouting: null,\n                            bankAccount: null\n                        };\n                    \n                    if (u.agent.pairings != null && u.agent.pairings.length)\n                        users[i].pairingsForm = this.createPairingsForm(u.agent.pairings);\n                    else\n                        users[i].pairingsForm = this.createPairingsForm([]);\n                });\n\n                this.store.users = _.orderBy(users, ['lastName', 'firstName'], ['asc', 'asc']);\n                this.hideInactiveAgents();\n                // this.users$.next(this.store.users as UserView[]);\n                this.setManagers(this.store.users);\n                this.session.hideLoader();\n            });\n    }\n\n    private setMoments(users:UserView[]):UserView[] {\n        if (!users)\n            return users;\n        users.forEach(user => {\n            if (user.agent == null) return;\n            user.agent.createdAt = moment(user.agent.createdAt);\n            user.display = AgentDisplay.Summary;\n        });\n        return users;\n    }\n\n    private setManagers(users:User[]):void {\n        this.store.managers = _.filter(users, user => {\n            return user.agent.isManager;\n        }) as IAgent[];\n        this.managers$.next(this.store.managers);\n    }\n\n    replaceCharAt(input:string, start:number, end:number, replaceChar:string) {\n        const counter = end - start;\n        let calculatedReplacement:string;\n        for (let i = 0; i < counter; i++) {\n            calculatedReplacement += replaceChar;\n        }\n\n        return input.substr(start, end) + calculatedReplacement + input.substr(end, calculatedReplacement.length);\n    }\n\n    editAgent(user:UserView):void {\n        const displayType = user.display;\n\n        this.dialog.open(EditAgentDialogComponent, {\n            width: '600px',\n            data: {\n                user: this.user,\n                agent: user,\n                managers: this.store.managers\n            }\n        })\n        .afterClosed()\n        .subscribe((result:UpdateAgentMetaData) => {\n            if (result == null) return; /** If the result is undefined, the user canceled the changes. */\n            this.session.showLoader();\n\n            if (result.updateDetail) {\n                this.userService.saveDetailEntity(result.user.detail)\n                    .then(detail => {\n                        user.detail = detail;\n                        this.session.hideLoader();\n                    });\n            }\n\n            if (result.updateAgent) {\n                this.agentService.updateAgent(result.user.agent)\n                    .subscribe(agent => {\n                        user.agent = agent;\n                        this.session.hideLoader();\n                    });\n            }\n\n            if (result.updateUser) {\n                const dto:User = result.user;\n                dto.id = user.id;\n                if (dto.detail) delete dto.detail;\n                if (dto.agent) delete dto.agent;\n\n                this.userService.updateUserEntity(dto)\n                    .then(res => {\n                        const display = user.display;\n                        const detail = this.user.detail;\n                        const agent = this.user.agent;\n                        user = <UserView>res;\n                        user.display = display;\n                        user.detail = detail;\n                        user.agent = agent;\n\n                        const idx = this.store.users.findIndex(u => u.id == user.id);\n                        this.store.users[idx] = user;\n                        if (user.agent.pairings) {\n                            user.pairingsForm = this.createPairingsForm(user.agent.pairings);\n                        }\n                        this.users$.next(this.store.users as UserView[]);\n                        this.setManagers(this.store.users);\n\n                        this.session.hideLoader();\n                    });\n            }\n        });    \n    }\n\n    searchAgents(event) {\n        this.searchContext = event.target.value;\n\n        const agentsResult = _.filter(this.store.users, (u:User) => {\n            return u.firstName.concat(u.lastName).toLowerCase().trim().includes(this.searchContext);\n        });\n\n        this.users$.next(agentsResult as UserView[]);\n    }\n\n    handleSearchContext() {\n        if (this.searchContext != null) {\n            this.searchChipValue = this.searchContext;\n            this.searchContext = null;\n            this.showSearchContextChip = true;\n        }            \n    }\n\n    removeSearchChip() {\n        this.searchChipValue = null;\n        this.showSearchContextChip = false;\n    }\n\n    toggleSortUsers() {\n        const direction = this.sortAscending ? 'desc' : 'asc';\n        this._filteredUsers = _.orderBy(this._filteredUsers, ['lastName', 'firstName'], [direction, 'asc']);\n        this.users$.next(this._filteredUsers);\n        this.sortAscending = !this.sortAscending;\n    }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content class=\"d-flex justify-content-between\">\n                    <h3>Agents</h3>\n                    <div>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Search Agents\" (keyup)=\"searchAgents($event)\" />\n                            <i class=\"mdi mdi-magnify\" matSuffix></i>\n                        </mat-form-field>\n                        <button type=\"button\" class=\"mx-3\" mat-icon-button (click)=\"toggleSortUsers()\">\n                            <mat-icon>sort_by_alpha</mat-icon>\n                            <mat-icon>{{sortAscending ? 'arrow_drop_up' : 'arrow_drop_down'}}</mat-icon>\n                        </button>\n                        <mat-slide-toggle (change)=\"toggleAgents($event)\" [checked]=\"false\">\n                            {{ showInactive ? 'Hide Inactive' : 'Show Inactive' }}\n                        </mat-slide-toggle>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-6 py-2\" *ngFor=\"let user of users | async\">\n            <div class=\"card hoverable\">\n                <div \n                    class=\"card-header text-white d-flex align-items-end justify-content-between\" \n                    [ngClass]=\"{'bg-vs-primary': user.agent.isActive, 'bg-vs-muted': !user.agent.isActive}\"\n                >\n                    <ul class=\"nav nav-tabs card-header-tabs\">\n                        <li class=\"nav-item\">\n                            <button mat-button class=\"nav-link\" [class.active]=\"user.display === 0\" (click)=\"user.display = 0\">Summary</button>\n                        </li>\n                        <li class=\"nav-item\" *ngIf=\"user.detail != null\">\n                            <button mat-button class=\"nav-link\" [class.active]=\"user.display === 1\" (click)=\"user.display = 1\">Detail</button>\n                        </li>\n                        <li class=\"nav-item\">\n                            <button mat-button class=\"nav-link\" [class.active]=\"user.display === 2\" (click)=\"user.display = 2\">Sales</button>\n                        </li>\n                    </ul>\n                    <div style=\"min-height:40px;\">\n                        <button class=\"p-0 hover-item\"\n                            type=\"button\" mat-icon-button \n                            [matMenuTriggerFor]=\"agentMenu\"\n                            *ngIf=\"user.agent.isActive\"\n                        >\n                            <i class=\"mdi mdi-dots-vertical-circle-outline\"></i>\n                        </button>\n                        <mat-menu #agentMenu=\"matMenu\">\n                            <button mat-menu-item (click)=\"showEditRulesDialog(user)\">\n                                <mat-icon>vpn_key</mat-icon>\n                                <span>Rules</span>\n                            </button>\n                            <button mat-menu-item (click)=\"editAgent(user)\">\n                                <mat-icon>edit</mat-icon>\n                                <span>Edit</span> \n                            </button>\n                        </mat-menu>\n                    </div>\n                </div>\n                <div class=\"card-body\" [class.card-body-auto]=\"user.display === 2\">\n                    <ng-container *ngIf=\"user.display === 0\">\n                        <div class=\"d-flex flex-column justify-content-center align-items-center\" style=\"width:100%;height:100%;\">\n                            <h3 class=\"card-title\" [class.text-muted]=\"!user.agent.isActive\">\n                                {{user.firstName}} {{user.lastName}} <small *ngIf=\"!user.agent.isActive\">(Inactive)</small>\n                            </h3>\n                            <div class=\"d-flex align-items-center text-muted\">\n                                <i class=\"material-icons\">account_box</i>\n                                {{user.username}}\n                            </div>\n                            <div class=\"card-text\" *ngIf=\"user.detail\">Birthdate: {{user.detail.birthDate | date:'shortDate'}}</div>\n                            <div class=\"card-text\">Anniversary: {{ user.createdAt | date:'shortDate' }}</div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"user.display === 1\">\n                        <p class=\"font-weight-light font-italic text-muted\">{{user.firstName}} {{user.lastName}}</p>\n                        <p *ngIf=\"user.detail.street == null && user.detail.phone == null\">\n                            <button type=\"button\" class=\"btn btn-link\" (click)=\"editAgent(user)\">\n                                Add Details\n                            </button>\n                        </p>\n                        <div *ngIf=\"user.detail && user.detail.street != null\">\n                            <span class=\"font-weight-bold\">Address: </span>\n                            <address class=\"font-weight-light\">\n                                {{user.detail.street}}\n                                {{user.detail.street2}}\n                                {{user.detail.city}} {{user.detail.state}} {{user.detail.zip}}\n                            </address>\n                        </div>\n                        <div *ngIf=\"user.detail && user.detail.phone != null\">\n                            <span class=\"font-weight-bold\">Phone: </span>\n                            <span class=\"font-weight-light\">{{user.detail.phone | phone}}</span>\n                        </div>\n                        <div *ngIf=\"user.detail && user.detail.ssn != null && user.detail.ssn > 0\">\n                            <span class=\"font-weight-bold\">SSN: </span>\n                            <span class=\"font-weight-light\">{{replaceCharAt(user.detail.ssn, 0, 4, 'X')}}</span>\n                        </div>\n                        <div *ngIf=\"user.detail && user.detail.bankRouting\">\n                            <span class=\"font-weight-bold\">Routing: </span>\n                            <span class=\"font-weight-light\">{{user.detail.bankRouting}}</span>\n                        </div>\n                        <div *ngIf=\"user.detail && user.detail.bankAccount\">\n                            <span class=\"font-weight-bold\">Account: </span>\n                            <span class=\"font-weight-light\">{{user.detail.bankAccount}}</span>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"user.display === 2\" [formGroup]=\"user.pairingsForm\">\n                        <div class=\"d-flex justify-content-between align-items-center mb-2\">\n                            <p class=\"font-weight-light font-italic text-muted\">\n                                {{user.firstName}} {{user.lastName}}\n                            </p>\n                            <button type=\"button\" \n                                mat-button \n                                class=\"float-right\" \n                                (click)=\"addEmptyPairing(user.pairingsForm.controls['array'], user.agent.pairings)\"\n                                [disabled]=\"disableAddPairingBtn\"\n                                *ngIf=\"user.agent.isActive\"\n                            >\n                                <mat-icon>add</mat-icon> Pairing\n                            </button>\n                        </div>\n                        \n                        <div formArrayName=\"array\" *ngIf=\"user.agent.pairings.length; else noPairings\">\n                            <mat-card *ngFor=\"let pairing of user.agent.pairings; let i=index\">\n                                <mat-card-content [formGroupName]=\"i\" class=\"mb-0\">\n                                    <div class=\"row\">\n                                        <div class=\"col-md-4\">\n                                            <mat-form-field class=\"wp-100\">\n                                                <mat-select placeholder=\"Campaign\" formControlName=\"campaignId\" required>\n                                                    <mat-option *ngFor=\"let campaign of campaigns\" [value]=\"campaign.campaignId\">\n                                                        {{campaign.name}}\n                                                    </mat-option>\n                                                </mat-select>\n                                                <mat-error *ngIf=\"user.pairingsForm.controls['array'].controls[i].hasError('required')\">\n                                                    Please select a campaign.\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-md-4 d-flex\">\n                                            <mat-form-field class=\"wp-100 flex-grow-1\">\n                                                <input matInput type=\"text\" placeholder=\"Code\" formControlName=\"salesId\" required #pairingRows />\n                                                <mat-error *ngIf=\"user.pairingsForm.controls['array'].controls[i].hasError('required')\">\n                                                    Please enter a sales ID.\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-md-4\">\n                                            <mat-form-field class=\"wp-100\">\n                                                <input type=\"text\" matInput placeholder=\"Commission\" formControlName=\"commission\" \n                                                    (ngModelChange)=\"updateCommission(user, $event, i)\" />\n                                                <mat-icon matSuffix\n                                                    color=\"primary\"\n                                                    class=\"clickable\"\n                                                    *ngIf=\"user.pairingsForm.controls['array'].controls[i].value.salesPairingsId > 0 && user.pairingsForm.controls['array'].controls[i].dirty\"\n                                                    (click)=\"savePairingUpdate(user.pairingsForm.controls['array'].controls[i], user)\"\n                                                >save</mat-icon>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </mat-card-content>\n                                <mat-card-actions class=\"d-flex\" *ngIf=\"pairing.salesPairingsId == null || pairing.salesPairingsId < 1\">\n                                    <button type=\"button\" mat-button \n                                        *ngIf=\"user.pairingsForm.controls['array'].controls[i].touched\" \n                                        (click)=\"cancelNewPairing(user.pairingsForm.controls['array'].controls[i], user, i)\"\n                                    >\n                                        <mat-icon>clear</mat-icon> Cancel\n                                    </button>\n                                    <button type=\"button\" mat-button color=\"primary\" \n                                        [disabled]=\"user.pairingsForm.invalid\" \n                                        (click)=\"saveNewPairing(user.pairingsForm.controls['array'].controls[i], user)\"\n                                    >\n                                        <mat-icon>save</mat-icon> Save\n                                    </button>\n                                </mat-card-actions>\n                            </mat-card>\n                        </div>\n                        <ng-template #noPairings>\n                            <h5 class=\"text-muted\" *ngIf=\"user.agent.isActive\">\n                                Click the <span class=\"font-italic\">+ Pairings</span> button to get started.\n                            </h5>\n                        </ng-template>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n        <ng-container *ngIf=\"(users|async) == null\">\n            <div class=\"col-md-12\">\n                <h3 class=\"font-italic text-muted text-center\">You do not have any agents assigned to you.</h3>\n            </div>\n        </ng-container>\n    </div>\n</div>\n\n\n<vs-float-button\n    *ngIf=\"user?.role?.role > 5\"\n    mat-icon=\"add\"\n    (callback)=\"showAddAgent()\"\n    [isOpen]=\"floatOpen$\"\n></vs-float-button>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {IAgent, User} from '@app/models';\nimport {Observable, throwError, BehaviorSubject} from 'rxjs';\nimport {AuthService} from '@app/auth.service';\nimport {catchError, tap} from 'rxjs/operators';\nimport {ISalesPairing} from '@app/models/sales-pairings.model';\nimport {RoleType} from '@app/models/role.model';\nimport { environment } from '@env/environment';\nimport { Observable as ApolloOb } from 'apollo-link';\nimport { Buoy } from '@app/buoy/buoy';\nimport gql from 'graphql-tag';\nimport { QueryResult } from '@app/buoy/operations/query/query-result';\nimport { QueryError } from '@app/buoy/operations/query/query-error';\n\ninterface DataStore {\n    agents: IAgent[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AgentService {\n    _agents:IAgent[];\n    api: string;\n    store: DataStore;\n    graphql = environment.graphql;\n\n    agents$ = new BehaviorSubject<IAgent[]>(this._agents);\n\n\n    constructor(private auth: AuthService, private http: HttpClient, private buoy: Buoy) {\n        this.api = this.auth.apiUrl + 'api' || '';\n    }\n\n    private _getAgents(): ApolloOb<QueryResult<IAgent[]> | QueryError> {\n        return this.buoy.query<IAgent[]>(\n            gql`\n                {\n                    agents {\n                        agentId\n                        firstName\n                        lastName\n                        clientId\n                        managerId\n                        isManager\n                        isActive\n                    }\n                }\n            `\n        );\n    }\n\n    fetchGraphqlAgents() {\n        this._getAgents().subscribe(resp => {\n            this._agents = resp.data.agents;\n            this.agents$.next(this._agents);\n        });\n    }\n\n    /**\n     * Gets a list of agents by the client id.\n     *\n     * @param clientId\n     */\n    getUserAgentsByClient(clientId: number): Observable<User[]> {\n        const url = `${this.api}/clients/${clientId}/user-agents`;\n        return this.http.get<User[]>(url).pipe(catchError(this.handleError));\n    }\n\n    getAgentsByClient(clientId: number): Observable<IAgent[]> {\n        const url = `${this.api}/clients/${clientId}/agents`;\n        return this.http.get<IAgent[]>(url)\n            .pipe(\n                tap(next => this._agents = next),\n                catchError(this.handleError)\n            );\n    }\n\n    getAgentByUser(clientId: number, userId: number): Observable<User> {\n        return this.http\n            .get<User>(`${this.api}/clients/${clientId}/users/${userId}/agents`)\n            .pipe(catchError(this.handleError));\n    }\n\n    updateUserWithRelationships(clientId: number, user: User): Observable<User> {\n        const url = `${this.api}/clients/${clientId}/users/${user.id}`;\n        return this.http.post<User>(url, user).pipe(catchError(this.handleError));\n    }\n\n    checkUsernameAvailability(username: string): Observable<boolean> {\n        return this.http.get<boolean>(`${this.api}/usernames?u=${username}`).pipe(catchError(this.handleError));\n    }\n\n    /**\n     * Return an array of sales pairings entities by agent id.\n     *\n     * @param agentId\n     * @param clientId\n     */\n    getAgentSalesPairings(agentId: number, clientId: number): Observable<ISalesPairing[]> {\n        return this.http\n            .get<ISalesPairing[]>(`${this.api}/sales-pairings/clients/${clientId}/agents/${agentId}/sales-pairings`)\n            .pipe(catchError(this.handleError));\n    }\n\n    getSalesPairingsByClient(clientId: number): Observable<ISalesPairing[]> {\n        return this.http\n            .get<ISalesPairing[]>(`${this.api}/sales-pairings/clients/${clientId}`)\n            .pipe(catchError(this.handleError));\n    }\n\n    /**\n     * Save a list of agent sales pairings.\n     *\n     * @param pairings\n     * @param agentId\n     */\n    saveAgentSalesPairings(pairings: ISalesPairing[], agentId: number): Observable<ISalesPairing[]> {\n        return this.http\n            .post<ISalesPairing[]>(`${this.api}/sales-pairings/agents/${agentId}/sales-pairings`, {pairings: pairings})\n            .pipe(catchError(this.handleError));\n    }\n\n    saveAgentSalesPairing(pairing: ISalesPairing, agentId: number): Observable<ISalesPairing> {\n        const url =\n            pairing.salesPairingsId > 0\n                ? `${this.api}/agents/${agentId}/sales-pairings/${pairing.salesPairingsId}`\n                : `${this.api}/agents/${agentId}/sales-pairings`;\n        return this.http.post<ISalesPairing>(url, pairing).pipe(catchError(this.handleError));\n    }\n\n    deleteAgentSalesPairings(pairingId: number): Observable<void> {\n        return this.http.delete<void>(`${this.api}/sales-pairings/${pairingId}`).pipe(catchError(this.handleError));\n    }\n\n    getRoleTypes(includeInactive: boolean = false): Observable<RoleType[]> {\n        return this.http.get<RoleType[]>(`${this.api}/role-types?inactive=${includeInactive}`);\n    }\n\n    updateAgent(agent:IAgent):Observable<IAgent> {\n        return this.http.post(this.api + '/agents/' + agent.agentId, agent);\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            console.log('Error occurred: ', error.error.message || error.message);\n        } else {\n            console.error(`Server returned error code ${error.status}: ${error.error}`);\n        }\n        return throwError('There was a network error. Please try again.');\n    }\n}\n","import {Component, OnInit, Inject} from '@angular/core';\nimport {User, UpdateAgentMetaData} from '@app/models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { IState, States } from '@app/shared/models/state.model';\nimport { map } from 'rxjs/operators';\n\ninterface DialogData {\n    user: User, // the current logged in user\n    agent: User, // the agent we are going to be editing\n    managers:User[] \n}\n\n@Component({\n    selector: 'vs-edit-agent-dialog',\n    templateUrl: './edit-agent-dialog.component.html',\n    styleUrls: ['./edit-agent-dialog.component.scss']\n})\nexport class EditAgentDialogComponent implements OnInit {\n\n    form:FormGroup;\n    userAgent:User;\n    managers:User[];\n    states:IState[] = States.$get();\n    userAgentDict:{ [key:string]:any };\n\n    update:UpdateAgentMetaData = {} as UpdateAgentMetaData;\n\n    constructor(\n        private fb:FormBuilder, \n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        public ref:MatDialogRef<EditAgentDialogComponent>\n    ) {}\n\n    ngOnInit() {\n        this.userAgent = this.data.agent;\n        this.managers = this.data.managers;\n        this.managers.unshift({\n            id: -1,\n            firstName: 'No',\n            lastName: 'Manager'\n        } as User);\n\n        this.createForm();\n\n        this.userAgentDict = this.flattenObject(this.userAgent);\n    }\n\n    onNoClick():void {\n        this.ref.close();\n    }\n\n    saveAgentChanges():void {\n        this.update.user = this.getChangedProperties(this.prepareModel());\n        this.ref.close(this.update);\n    }\n\n    private flattenObject(item:any):any {\n        let result = {};\n\n        for (const p in item) {\n            if (this.isObject(item[p])) {\n                result = Object.assign(result, item[p]);\n            } else {\n                result[p] = item[p];\n            }\n        }\n\n        return result;\n    }\n\n    private isObject(test:any):boolean {\n        const type = typeof test;\n        return type === 'function' || type === 'object';\n    }\n\n    private getChangedProperties(model:any, key:string = null) {\n        const tempModel = key == null ? model : model[key];\n\n        for (const p in tempModel) {\n\n            if (this.isObject(tempModel[p]) && tempModel[p] != null) {\n                tempModel[p] = this.getChangedProperties(tempModel[p]);\n            } \n        }\n\n        if (key != null) {\n            model[key] = tempModel;\n        } else {\n            model = tempModel;\n        }\n\n        if (model) {\n            if (model.detail && !this.isEmptyObject(model.detail)) {\n                model.detail.userDetailId = this.userAgent.detail.userDetailId;\n                if (model.detail.ssn == 0) delete model.detail.ssn;\n                this.update.updateDetail = true;\n            } else {\n                delete model.detail;\n            }\n\n            if (model.agent && !this.isEmptyObject(model.agent)) {\n                model.agent.agentId = this.userAgent.agent.agentId;\n                this.update.updateAgent = true;\n            } else {\n                delete model.agent;\n            }\n\n            this.update.updateUser = true;\n        }\n\n        return model;\n    }\n\n    private isEmptyObject(obj:any):boolean {\n        for (const o in obj) {\n            if (obj.hasOwnProperty(o)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /** Creates a form that has separate form groups for the user entity, user_detail entity and the agent entity. */\n    private createForm():void {\n        const managerId = this.userAgent.agent.managerId != null \n            ? this.userAgent.agent.managerId\n            : -1;\n        this.form = this.fb.group({\n            user: this.fb.group({\n                firstName: this.fb.control(this.userAgent.firstName, [Validators.required]),\n                lastName: this.fb.control(this.userAgent.lastName, [Validators.required]),\n                username: this.fb.control(this.userAgent.username, [Validators.required]),\n                email: this.fb.control(this.userAgent.email, [Validators.required, Validators.email]),\n                active: this.fb.control(this.userAgent.active)\n            }),\n            detail: this.fb.group({\n                street: this.fb.control(this.userAgent.detail.street, [Validators.required]),\n                street2: this.fb.control(this.userAgent.detail.street2),\n                city: this.fb.control(this.userAgent.detail.city, [Validators.required]),\n                state: this.fb.control(this.userAgent.detail.state, [Validators.required]),\n                zip: this.fb.control(this.userAgent.detail.zip, [Validators.required, Validators.pattern('[0-9]+')]),\n                ssn: this.fb.control(this.userAgent.detail.ssn || ''),\n                birthDate: this.fb.control(this.userAgent.detail.birthDate, [Validators.required]),\n                phone: this.fb.control(this.userAgent.detail.phone, [Validators.required, Validators.pattern('[0-9]+')]),\n                routing: this.fb.control(this.userAgent.detail.bankRouting),\n                account: this.fb.control(this.userAgent.detail.bankAccount)\n            }),\n            agent: this.fb.group({\n                manager: this.fb.control(managerId),\n                isManager: this.fb.control(this.userAgent.agent.isManager),\n                active: this.fb.control(this.userAgent.agent.isActive)\n            })\n        });\n    }\n\n    private prepareModel():User {\n        return {\n            id: this.userAgent.id,\n            firstName: this.form.value.user.firstName,\n            lastName: this.form.value.user.lastName,\n            email: this.form.value.user.email,\n            username: this.form.value.user.username,\n            active: this.form.value.user.active,\n            detail: {\n                userDetailId: this.userAgent.detail.userDetailId || 0,\n                userId: this.userAgent.detail.userId,\n                street: this.form.value.detail.street,\n                street2: this.form.value.detail.street2,\n                city: this.form.value.detail.city,\n                state: this.form.value.detail.state,\n                zip: this.form.value.detail.zip,\n                ssn: +this.form.value.detail.ssn,\n                birthDate: this.form.value.detail.birthDate,\n                phone: +this.form.value.detail.phone,\n                bankRouting: this.form.value.detail.routing,\n                bankAccount: this.form.value.detail.account\n            },\n            agent: {\n                agentId: this.userAgent.agent.agentId || 0,\n                firstName: this.form.value.user.firstName,\n                lastName: this.form.value.user.lastName,\n                managerId: this.form.value.agent.manager,\n                isManager: this.form.value.agent.isManager,\n                isActive: this.form.value.agent.active\n            }\n        };\n    }\n}\n","<!-- <mat-dialog-container> -->\n    <h3 mat-dialog-title>\n        Edit Agent\n        <button type=\"button\" class=\"float-right\" mat-icon-button (click)=\"onNoClick()\" tabindex=\"-1\">\n            <mat-icon>clear</mat-icon>\n        </button>\n    </h3>\n    <p class=\"text-muted\">\n        All fields denoted with * are required.\n    </p>\n    <mat-dialog-content>\n        <form [formGroup]=\"form\">\n            <ng-container formGroupName=\"user\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"firstName\" placeholder=\"First Name\" required /> \n                            <mat-error *ngIf=\"form.get('user').get('firstName').hasError('required')\">\n                                Please enter a first name.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"lastName\" placeholder=\"Last Name\" required />\n                            <mat-error *ngIf=\"form.get('user').get('lastName').hasError('required')\">\n                                Please enter a last name.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6 py-3\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"username\" placeholder=\"Username\" required readonly />\n                            <mat-hint>Please contact a system admin to edit a username</mat-hint>\n                            <mat-error *ngIf=\"form.get('user').get('username').hasError('required')\">\n                                Please enter a username.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6 d-flex flex-column\">\n                        <mat-checkbox formControlName=\"active\">Portal Access</mat-checkbox>\n                        <span class=\"text-muted font-italic font-sm\">Allow user to login to online portal</span>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container formGroupName=\"detail\">\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"street\" placeholder=\"Street Address\" required />\n                            <mat-error *ngIf=\"form.get('detail').get('street').hasError('required')\">\n                                Please enter a street address.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"street2\" placeholder=\"Apt/Unit/Suite\" />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"city\" placeholder=\"City\" required />\n                            <mat-error *ngIf=\"form.get('detail').get('city').hasError('required')\">\n                                Please enter a city.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field>\n                            <mat-select placeholder=\"State\" formControlName=\"state\" required>\n                                <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\n                                    {{state.name}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"form.get('detail').get('state').hasError('required')\">\n                                Please select a state.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput formControlName=\"zip\" placeholder=\"Postal Code\" required />\n                            <mat-error *ngIf=\"form.get('detail').get('zip').hasError('required')\">\n                                Please enter a postal code.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input matInput [matDatepicker]=\"birthDatePicker\" placeholder=\"Birth Date\" formControlName=\"birthDate\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"birthDatePicker\"></mat-datepicker-toggle>\n                            <mat-datepicker #birthDatePicker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput placeholder=\"Social Security Number\" formControlName=\"ssn\" />\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput placeholder=\"Phone\" formControlName=\"phone\" required />\n                            <mat-error *ngIf=\"form.get('detail').get('phone').hasError('required')\">\n                                Please enter a phone number.\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput placeholder=\"Bank Routing\" formControlName=\"routing\" />\n                            <mat-hint>\n                                Use if agent has direct deposit setup.\n                            </mat-hint>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <input type=\"text\" matInput placeholder=\"Bank Account\" formControlName=\"account\" />\n                            <mat-hint>\n                                Use if agent has direct deposit setup.\n                            </mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </ng-container>\n            <ng-container formGroupName=\"agent\">\n                <div class=\"row py-4\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field>\n                            <mat-select placeholder=\"Manager\" formControlName=\"manager\">\n                                <mat-option *ngFor=\"let manager of managers\" [value]=\"manager.id\">\n                                    {{manager.firstName}} {{manager.lastName}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <p class=\"text-muted\">\n                            Select the manager that this agent reports to.\n                        </p>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-checkbox formControlName=\"isManager\">Manager</mat-checkbox>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <p class=\"text-muted\">\n                            This denotes the agent as a manager in the system, enabling their overrides and allowing you to assign\n                            other users to them for payroll.\n                        </p>\n                    </div>\n                </div>\n                <!-- <div class=\"row\" *ngIf=\"!form.value.isManager\">\n                    <div class=\"col-md-6\">\n                        <mat-checkbox>Sales Admin</mat-checkbox>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <p class=\"text-muted\">\n                            If the user is not a manager role employee, they can \n                        </p>\n                    </div>\n                </div> -->\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-checkbox formControlName=\"active\">Active Employee</mat-checkbox>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <p class=\"text-muted\">\n                            If this is unchecked, the agent is considered \"terminated\" and will no longer show up in the system as \n                            an active employee. This will affect payroll and if they are not active, their payroll will not be calculated. This \n                            does <strong>NOT</strong> disable their login access, because terminated employees may need access to their historical\n                            pay data for a determinate amount of time.\n                        </p>\n                    </div>\n                </div>\n            </ng-container>\n        </form>\n    </mat-dialog-content>\n    <mat-dialog-actions>\n        <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n        <button type=\"button\" mat-button color=\"primary\" (click)=\"saveAgentChanges()\">Save</button>\n    </mat-dialog-actions>\n<!-- </mat-dialog-container> -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyInformationComponent } from './my-information/my-information.component';\nimport { ClientInformationComponent } from './client-information/client-information.component';\n\nimport { AuthGuard } from './auth.guard';\nimport { CampaignsComponent } from '@app/campaigns/campaigns.component';\n\nimport { DailySaleTrackerComponent } from '@app/daily-sale-tracker/daily-sale-tracker.component';\nimport { AgentComponent } from '@app/agent/agent.component';\nimport { PublicHomeComponent } from '@app/public-home/public-home.component';\nimport { CampaignDetailComponent } from '@app/campaigns/components/campaign-detail/campaign-detail.component';\nimport { UtilityDetailComponent } from './campaigns/components/utility-detail/utility-detail.component';\nimport { NewSaleComponent } from './daily-sale-tracker/components/new-sale/new-sale.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { environment } from '@env/environment';\n\nconst routes: Routes = [\n    { path: '', redirectTo: 'home', pathMatch: 'full' },\n    { path: 'home', component: PublicHomeComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'forgot-password', component: ForgotPasswordComponent },\n    { path: 'reset-password/:resetId', component: ResetPasswordComponent },\n    { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n    { path: 'my-information', component: MyInformationComponent, canActivate: [AuthGuard] },\n    { path: 'client-information', component: ClientInformationComponent, canActivate: [AuthGuard] },\n    { path: 'campaigns', component: CampaignsComponent, canActivate: [AuthGuard] },\n    { path: 'campaigns/:campaignId', component: CampaignDetailComponent, canActivate: [AuthGuard] },\n    { path: 'utilities/:utilityId', component: UtilityDetailComponent, canActivate: [AuthGuard] },\n    { path: 'add-utility', component: UtilityDetailComponent, canActivate: [AuthGuard] }, \n    { path: 'agents', component: AgentComponent, canActivate: [AuthGuard] },\n    { path: 'daily-tracker', component: DailySaleTrackerComponent, canActivate: [AuthGuard] },\n    { path: 'new-sale-contact', component: NewSaleComponent, canActivate: [AuthGuard] },\n    { path: 'contacts', loadChildren: './contact/contact.module#ContactModule' },\n    { path: 'imports', loadChildren: './imports/imports.module#ImportsModule' },\n    { path: '**', redirectTo: 'home' }\n]\n\n@NgModule({\n  exports: [ RouterModule ],\n  imports: [\n    RouterModule.forRoot(\n      routes,\n      {\n        useHash: true,\n        // enableTracing: !environment.production // used to debug routing, consoles all router methods\n      }\n    )\n  ]\n})\nexport class AppRoutingModule { }\n","import {Component, OnInit, ViewChild, ChangeDetectorRef, AfterViewChecked, AfterViewInit, AfterContentInit} from '@angular/core';\nimport {Observable, Subscription, of, BehaviorSubject} from 'rxjs';\nimport {SessionService} from './session.service';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {environment} from '@env/environment.prod';\nimport {MomentExtensions} from '@app/shared/moment-extensions';\nimport {SidenavService} from '@app/sidenav/sidenav.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport { UserService } from './user-features/user.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterViewChecked {\n    title = 'app';\n    loading = true;\n    loggedInStatus: Observable<boolean>;\n    opened$: Observable<boolean>;\n    _loading = new BehaviorSubject<boolean>(false);\n    _loggedIn:boolean;\n\n    @ViewChild('navigation', { static: false }) public sidenav: MatSidenav;\n\n    routerSubscription:Subscription;\n\n    constructor(\n        private session: SessionService,\n        private cd: ChangeDetectorRef,\n        private sidenavService: SidenavService,\n        private breakpointObserver:BreakpointObserver,\n        private router:Router,\n        private userService:UserService\n    ) {\n        // wire up our extension methods\n        MomentExtensions.init();\n\n        this.observeBreakpoints();\n    }\n\n    ngOnInit() {\n        this._loading = this.session.loading$;\n\n        this.session.isLoginSubject.subscribe(next => {\n            if (next == null) return;\n            this.loggedInStatus = of(next);\n            this._loggedIn = next;\n        });\n\n        this.session.getAuthenticationStorageItems()\n            .subscribe(storage => {\n                if (storage && storage.token && storage.user) {\n                    this.userService.loadUser(storage.user.data.username);\n                }\n            });\n    }\n\n    ngAfterViewChecked() {\n        // initialize our sidenav service\n        this.sidenavService.setSidenav(this.sidenav);\n\n        // dev only bug -\n        // https://stackoverflow.com/questions/39787038/how-to-manage-angular2-expression-has-changed-after-it-was-checked-exception-w\n        this.cd.detectChanges();\n    }\n\n    /**\n     * Observes the layout and if the viewport changes sizes to the size of a smartphone, \n     * this method calls a method to update services on the layout for mobile/desktop mode when applicable. \n     */\n    private observeBreakpoints():void {\n        this.breakpointObserver.observe([\n            Breakpoints.Handset\n        ]).subscribe(result => {\n            if (result.matches)\n                this.handleMobileViewport();\n            else\n                this.handleFullViewport();\n        });\n    }\n\n    private handleMobileViewport() {\n        this.routerSubscription = this.router.events.subscribe(() => {\n            this.sidenavService.close();\n        });\n    }\n\n    private handleFullViewport() {\n        if (this.routerSubscription != null) \n            this.routerSubscription.unsubscribe();\n    }\n}\n","<mat-sidenav-container *ngIf=\"_loggedIn; else loggedOut;\">\n    <mat-sidenav #navigation mode=\"side\" class=\"sidenav\" autoFocus=\"false\">\n        <side-nav></side-nav>\n    </mat-sidenav>\n    <!-- <mat-sidenav-content scrollLock [trapScroll]=\"_loading\" class=\"pb-4\"> -->\n    <mat-sidenav-content class=\"pb-4\">\n        <vero-loading-spinner></vero-loading-spinner>\n        <!-- <ngx-loading [show]=\"_loading|async\"></ngx-loading> -->\n        <app-header></app-header>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n</mat-sidenav-container>\n<ng-template #loggedOut>\n    <!-- <div scrollLock [trapScroll]=\"_loading\"> -->\n    <div>\n        <vero-loading-spinner></vero-loading-spinner>\n        <!-- <ngx-loading [show]=\"_loading|async\"></ngx-loading> -->\n        <app-header></app-header>\n        <router-outlet></router-outlet>\n    </div>\n</ng-template>","import {NgModule} from '@angular/core';\nimport {CoreModule} from './core/core.module';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {AppComponent} from './app.component';\nimport {SidenavComponent} from './sidenav/sidenav.component';\nimport {MaterialModule} from './material/material.module';\nimport {LoadingModule} from 'ngx-loading';\nimport {HeaderComponent} from './header/header.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AgentComponent} from './agent/agent.component';\nimport {FabFloatBtnModule} from '@app/fab-float-btn/fab-float-btn.module';\nimport {PipesModule} from '@app/pipes/pipes.module';\nimport {EditAgentDialogComponent} from './agent/edit-agent-dialog/edit-agent-dialog.component';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {PublicHomeComponent} from './public-home/public-home.component';\nimport {AgentRulesDialogComponent} from './agent/agent-rules-dialog/agent-rules-dialog.component';\nimport {NewSaleComponent} from './daily-sale-tracker/components/new-sale/new-sale.component';\nimport {DirectivesModule} from './directives/directives.module';\nimport { PayrollModule } from './payroll/payroll.module';\nimport { environment } from '@env/environment';\nimport { SharedModule } from './shared';\nimport { BaseModule } from './base/base.module';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from './http/error-interceptor';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { BuoyModule } from './buoy/buoy.module';\nimport { BuoyConfig, buoyConfig, BuoyHeadersManipulator } from './buoy/buoy-config';\nimport { Buoy } from './buoy/buoy';\n\n@NgModule({\n    imports: [\n        BrowserAnimationsModule,\n        CommonModule,\n        BrowserModule,\n        CoreModule,\n        MaterialModule,\n        LoadingModule,\n        FabFloatBtnModule,\n        PipesModule,\n        ReactiveFormsModule,\n        FormsModule,\n        DirectivesModule,\n        PayrollModule,\n        BaseModule,\n        BuoyModule,\n\n        /** ROUTING FOR ENTIRE APPLICATION */\n        AppRoutingModule\n    ],\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        SidenavComponent,\n        HeaderComponent,\n        AgentComponent,\n        EditAgentDialogComponent,\n        PublicHomeComponent,\n        AgentRulesDialogComponent,\n        NewSaleComponent,\n        ForgotPasswordComponent,\n        ResetPasswordComponent,\n    ],\n    entryComponents: [\n        EditAgentDialogComponent,\n        AgentRulesDialogComponent\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: ErrorInterceptor,\n            multi: true,\n        },\n        { provide: BuoyConfig, useValue: buoyConfig }\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor(private buoy: Buoy, private localStorage: LocalStorage) {\n        // <!-- Global site tag (gtag.js) - Google Analytics -->\n        if (environment.production) {\n            const head = document.getElementsByTagName('head')[0];\n            const gtagmgrNode = document.createElement('script');\n            gtagmgrNode.src = 'https://www.googletagmanager.com/gtag/js?id=UA-135392629-1';\n            gtagmgrNode.async = true;\n            gtagmgrNode.charset = 'utf-8';\n\n            const gtagCodeNode = document.createElement('script');\n            gtagCodeNode.innerText = `\n                window.dataLayer = window.dataLayer || [];\n                function gtag(){dataLayer.push(arguments);}\n                gtag('js', new Date());\n\n                gtag('config', 'UA-135392629-1');\n            `;\n            \n            head.prepend(gtagmgrNode);\n            head.insertBefore(gtagCodeNode, head.childNodes[1]);\n        }\n\n        // Register middleware \n        this.buoy.registerMiddleware(\n            BuoyHeadersManipulator,\n            [this.localStorage]\n        );\n    }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service'\nimport { Observable ,  BehaviorSubject, of, Observer } from 'rxjs';\nimport { UserService } from './user-features/user.service';\nimport { User, ILocalStorage } from './models';\nimport { SessionService } from './session.service';\nimport * as moment from 'moment';\n\n\n/**\n * Design and built with help from: https://www.code-sample.com/2018/03/angular-5-auth-guard-and-route-guards.html\n *\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  private user:User;\n  private authenticated: boolean;\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private userService: UserService,\n    private session:SessionService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):Observable<boolean> | boolean {\n    const url:string = state.url;\n    return Observable.create((observer:Observer<boolean>) => this.session.isUserAuthenticated()\n      .subscribe((store:ILocalStorage<User>) => {\n        if (store && store.expires > moment().valueOf()) {\n          observer.next(true);\n        } else {\n          this.auth.logout();\n          observer.next(false);\n        }\n        observer.complete();\n      }));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { SessionService } from './session.service';\nimport { MessageService } from './message.service';\nimport { IClient } from './models';\nimport { IUserRole } from './models/role.model';\nimport { UserService } from './user-features/user.service';\nimport { environment } from 'environments/environment';\nimport { OAuthResponse } from '@app/models/auth-response.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthService {\n  apiUrl:string = environment.apiUrl;\n  roles: IUserRole[];\n  redirectUrl: string = '/';\n  private selectedClient: BehaviorSubject<IClient> = new BehaviorSubject<IClient>(null);\n  loading = false;\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private session: SessionService,\n    private userService: UserService,\n    private msg: MessageService\n  ) {}\n\n  /**\n   * User attempted oauth login. This could potentially offer oauth2 login services through\n   * other authentication methods like google/facebook.\n   *\n   * @param data\n   * @param callback\n   */\n  login(data: any): Promise<any> {\n    this.loading = true;\n    this.session.clearStorage();\n    const url = this.apiUrl + 'oauth/token';\n\n    return this.http.post(url, data).toPromise();\n  }\n\n  ngLogin(data:{email:string, password:string}):Observable<OAuthResponse> {\n      return this.http.post<OAuthResponse>(`${this.apiUrl}api/authenticate`, data);\n  }\n\n  /**\n   * Log out. Clears session storage.\n   *\n   */\n  logout():Promise<string> {\n    return new Promise<string>(resolve => {\n      this.redirectUrl = this.router.routerState.snapshot.url;\n      this.session.logout();\n      this.userService.logout();\n\n      resolve(this.redirectUrl);\n    });\n  }\n\n  /**\n   * Get's user from the database by the username after they've been authenticated and issued\n   * a token.\n   *\n   * @param username\n   * @param callback\n   */\n  getUserSession(username: string, callback?: any) : Promise<any> {\n    const url = this.apiUrl + 'api/users/' + username + '/session';\n    return new Promise((resolve, reject) => {\n      this.http.get(url)\n        .toPromise()\n        .then(\n          result => {\n            this.populateUserRoles()\n              .then(data => this.roles = data);\n            resolve(result);\n          },\n          err => reject(err)\n        )\n    });\n  }\n\n  setSession(key: string, value: any): void {\n    this.session[key] = value;\n  }\n\n  /**\n   * Gets all user roles.\n   */\n  private populateUserRoles(): Promise<any> {\n    return this.http.get(this.apiUrl + 'api/utilities/get-user-roles').toPromise();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingSpinnerComponent } from '../loading-spinner/loading-spinner.component';\nimport { SelectMapperComponent } from '../select-mapper/select-mapper.component';\nimport { ClientInformationComponent } from '../client-information/client-information.component';\nimport { ClientSelectorComponent } from '../client-selector/client-selector.component';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ChartJsContent } from '../dashboard/chart-js-content';\nimport { LoginComponent } from '../login/login.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '@app/material/material.module';\nimport { AgentAddSaleDialogComponent } from '@app/dashboard/dialogs/add-sale-dialog.component';\nimport { PortalModule } from '@angular/cdk/portal';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    PortalModule,\n    MaterialModule\n  ],\n  declarations: [\n    ChartJsContent,\n    DashboardComponent,\n    ClientSelectorComponent,\n    ClientInformationComponent,\n    SelectMapperComponent,\n    LoadingSpinnerComponent,\n    AgentAddSaleDialogComponent\n  ],\n  entryComponents: [\n    AgentAddSaleDialogComponent,\n    ClientSelectorComponent\n  ],\n  exports: [\n      SelectMapperComponent,\n      ClientSelectorComponent,\n      LoadingSpinnerComponent\n  ]\n})\nexport class BaseModule { }\n","import { environment } from '@env/environment';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\nimport { IToken, ILocalStorage } from '@app/models';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HeaderManipulator } from './middleware/header-manipulator';\n\nexport const buoyConfig = <BuoyConfig>{\n    uri: environment.graphql\n};\n\nexport class BuoyHeadersManipulator implements HeaderManipulator {\n\n    constructor(private localStorage: LocalStorage) {}\n    \n    manipulateHeaders(headers: HttpHeaders, query: any, variables: any): HttpHeaders {\n        this.localStorage.getItem('token').subscribe((token: ILocalStorage<IToken>) => {\n            if (!token || !token.data || !headers) return;\n\n            headers.append('Authorization', `Bearer ${token.data.access_token}`);\n        });\n\n        return headers;\n    }\n\n}\n\nexport class BuoyConfig {\n    uri ? = '/graph';\n\n    headers?: () => HttpHeaders;\n\n    extensions?: () => any;\n\n    middleware?: any[] = [];\n\n    subscriptions?: any;\n\n    paginatorType?: 'paginator' = 'paginator';\n\n    defaultLimit ? = 25;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApolloModule } from 'apollo-angular';\n\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ApolloModule,\n    HttpClientModule\n  ],\n  exports: [\n    ApolloModule\n  ]\n})\nexport class BuoyModule { }\n","import { BuoyConfig } from './buoy-config';\nimport { Injectable, Optional } from '@angular/core';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpClient } from '@angular/common/http';\nimport { Apollo } from 'apollo-angular';\nimport { SubscriptionOptions } from 'apollo-client';\nimport { Subscription } from './operations/subscription/subscription';\nimport { LighthouseLink } from './http-link/lighthouse-link';\nimport { QueryOptions } from './operations/query/query-options';\nimport { QueryResult } from './operations/query/query-result';\nimport { QueryError } from './operations/query/query-error';\nimport { Query } from './operations/query/query';\nimport { WatchQuery } from './operations/watch-query/watch-query';\nimport { WatchQueryOptions } from './operations/watch-query/watch-query-options';\nimport { MutationOptions } from './operations/mutation/mutation-options';\nimport { MutationResult } from './operations/mutation/mutation-result';\nimport { MutationError } from './operations/mutation/mutation-error';\nimport { Mutation } from './operations/mutation/mutation';\nimport { Observable as ApolloObservable } from 'apollo-client/util/Observable';\n\n\n\nlet operationId = 1;\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Buoy {\n    _config: BuoyConfig;\n    _middleware = [];\n\n    cache: InMemoryCache;\n\n    constructor(\n        @Optional() config: BuoyConfig,\n        public apollo: Apollo,\n        public http: HttpClient\n    ) {\n        this._config = Object.assign(new BuoyConfig(), config);\n\n        if (typeof this._config.middleware !== 'undefined') {\n            for (const middleware of this._config.middleware) {\n                this.registerMiddleware(middleware, []);\n            }\n        }\n\n        this.cache = new InMemoryCache();\n\n        this.apollo.create({\n            link: new LighthouseLink(this),\n            cache: this.cache\n        });\n    }\n\n    /**\n     * Run a query.\n     */\n    public query<T>(query, variables?: any, options?: QueryOptions): ApolloObservable<QueryResult<T>|QueryError> {\n        return new Query(this, operationId++, query, variables, options).execute<T>();\n    }\n\n    /**\n     * Run an asynchronous query, that can be subscribed to.\n     */\n    public watchQuery(query, variables?: any, options?: WatchQueryOptions): WatchQuery {\n        return new WatchQuery(this, operationId++, query, variables, options);\n    }\n\n    /**\n     * Run a mutation.\n     */\n    public mutate<T>(mutation, variables?: any, options?: MutationOptions): ApolloObservable<MutationResult<T>|MutationError> {\n        return new Mutation(this, operationId++, mutation, variables, options).execute<T>();\n    }\n\n    /**\n     * Subscribe to changes server-side.\n     */\n    public subscribe(subscription, variables?: any, options?: SubscriptionOptions): Subscription {\n        return new Subscription(subscription, variables, options);\n    }\n\n    public get config(): BuoyConfig {\n        return this._config;\n    }\n\n    public registerMiddleware(middleware: any, args: any[]): void {\n        this._middleware.push(new middleware(...args));\n    }\n\n    /**\n     * Reset the Buoy cache.\n     */\n    public resetCache(): void {\n        this.cache.reset();\n    }\n}\n","import { Buoy } from '../buoy';\nimport { ApolloLink, Operation, RequestHandler, Observable as LinkObservable, FetchResult } from 'apollo-link';\nimport { print } from 'graphql/language/printer';\nimport { extractFiles } from 'extract-files';\nimport { Context } from './lighthouse-link-options';\nimport { SubscriptionDriver } from '../subscription-drivers/subscription-driver';\nimport Pusher from '../subscription-drivers/pusher';\nimport { isFunction } from 'ngx-plumber';\n\nexport class LighthouseLink extends ApolloLink {\n    public requester: RequestHandler;\n\n    private subscriptionDriver: SubscriptionDriver;\n\n    private subscriptionDrivers = {\n        pusher: Pusher\n    };\n\n    constructor(private buoy: Buoy) {\n        super();\n        // this.initSubscriptions(options.subscriptions);\n\n        this.requester = (operation: Operation) =>\n            new LinkObservable((observer: any) => {\n                const context: Context = operation.getContext();\n\n                const includeExtensions = true; // TODO\n                // const includeExtensions = pick('includeExtensions', false);\n                const withCredentials = null; // pick('withCredentials');\n\n                // Add headers\n                let headers;\n                if (typeof this.buoy.config.headers !== 'undefined') {\n                    headers = this.buoy.config.headers();\n                }\n\n                // Run HeaderManipulator middleware\n                this.buoy._middleware.forEach((middleware: any) => {\n                    if (isFunction(middleware.manipulateHeaders)) {\n                        // TODO Check returned data - throw exception if invalid\n                        headers = middleware.manipulateHeaders(headers, operation.query, operation.variables);\n                    }\n                });\n\n                const httpOptions = {\n                    headers: headers,\n                    withCredentials: withCredentials\n                };\n\n                // Send the POST request\n                this.buoy.http.post(this.buoy.config.uri, this.payload(operation), httpOptions)\n                    .toPromise()\n                    .then(\n                        (result: any) => {\n                            // Run ResponseManipulator middleware\n                            this.buoy._middleware.forEach((middleware: any) => {\n                                if (isFunction(middleware.manipulateResponse)) {\n                                    // TODO Check returned data - throw exception if invalid\n                                    result = middleware.manipulateResponse(result, operation.query, operation.variables);\n                                }\n                            });\n\n                            operation.setContext(result);\n                            observer.next(result);\n                            observer.complete();\n                        },\n                        (error) => {\n                            // TODO Handle Http Error\n                            observer.error(error); // TODO complete necessary?\n                        }\n                    );\n            });\n    }\n\n    public request(op: Operation): LinkObservable<FetchResult> | null {\n        // console.log('REQUEST!', op);\n        return this.requester(op);\n    }\n\n    /**\n     * Generate the HTTP Payload.\n     */\n    private payload(operation) {\n        // Extract files from variables\n        const files = extractFiles(operation.variables);\n\n        // Define operations\n        const operations = {\n            operationName: operation.operationName,\n            query: print(operation.query),\n            variables: operation.variables,\n            extensions: operation.extensions\n        };\n\n        if (files.files.size === 0) {\n            return operations;\n        }\n\n        const payload = new FormData();\n\n        // Generate map\n        const map = {};\n        let i = 0;\n        for (const [file, path] of files.files.entries()) {\n            map[i] = ['variables.' + path];\n            payload.append(i.toString(), file, file.name);\n            i++;\n        }\n\n        payload.append('operations', JSON.stringify(operations));\n        payload.append('map', JSON.stringify(map));\n\n        return payload;\n    }\n\n    private initSubscriptions(subscriptionsConfig) {\n        if (typeof subscriptionsConfig !== 'undefined') {\n            let subscriptionDriverClass;\n\n            if (typeof subscriptionsConfig.driver === 'string') {\n                if (!this.subscriptionDrivers.hasOwnProperty(subscriptionsConfig.driver)) {\n                    throw Error('SubscriptionDriver \"' + subscriptionsConfig.driver + '\" was not found.');\n                } else {\n                    // Get the driver class based on its name\n                    subscriptionDriverClass = this.subscriptionDrivers[subscriptionsConfig.driver];\n                }\n            } else {\n                // The driverClass is already defined\n                subscriptionDriverClass = subscriptionsConfig.driver;\n            }\n\n            // Init the driver class\n            this.subscriptionDriver = new subscriptionDriverClass(\n\n            );\n        }\n\n    }\n}\n","export class MutationError {\n\n    /**\n     * Contains the result of the query.\n     */\n    public data: any;\n\n    public errors: any; // TODO\n\n    constructor(data, errors) {\n        this.data = data;\n        this.errors = errors;\n    }\n\n}\n","export class MutationResult<T> {\n\n    /**\n     * Contains the result of the mutation.\n     */\n    public data: T;\n\n    constructor(data: T) {\n        this.data = data;\n    }\n\n}\n","import { Operation } from '../operation';\nimport { Buoy } from '@app/buoy/buoy';\nimport { MutationOptions } from './mutation-options';\nimport { MutationResult } from './mutation-result';\nimport { MutationError } from './mutation-error';\nimport { scope } from 'ngx-plumber';\nimport { Observable as ApolloObservable } from 'apollo-link';\nimport { Observer } from 'apollo-client/util/Observable';\n\nexport class Mutation extends Operation {\n    constructor(\n        buoy: Buoy,\n        id: number,\n        query,\n        variables,\n        options: MutationOptions\n    ) {\n        super(buoy, id, query, variables, options, 'mutation');\n    }\n\n    public execute<T>(): ApolloObservable<MutationResult<T>|MutationError> {\n        return new ApolloObservable<MutationResult<T>|MutationError>((ob: Observer<MutationResult<T>|MutationError>) => {\n            // TODO Implement Optimistic UI (#16)\n\n            this._buoy.apollo.mutate<T>({\n                mutation: this.getQuery(),\n                variables: this.getVariables(),\n                errorPolicy: 'all'\n            }).toPromise().then(\n                (response) => {\n\n                    if (typeof response.errors === 'undefined') {\n                        response['errors'] = [];\n                    }\n\n                    for (const error of response.errors) {\n                        if (error.extensions.category === 'graphql') {\n                            throw new Error(\n                                '[Buoy :: GraphQL error]: ${error.message}, on line ' +\n                                `${error.locations[0].line}:${error.locations[0].column}.`,\n                            );\n                        }\n                    }\n\n                    if (response.errors.length === 0) {\n                        ob.next(new MutationResult(this.mapResponse(response)));\n                    } else {\n                        ob.next(new MutationError(\n                            response.data ? response.data : null,\n                            response.extensions\n                        ));\n                    }\n                    ob.complete();\n                },\n                (error) => {\n                    ob.next(new MutationError(\n                        null,\n                        error\n                    ));\n                    ob.complete();\n                }\n            );\n        });\n    }\n\n    private mapResponse(data): any {\n        return scope(data.data, this._options.scope);\n    }\n}\n","import { Buoy } from '../buoy';\nimport { isFunction } from 'ngx-plumber';\n\nexport class Operation {\n    protected _apolloOperation;\n\n    constructor(\n        public _buoy: Buoy,\n        public _id: number,\n        protected _query,\n        protected _variables,\n        public _options,\n        public _operationType: 'query' | 'mutation' | 'subscription'\n    ) {\n        this._query = this.handleOperationName();\n\n        if (!this._options) this._options = { scope: '' };\n\n        this.handleMiddleware();\n    }\n\n    /**\n     * Handle middleware for the operation.\n     */\n    protected handleMiddleware() {\n        this._buoy._middleware.forEach((middleware: any) => {\n            switch (this._operationType) {\n                case 'query':\n                    if (isFunction(middleware.manipulateQuery)) {\n                        // TODO Check response from middleware\n                        this._query = middleware.manipulateQuery(this._query, this._variables, this._options);\n                    }\n                    break;\n\n                case 'mutation':\n                    if (isFunction(middleware.manipulateMutation)) {\n                        // TODO Check response from middleware\n                        this._query = middleware.manipulateMutation(this._query, this._variables, this._options);\n                    }\n                    break;\n\n                case 'subscription':\n                    // TODO\n                    break;\n            }\n        });\n    }\n\n    /**\n     * Get the variables for the operation.\n     */\n    protected getVariables() {\n        let variables = this._variables;\n\n        // Run VariableManipulator middleware\n        this._buoy._middleware.forEach((middleware: any) => {\n            if (isFunction(middleware.manipulateVariables)) {\n                // TODO Check response from middleware\n                variables = middleware.manipulateVariables(this._query, variables, this._options);\n            }\n        });\n\n        return variables;\n    }\n\n    protected getQuery() {\n        return this._query;\n    }\n\n    /**\n     * Check if the query has a\n     */\n    protected handleOperationName() {\n        return this._query; // TODO\n    }\n}\n","\nexport class QueryError {\n\n    /**\n     * Contains the result of the query.\n     */\n    public data: any;\n\n    public errors: any; // TODO\n\n    constructor(data, errors) {\n        this.data = data;\n        this.errors = errors;\n    }\n\n}\n","\nexport class QueryResult<T> {\n\n    /**\n     * Contains the result of the query.\n     */\n    data: {\n        [key: string]: T\n    };\n\n    constructor(data: {[key: string]: T}) {\n        this.data = data;\n    }\n\n}\n","import { scope } from 'ngx-plumber';\nimport { Buoy } from '../../buoy';\nimport { QueryResult } from './query-result';\nimport { QueryError } from './query-error';\nimport { Operation } from '../operation';\nimport { QueryOptions } from './query-options';\nimport { Observable } from 'apollo-link';\nimport { Observer } from 'apollo-client/util/Observable';\n\nexport class Query extends Operation {\n    public data: any;\n\n    public loading = true;\n\n    constructor(\n        buoy: Buoy,\n        id: number,\n        query,\n        variables,\n        options: QueryOptions\n    ) {\n        super(buoy, id, query, variables, options, 'query');\n\n        return this;\n    }\n\n    /**\n     * Execute the query and return an observable.\n     */\n    public execute<T = any>(): Observable<QueryResult<T>|QueryError> {\n        return new Observable((ob: Observer<QueryResult<T> | QueryError>) => {\n            this._buoy.apollo.query({\n                query: this.getQuery(),\n                variables: this.getVariables(),\n                errorPolicy: 'all',\n                fetchResults: true\n            }).toPromise().then(\n                (response) => {\n                if (typeof response.errors === 'undefined') {\n                    response.errors = [];\n                }\n\n                for (const error of response.errors) {\n                    if (error.extensions.category === 'graphql') {\n                        throw new Error(\n                            '[Buoy :: GraphQL error]: ${error.message}, on line ' +\n                            `${error.locations[0].line}:${error.locations[0].column}.`,\n                        );\n                    }\n                }\n\n                if (response.errors.length === 0) {\n                    ob.next(new QueryResult<T>(this.mapResponse(response)));\n                } else {\n                    ob.next(new QueryError(response.data ? response.data : null, ''));\n                }\n\n                ob.complete();\n            },\n            (error) => {\n                throw new Error(error);\n                \n                ob.next(new QueryError(\n                    null,\n                    {\n                        // graphQl: error.graphQLErrors,\n                        // network: error.networkError,\n                        data: {},\n                        extensions: {}\n                    }\n                ));\n                ob.complete();\n            });\n        });\n    }\n\n    private mapResponse(data): any {\n        return scope(data.data, this._options.scope);\n    }\n}\n","export class Subscription {\n    protected _query;\n\n    constructor(subscription, variables, options) {\n        // TODO Handle\n    }\n}\n","import { dotsToCamelCase, scope, scopeChild, scopeCount, issetElse } from 'ngx-plumber';\nimport { RouterRw } from './router-rw';\nimport { WatchQuery } from './watch-query';\nimport { WatchQueryOptions } from './watch-query-options';\nimport { BehaviorSubject } from 'rxjs';\n\nexport class Pagination {\n    public _paginators = {};\n    private _queryRoute: RouterRw;\n    private _initialized = new BehaviorSubject(false);\n\n    constructor(\n        public _query: WatchQuery,\n        private _gqlQuery,\n        public _queryOptions: WatchQueryOptions,\n        variables: any\n    ) {\n        if (typeof this._queryOptions.pagination !== 'undefined') {\n            this.getPaginatorScopes(variables);\n\n            this.findPaginatorsInQuery();\n\n            // Subscribe to the Router if defined.\n            this._queryRoute = new RouterRw(this);\n\n            // TODO Timeout?\n            this._initialized.next(true);\n        }\n    }\n\n    public destroy(): void {\n        if (this._queryRoute) {\n            this._queryRoute.destroy();\n        }\n    }\n\n    /**\n     * Returns all pagination-variables\n     */\n    public get variables() {\n        if (typeof this._paginators === 'undefined') {\n            return {};\n        }\n\n        const variables = {};\n\n        if (Object.keys(this._paginators).length === 1) {\n            const paginator = Object.keys(this._paginators)[0];\n            variables[`page`] = this._paginators[paginator].desiredPage;\n            variables[`limit`] = this._paginators[paginator].desiredLimit;\n        } else {\n            for (const paginator in this._paginators) {\n                if (this._paginators[paginator].type === 'paginator') {\n                    variables[`${dotsToCamelCase(paginator)}Page`] = this._paginators[paginator].desiredPage;\n                    variables[`${dotsToCamelCase(paginator)}Limit`] = this._paginators[paginator].desiredLimit;\n                } else {\n                    // TODO add support for connection\n                }\n            }\n        }\n\n        return variables;\n    }\n\n    /**\n     * Returns all pagination-values (page, lastPage, etc.)\n     */\n    public get pagination() {\n        let pagination = {};\n\n        if (Object.keys(this._paginators).length === 1) {\n            pagination = this._paginators[Object.keys(this._paginators)[0]].pagination;\n        } else {\n            for (const paginator of Object.keys(this._paginators)) {\n                pagination[paginator] = this._paginators[paginator].pagination;\n            }\n        }\n\n        return pagination;\n    }\n\n    /**\n     * Save lastPage, currentPage, etc. for all paginators.\n     */\n    public readPaginationFromResponse(data: any): void {\n        for (const paginator in this._paginators) {\n            if (this._paginators[paginator].type === 'paginator') {\n                const paginatorInfo = scope(data.data, paginator).paginatorInfo;\n                this._paginators[paginator].pagination = {\n                    currentPage: paginatorInfo.currentPage,\n                    lastPage: paginatorInfo.lastPage\n                };\n            } else {\n                // TODO add support for connection\n            }\n        }\n    }\n\n    /**\n     * Returns the manipulated query (graphql-tag).\n     */\n    public get query() {\n        return this._gqlQuery;\n    }\n\n    /**\n     * Go to the previous page.\n     */\n    public prevPage(paginator?: string): boolean {\n        paginator = this.checkPaginator(paginator, 'page');\n\n        // Only continue if the page actually is available\n        if (this.checkIfPageExists(paginator, '-')) {\n            this._paginators[paginator].desiredPage--;\n            this.writeRoute();\n\n            // TODO add support for connection\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Go the the next page.\n     */\n    public nextPage(paginator?: string): boolean {\n        paginator = this.checkPaginator(paginator, 'page');\n\n        // Only continue if the page actually is available\n        if (this.checkIfPageExists(paginator, '+')) {\n            this._paginators[paginator].desiredPage++;\n            this.writeRoute();\n\n            // TODO add support for connection\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Set the page.\n     */\n    public setPage(page: number, paginator?: string, checkPage = true): boolean {\n        paginator = this.checkPaginator(paginator, 'page');\n\n        // Only continue if the page actually is available\n        if (this.checkIfPageExists(paginator, page) || checkPage === false) {\n            const oldPage = this._paginators[paginator].desiredPage;\n            this._paginators[paginator].desiredPage = page;\n            if (this._query._apolloInitialized) {\n                console.log('SET PAGE', page, oldPage);\n                if (page !== oldPage) {\n                    this.writeRoute();\n                }\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Set the limit for a paginator\n     */\n    public setLimit(limit: number, paginator: string, checkPage = true): void {\n        paginator = this.checkPaginator(paginator, 'limit');\n\n        if (this._paginators[paginator].desiredLimit !== limit) {\n            // Jump back to page 1 if the limit was changed.\n            this._paginators[paginator].desiredPage = 1;\n            this._paginators[paginator].desiredLimit = limit;\n            this.writeRoute();\n        }\n    }\n\n    /**\n     * Check if the paginator exists.\n     */\n    private checkPaginator(paginator: string, variable: 'page' | 'limit'): string {\n        // Check if there are any paginators\n        if (Object.keys(this._paginators).length === 0) {\n            throw new Error('There are no paginators in this query.');\n        }\n\n        // If no paginator is defined,\n        if (typeof paginator === 'undefined') {\n            if (Object.keys(this._paginators).length > 1) {\n                // If there are more than one paginator, and no one is selected, we can't continue\n                throw new Error('You must define in which paginator you ' +\n                    `want to change the ${variable}, when there are multiple paginators in a query!`);\n            } else {\n                // If there is only one paginator, change the value of paginator to that\n                paginator = Object.keys(this._paginators)[0];\n            }\n        }\n\n        return paginator;\n    }\n\n    /**\n     * Check if a page exists in the paginator.\n     */\n    private checkIfPageExists(paginator: string, page: number | string | '-' | '+'): boolean {\n        try {\n            if (typeof paginator !== 'undefined') {\n                if (this._paginators[paginator].type === 'paginator') {\n                    if (page === '-') {\n                        if (typeof this._paginators[paginator].pagination !== 'undefined') {\n                            if (this._paginators[paginator].pagination.currentPage - 1 >= 1) {\n                                return true;\n                            }\n                        }\n                    } else if (page === '+') {\n                        if (typeof this._paginators[paginator].pagination !== 'undefined') {\n                            if (this._paginators[paginator].pagination.currentPage + 1 <= this._paginators[paginator].pagination.lastPage) {\n                                return true;\n                            }\n                        }\n                    } else if (!isNaN(<number>page)) {\n                        if (page === this._paginators[paginator].desiredPage) {\n                            return false; // The page is already the desired page\n                        } else if (page <= this._paginators[paginator].pagination.lastPage) {\n                            return true;\n                        }\n                    } else {\n                        throw new Error(`Invalid page \"${page}\" for type \"paginator\".`);\n                    }\n                    switch (page) {\n                        case '-':\n                            break;\n                        case '+':\n                            break;\n                    }\n                } else {\n                    // TODO add support for connection\n                }\n            }\n        } catch (e) {\n            return false;\n        }\n\n        return false;\n    }\n\n    /**\n     * Converts the pagination parameter from QueryOptions into an object with paginators\n     */\n    private getPaginatorScopes(variables: any): void {\n        if (typeof this._queryOptions.pagination === 'string') {\n            // Simple pagination\n            this._paginators = this.convertScopesToPaginators([this._queryOptions.pagination], variables);\n        } else {\n            if (this._queryOptions.pagination instanceof Array) {\n                // Multiple paginators\n                this._paginators = this.convertScopesToPaginators(this._queryOptions.pagination, variables);\n            } else {\n                // Advanced pagination\n                this._paginators = this._queryOptions.pagination;\n                // TODO Validate input and throw Exception if there are errors.\n            }\n        }\n    }\n\n    /**\n     * Converts a list of scopes to an object with paginators.\n     */\n    private convertScopesToPaginators(scopes: string[], variables: any) {\n        const paginators = {};\n\n        scopes.forEach((scopeStr) => {\n            const prefix = dotsToCamelCase(scopeStr);\n            if (this._query._buoy._config.paginatorType === 'paginator') {\n                paginators[scopeStr] = {\n                    type: 'paginator',\n                    page: scopes.length === 1 ? 'page' : `${prefix}Page`,\n                    limit: scopes.length === 1 ? 'limit' : `${prefix}Limit`,\n                    desiredPage: scopes.length === 1 ? issetElse(variables['page'], 1) : issetElse(variables[`${prefix}Page`], 1),\n                    desiredLimit: scopes.length === 1 ?\n                        issetElse(variables['limit'], this._query._buoy.config.defaultLimit) :\n                        issetElse(variables[`${prefix}Limit`], this._query._buoy.config.defaultLimit)\n                };\n            } else {\n                paginators[scopeStr] = {\n                    type: 'connection',\n                    after: `${prefix}After`,\n                    limit: `${prefix}Limit`\n                    // TODO page\n                };\n            }\n        });\n\n        return paginators;\n    }\n\n    /**\n     * Find paginators in the query\n     */\n    private findPaginatorsInQuery(): void {\n        // Loop through all paginators\n        for (const paginator of Object.keys(this._paginators)) {\n            // Loop through all definitions in query\n            scope(this._gqlQuery, 'definitions').forEach((definition, definitionI) => {\n                // Loop through all definitions\n                this.queryScoped(`definitions.${definitionI}.selectionSet.selections`)\n                    .forEach((selection, selectionI) => {\n                        this.findPaginatorInSelection(selection, paginator, 0,\n                            `definitions.${definitionI}.selectionSet.selections.${selectionI}`);\n                    });\n            });\n        }\n    }\n\n    /**\n     * Find paginators in a selection and inject the necessary parameters.\n     */\n    private findPaginatorInSelection(selection, paginator: string, level: number, queryPath: string): void {\n        const queryScoped = this.queryScoped(queryPath);\n\n        // Check if this selection is in the scope\n        if (scopeChild(paginator, level, true) === queryScoped.name.value) {\n            // Check if this is the last level in the scope\n            if (scopeCount(paginator) === level + 1) {\n                this.injectPaginationInSelection(paginator, queryPath); // TODO: Add parameters\n            } else {\n                // The final level is a child of this level - run findPaginatorInSelection on all children.\n                this.queryScoped(`${queryPath}.selectionSet.selections`)\n                    .forEach((childSelection, selectionI) => {\n                        this.findPaginatorInSelection(childSelection, paginator, level + 1,\n                            `${queryPath}.selectionSet.selections.${selectionI}`);\n                    });\n            }\n        }\n    }\n\n    /**\n     * Inject parameters into a paginator\n     */\n    private injectPaginationInSelection(paginator, queryPath): void {\n        const selection = this.queryScoped(queryPath);\n\n        // Check if pagination variables are defined. Otherwise, add them.\n        this.checkVariablesOnQuery(paginator);\n\n        // Check if pagination arguments are defined. Otherwise, add them.\n        this.checkPaginatorArguments(paginator, queryPath);\n\n        // Check if the necessary parameters are queried. Otherwise, add them.\n        if (this._paginators[paginator].type === 'paginator') {\n            // Check if \"paginatorInfo\" exists\n            let paginationSelectionId;\n            selection.selectionSet.selections.forEach((subSelection, i) => {\n                if (subSelection.name.value === 'paginatorInfo') {\n                    paginationSelectionId = i;\n                }\n            });\n\n            // paginatorInfo does not exist. Add the necessary parameters\n            if (typeof paginationSelectionId === 'undefined') {\n                selection.selectionSet.selections.push(\n                    this.generateField('paginatorInfo',\n                        [\n                            this.generateField('lastPage'),\n                            this.generateField('currentPage'),\n                            this.generateField('perPage'),\n                        ]\n                    )\n                );\n            } else {\n                // Make sure the necessary variables are inside \"paginatorInfo\"\n                let lastPageId;\n                let currentPageId;\n                let perPageId;\n\n                selection.selectionSet.selections[paginationSelectionId].selectionSet.selections.forEach((subSelection, i) => {\n                    switch (subSelection.name.value) {\n                        case 'lastPage':\n                            lastPageId = i;\n                            break;\n                        case 'currentPage':\n                            currentPageId = i;\n                            break;\n                        case 'perPage':\n                            perPageId = i;\n                            break;\n                    }\n                });\n\n                if (typeof lastPageId === 'undefined') {\n                    selection.selectionSet.selections[paginationSelectionId].selectionSet.selections.push(\n                        this.generateField('lastPage')\n                    );\n                }\n\n                if (typeof currentPageId === 'undefined') {\n                    selection.selectionSet.selections[paginationSelectionId].selectionSet.selections.push(\n                        this.generateField('currentPage')\n                    );\n                }\n\n                if (typeof perPageId === 'undefined') {\n                    selection.selectionSet.selections[paginationSelectionId].selectionSet.selections.push(\n                        this.generateField('perPage')\n                    );\n                }\n            }\n\n\n        } else {\n            // TODO add support for connection.\n        }\n    }\n\n    /**\n     * Check if the necessary variables for a specific paginator are added to the query. Otherwise add them.\n     */\n    private checkVariablesOnQuery(paginator) {\n\n        if (this._paginators[paginator].type === 'paginator') {\n            let pageVariableId;\n            let limitVariableId;\n\n            // Loop through all variables in the query\n            this._gqlQuery.definitions[0].variableDefinitions.forEach((variableDefinition, i) => {\n                switch (variableDefinition.variable.name.value) {\n                    case this._paginators[paginator].page:\n                        pageVariableId = i;\n                        break;\n                    case this._paginators[paginator].limit:\n                        limitVariableId = i;\n                        break;\n                }\n            });\n\n            if (typeof pageVariableId === 'undefined') {\n                this._gqlQuery.definitions[0].variableDefinitions.push(this.generateVariable(\n                    this._paginators[paginator].page,\n                    'Int'\n                ));\n            }\n\n            if (typeof limitVariableId === 'undefined') {\n                this._gqlQuery.definitions[0].variableDefinitions.push(this.generateVariable(\n                    this._paginators[paginator].limit,\n                    'Int'\n                ));\n            }\n\n        } else {\n            // TODO add support for connection.\n        }\n    }\n\n    /**\n     * Check if the necessary arguments are defined on a specific paginator. Otherwise, add them.\n     */\n    private checkPaginatorArguments(paginator, queryPath): void {\n        if (this._paginators[paginator].type === 'paginator') {\n            // TODO\n        } else {\n            // TODO add support for connection.\n        }\n    }\n\n    private generateField(name: string, selections?) {\n        const field = {\n            alias: undefined,\n            arguments: [],\n            directives: [],\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: name\n            }\n        };\n\n        if (typeof selections !== 'undefined') {\n            field['selectionSet'] = {\n                kind: 'SelectionSet',\n                selections: selections\n            };\n        }\n\n        return field;\n    }\n\n    private generateVariable(name: string, type: string) {\n        const kind = 'NonNullType'; // TODO: Make dynamic\n\n        return {\n            defaultValue: undefined,\n            directives: [],\n            kind: 'VariableDefinition',\n            type: {\n                kind: kind,\n                type: {\n                    kind: 'NamedType',\n                    name: {\n                        kind: 'Name',\n                        value: type\n                    }\n                }\n            },\n            variable: {\n                kind: 'Variable',\n                name: {\n                    kind: 'Name',\n                    value: name\n                }\n            }\n        };\n    }\n\n    private queryScoped(scopeStr): any {\n        return scope(this._gqlQuery, scopeStr);\n    }\n\n    private writeRoute(): void {\n        if (this._initialized.value === false) {\n            this._initialized.toPromise().then(initialized => {\n                if (initialized) {\n                    this._queryRoute.writeRoute();\n                }\n            });\n        } else {\n            this._queryRoute.writeRoute();\n        }\n    }\n\n}\n","import { Subscription } from 'rxjs';\nimport { Pagination } from './pagination';\n\nexport class RouterRw {\n    private _routeSubscription: Subscription;\n    private ignoreRouteChanges = false;\n\n    constructor(private _pagination: Pagination) {\n        // Subscribe to the Router if defined.\n        this.readRoute();\n    }\n\n    public destroy() {\n        this._routeSubscription.unsubscribe();\n    }\n\n    /**\n     * Write query params to the current route.\n     */\n    public writeRoute() {\n        if (this._pagination._queryOptions.router) {\n            this.ignoreRouteChanges = true;\n            this._pagination._queryOptions.router.router.navigate(\n                [],\n                {\n                    queryParams: this._pagination.variables,\n                    queryParamsHandling: 'merge'\n                }\n            );\n        }\n    }\n\n    /**\n     * Read query params from the query and use them for pagination.\n     */\n    private readRoute() {\n        if (this._pagination._queryOptions.router) {\n            // TODO Unsubscribe on destroy (memory leak)\n            this._routeSubscription = this._pagination._queryOptions.router.route.queryParams.subscribe((params: any) => {\n                if (!this.ignoreRouteChanges) {\n                    // Loop through all paginators\n                    for (const paginator of Object.keys(this._pagination._paginators)) {\n                        let page;\n                        let limit;\n\n                        // Loop through all query params\n                        for (const param of Object.keys(params)) {\n\n                            // Handle page\n                            if (this._pagination._paginators[paginator].page === param) {\n                                page = params[param];\n                            }\n\n                            // Handle limit\n                            if (this._pagination._paginators[paginator].limit === param) {\n                                limit = params[param];\n                            }\n                        }\n\n                        // If no values are defined on Query, use global default values\n                        if (typeof page === 'undefined') {\n                            page = 1;\n                        }\n                        if (typeof limit === 'undefined') {\n                            limit = this._pagination._query._buoy.config.defaultLimit;\n                        }\n\n                        // Set the values\n                        this._pagination.setLimit(limit, paginator);\n                        this._pagination.setPage(parseInt(page, 10), paginator, false);\n                    }\n                    // Read the values and add them to paginators desired values\n\n                    this._pagination._query.refetch();\n                }\n\n                // We ignore this event. Act on the next one\n                this.ignoreRouteChanges = false;\n            });\n        }\n    }\n}\n","import { BehaviorSubject, Subscription } from 'rxjs';\nimport { scope } from 'ngx-plumber';\nimport { Buoy } from '../../buoy';\nimport { Pagination } from './pagination';\nimport { WatchQueryOptions } from './watch-query-options';\nimport { WatchQuerySubscription } from './watch-query-subscription';\nimport { Operation } from '../operation';\n\n\nexport class WatchQuery extends Operation {\n    protected _apolloSubscription: Subscription;\n    private _pagination: Pagination;\n\n    /**\n     * Contains the Buoy Subscription\n     */\n    protected subscription: WatchQuerySubscription;\n\n    public _apolloInitialized = new BehaviorSubject(false);\n\n    public data: any;\n\n    public loading = true;\n\n    constructor(\n        buoy: Buoy,\n        id: number,\n        query,\n        variables,\n        options: WatchQueryOptions\n    ) {\n        super(buoy, id, query, variables, options, 'query');\n\n        // Init QueryPagination\n        if (this.paginationEnabled) {\n            this._pagination = new Pagination(this, super.getQuery(), this._options, this._variables);\n        }\n\n        if (this._options.fetch !== false) {\n            this.initQuery();\n        }\n\n        if (this._options.subscribe !== false) {\n            // this.subscription = new WatchQuerySubscription(this.getQuery()); // TODO\n        }\n\n        return this;\n    }\n\n    public get pagination(): any {\n        return this._pagination.pagination;\n    }\n\n    public refetch(): this {\n        this.loading = true;\n        if (this._apolloInitialized.value === false) {\n            if (this._options.fetch === false) {\n                this.initQuery();\n            } else {\n                this._apolloInitialized.toPromise().then(initialized => {\n                    this.doRefetch();\n                });\n            }\n        } else {\n            this.doRefetch();\n        }\n\n        return this;\n    }\n\n    private doRefetch() {\n        this.emitOnLoadingStart();\n        this.loading = true;\n        this._apolloOperation.refetch(this.getVariables()).then(\n            (success) => {\n                this.loading = false;\n            },\n            (error) => {\n                this.loading = false;\n            }\n        );\n    }\n\n    /**\n     * Set variable value.\n     */\n    public setVariable(variable: string, value: any): this {\n        this._variables[variable] = value;\n\n        return this;\n    }\n\n    /**\n     * Go to the previous page.\n     */\n    public prevPave(refetch = true, paginator?: string): this {\n        if (!this.paginationEnabled) {\n            throw new Error('Pagination must be enabled before the page can be changed.');\n        }\n        if (refetch === true && this._pagination.prevPage(paginator)) {\n            this.refetch();\n        }\n\n        return this;\n    }\n\n    /**\n     * Go the the next page.\n     */\n    public nextPage(refetch = true, paginator?: string): this {\n        if (!this.paginationEnabled) {\n            throw new Error('Pagination must be enabled before the page can be changed.');\n        }\n        if (refetch === true && this._pagination.nextPage(paginator)) {\n            this.refetch();\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the page.\n     */\n    public setPage(page: number, refetch = true, paginator?: string): this {\n        if (!this.paginationEnabled) {\n            throw new Error('Pagination must be enabled before the page can be changed.');\n        }\n        if (refetch === true && this._pagination.setPage(page, paginator)) {\n            this.refetch();\n        }\n\n        return this;\n    }\n\n    /**\n     * Set the limit.\n     */\n    public setLimit(limit: number, refetch = true, paginator?: string): this {\n        if (!this.paginationEnabled) {\n            throw new Error('Pagination must be enabled before the limit can be changed.');\n        }\n        this._pagination.setLimit(limit, paginator);\n\n        if (refetch === true) {\n            this.refetch();\n        }\n\n        return this;\n    }\n\n    /**\n     * Destroy the Query.\n     */\n    public destroy(): void {\n        this._pagination.destroy();\n        this._apolloSubscription.unsubscribe();\n    }\n\n    /**\n     * @deprecated\n     */\n    public reset(): void {\n        // Hotfix to trigger Angular's listeners.\n        for (const key of Object.keys(this.data)) {\n            delete this.data[key];\n        }\n    }\n\n    protected getVariables() {\n        if (this.paginationEnabled) {\n            // Inject variables from Pagination\n            return Object.assign(super.getVariables(), this._pagination.variables);\n        }\n\n        return super.getVariables;\n    }\n\n    protected initQuery() {\n        this._apolloOperation = this._buoy.apollo.watchQuery({\n            query: this.getQuery(),\n            variables: this.getVariables(),\n            fetchPolicy: typeof this._options.fetchPolicy !== 'undefined' ? this._options.fetchPolicy : 'cache-first'\n        });\n        this.emitOnLoadingStart();\n\n        // Subscribe to changes\n        this._apolloSubscription = this._apolloOperation.valueChanges.subscribe((data) => this.mapResponse(data, 'http'));\n\n        this._apolloInitialized.next(true);\n        this.emitOnInitialized();\n    }\n\n    protected mapResponse(data, mode: 'http' | 'ws'): void {\n        // Set loading\n        this.loading = data.loading; // TODO Necessary?\n\n        if (this.paginationEnabled) {\n            this._pagination.readPaginationFromResponse(data);\n        }\n\n        // Set data\n        this.data = scope(data.data, this._options.scope);\n\n        this.emitOnLoadingFinish();\n        this.emitOnChange();\n    }\n\n    /**\n     * Check if pagination is enabled.\n     */\n    protected get paginationEnabled(): boolean {\n        return typeof this._options.pagination !== 'undefined' && this._options.pagination !== false;\n    }\n\n    protected getQuery() {\n        return this.paginationEnabled ? this._pagination.query : super.getQuery();\n    }\n\n    private emitOnInitialized() {\n        if (typeof this._options.onInitialized !== 'undefined') {\n            this._options.onInitialized(this._id);\n        }\n    }\n\n    private emitOnLimitChange(paginator, limit) {\n        // TODO\n    }\n\n    private emitOnPageChange(paginator, page) {\n        // TODO\n    }\n\n    private emitOnLoadingStart() {\n        if (typeof this._options.onLoadingStart !== 'undefined') {\n            this._options.onLoadingStart(this._id);\n        }\n    }\n\n    private emitOnLoadingFinish() {\n        if (typeof this._options.onLoadingFinish !== 'undefined') {\n            this._options.onLoadingFinish(this._id);\n        }\n    }\n\n    private emitOnChange() {\n        if (typeof this._options.onChange !== 'undefined') {\n            this._options.onChange(this._id, this.data);\n        }\n    }\n}\n","import { SubscriptionDriver } from './subscription-driver';\nimport { Observable } from 'apollo-link';\n\n\n\nexport class Pusher extends SubscriptionDriver {\n    pusher;\n\n    constructor() {\n        super();\n    }\n\n    request(operation, forward) {\n        return new Observable(ob => {\n            forward(operation).subscribe({\n                next: data => {\n                    // If the operation has the subscription extension, it's a subscription\n                    const subscriptionChannel = this._getChannel(\n                        data,\n                        operation\n                    );\n\n                    if (subscriptionChannel) {\n                        this._createSubscription(subscriptionChannel, ob);\n                    } else {\n                        // No subscription found in the response, pipe data through\n                        ob.next(data);\n                        ob.complete();\n                    }\n                }\n            });\n        });\n    }\n\n    _getChannel(data, operation) {\n        return !!data.extensions &&\n        !!data.extensions.lighthouse_subscriptions &&\n        !!data.extensions.lighthouse_subscriptions.channels\n            ? data.extensions.lighthouse_subscriptions.channels[\n                operation.operationName\n                ]\n            : null;\n    }\n\n    _createSubscription(subscriptionChannel, observer) {\n        const pusherChannel = this.pusher.subscribe(subscriptionChannel);\n        // Subscribe for more update\n        pusherChannel.bind('lighthouse-subscription', payload => {\n            if (!payload.more) {\n                // This is the end, the server says to unsubscribe\n                this.pusher.unsubscribe(subscriptionChannel);\n                observer.complete();\n            }\n            const result = payload.result;\n            if (result) {\n                // Send the new response to listeners\n                observer.next(result);\n            }\n        });\n    }\n}\n\nexport default Pusher;\n","\n\nexport class SubscriptionDriver {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { CampaignFilters, CompOperator } from '@app/models/campaign-filters.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport * as _ from 'lodash';\n\ninterface DialogData {\n    filter:CampaignFilters\n}\n\n@Component({\n    selector: 'app-campaign-filter-dialog',\n    templateUrl: './campaign-filter-dialog.component.html',\n    styleUrls: ['./campaign-filter-dialog.component.scss']\n})\nexport class CampaignFilterDialogComponent implements OnInit {\n    filter:CampaignFilters;\n    form:FormGroup;\n    showAllStatuses:boolean = true;\n    showCompOperator:boolean;\n    constructor(\n        private fb:FormBuilder, \n        @Inject(MAT_DIALOG_DATA) public data: any, \n        public ref: MatDialogRef<CampaignFilterDialogComponent>,\n    ) {}\n\n    ngOnInit() {\n        this.filter = _.cloneDeep(this.data.filter);\n        this.createForm();\n\n        this.showCompOperator = this.filter.compensation != null;\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    saveFilter():void {\n        if(this.form.invalid) return;\n        this.prepareModel();\n        this.ref.close(this.filter);        \n    }\n\n    updateCompOperatorForm():void {\n        this.showCompOperator = this.form.value.compensation != null;\n    }\n\n    changeShowAll(event):void {\n        this.showAllStatuses = event.checked;\n        \n        if(this.showAllStatuses) {\n            this.form.controls.active.patchValue(!this.showAllStatuses);\n            this.form.controls.active.disable();\n\n            this.form.controls.inactive.patchValue(!this.showAllStatuses);\n            this.form.controls.inactive.disable();\n        } else {\n            this.form.controls.active.enable();\n            this.form.controls.inactive.enable();\n        }\n        \n    }\n\n    private createForm() {\n        this.showAllStatuses = this.filter.activeStatus == null || this.filter.activeStatus === 'all';\n        this.form = this.fb.group({\n            active: this.fb.control({ value: this.filter.activeStatus === 'active', disabled: this.showAllStatuses }),\n            inactive: this.fb.control({ value: this.filter.activeStatus === 'inactive', disabled: this.showAllStatuses }),\n            compensation: this.fb.control(this.filter.compensation || ''),\n            compOperator: this.fb.control((this.filter.compOperator || CompOperator.Equals).toString(), [Validators.required]),\n            location: this.fb.control(this.filter.location)\n        });\n    }\n\n    private prepareModel():void {\n        if(this.showAllStatuses) {\n            this.filter.activeStatus = 'all';\n        } else if (this.form.value.active && !this.form.value.inactive) {\n            this.filter.activeStatus = 'active';\n        } else if (this.form.value.inactive && !this.form.value.active) {\n            this.filter.activeStatus = 'inactive';\n        } else if (this.form.value.active && this.form.value.inactive) {\n            this.filter.activeStatus = 'all';\n        }\n\n        this.filter.compensation = this.form.value.compensation;\n        this.filter.compOperator = this.form.value.compOperator;\n        this.filter.location = this.form.value.location;\n    }\n}\n","\n<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Filters</h4>\n    <button type=\"button\" mat-icon-button tabindex=\"-1\" (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form [formGroup]=\"form\" class=\"pb-4\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <h6>Active Status <small>Select to include:</small></h6>\n                <mat-checkbox [(checked)]=\"showAllStatuses\" (change)=\"changeShowAll($event)\" color=\"primary\">Show All</mat-checkbox><br />\n                <mat-checkbox formControlName=\"active\">Active</mat-checkbox><br />\n                <mat-checkbox formControlName=\"inactive\">Inactive</mat-checkbox>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-form-field>\n                    <mat-label>Compensation</mat-label>\n                    <span matPrefix>$ &nbsp;</span>\n                    <input type=\"text\" matInput formControlName=\"compensation\" (change)=\"updateCompOperatorForm()\" />\n                </mat-form-field>\n\n                <ng-container *ngIf=\"showCompOperator\">\n                    <mat-form-field>\n                        <mat-select formControlName=\"compOperator\">\n                            <mat-option value=\"0\">=</mat-option>\n                            <mat-option value=\"1\"><</mat-option>\n                            <mat-option value=\"2\">></mat-option>\n                            <mat-option value=\"3\"><=</mat-option>\n                            <mat-option value=\"4\">>=</mat-option>\n                        </mat-select>\n                        <mat-hint>Filter compensation amount</mat-hint>\n                    </mat-form-field>\n                </ng-container>\n            </div>\n        </div>\n    </form>\n    <div class=\"float-right\">\n        <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n        <button type=\"button\" mat-button color=\"primary\" (click)=\"saveFilter()\">Save</button>\n    </div>\n</div>","import {Injectable, OnInit} from '@angular/core';\nimport {HttpClient, HttpHeaders, HttpErrorResponse} from '@angular/common/http';\nimport {ICampaign, Utility} from '../models';\nimport {AuthService} from '../auth.service';\nimport {throwError, Observable, Observer} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CampaignService {\n    private apiUrl: string;\n    private api: string;\n    private _campaign: ICampaign;\n    get campaign(): ICampaign {\n        return this._campaign;\n    }\n    set campaign(value: ICampaign) {\n        this._campaign = value;\n    }\n\n    private _utility: Utility;\n    get utility(): Utility {\n        return this._utility;\n    }\n    set utility(value: Utility) {\n        this._utility = value;\n    }\n\n    /** INTERNAL USE ONLY --- these are referenced on NewSaleComponent */\n    _campaigns:ICampaign[];\n    _utilities:Utility[];\n\n    constructor(private http: HttpClient, private auth: AuthService) {\n        this.apiUrl = this.auth.apiUrl + 'api/' || '';\n        this.api = this.auth.apiUrl + 'api';\n    }\n\n    getCachedCampaigns(clientId:number, activeOnly:boolean = false):Observable<ICampaign[]> {\n        return Observable.create((observer:Observer<ICampaign[]>) => {\n            if(this._campaigns && this._campaigns.length) {\n                observer.next(this._campaigns);\n                observer.complete();\n            }\n            else {\n                this.getCampaigns(clientId, activeOnly)\n                    .then(campaigns => {\n                        this._campaigns = campaigns;\n                        observer.next(this._campaigns);\n                        observer.complete();\n                    });\n            }\n        });\n    }\n\n    // TODO: do I even use this anywhere?\n    // getCampaignsByClient(clientId:number): Promise<any> {\n    //   return this.http.get(this.apiUrl + 'clients/' + clientId + '/campaigns').toPromise();\n    // }\n\n    /**\n     * Returns all active campaigns accessible by the current user\n     *\n     * @param clientId\n     */\n    getCampaigns(clientId: number, activeOnly: boolean = null): Promise<ICampaign[]> {\n        const url =\n            activeOnly == null\n                ? `${this.apiUrl}campaigns/clients/${clientId}/active`\n                : `${this.apiUrl}campaigns/clients/${clientId}/active/${activeOnly}`;\n        return this.http.get<ICampaign[]>(url).toPromise();\n    }\n\n    getCampaign(clientId: number, campaignId: number): Observable<ICampaign> {\n        const url = `${this.apiUrl}clients/${clientId}/campaigns/${campaignId}`;\n        return this.http.get<ICampaign>(url);\n    }\n\n    getCampaignsByClient(clientId: number): Observable<ICampaign[]> {\n        return this.http\n            .get<ICampaign[]>(`${this.api}/campaigns/clients/${clientId}`)\n            .pipe(\n                tap(next => {\n                    this._campaigns = next;\n                    if(this._utilities == null)\n                        this._utilities = [];\n                    next.forEach(c => this._utilities.concat(c.utilities));\n                }),\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Get campaign entities by agent.\n     *\n     * @param clientId\n     * @param agentId\n     */\n    getCampaignsByAgent(clientId: number, agentId: number): Observable<ICampaign[]> {\n        const url = `${this.apiUrl}campaigns/clients/${clientId}/agents/${agentId}`;\n        return this.http.get<ICampaign[]>(url).pipe(catchError(this.handleError));\n    }\n\n    /**\n     * Checks to see if a campaign already exists for this clients by name.\n     *\n     * @param clientId\n     * @param name\n     */\n    checkCampaignNameAvailability(clientId: number, name: string): Promise<boolean> {\n        return this.http\n            .get<boolean>(this.apiUrl + 'campaigns/clients/' + clientId + '/campaign-name', {\n                params: {\n                    name: name\n                }\n            })\n            .toPromise();\n    }\n\n    /**\n     * Save a new/existing campaign entity.\n     *\n     * @param clientId\n     * @param campaignId\n     * @param dto\n     */\n    saveCampaign(clientId: number, campaignId: number, dto: ICampaign): Promise<ICampaign> {\n        let url =\n            campaignId != null\n                ? this.apiUrl + 'campaigns/clients/' + clientId + '/campaigns/' + campaignId\n                : this.apiUrl + 'campaigns/clients/' + clientId + '/campaigns';\n\n        return this.http.post<ICampaign>(url, {dto: dto}).toPromise();\n    }\n\n    getUtility(clientId: number, utilityId: number): Observable<Utility> {\n        const url = `${this.apiUrl}clients/${clientId}/utilities/${utilityId}`;\n        return this.http.get<Utility>(url).pipe(catchError(err => this.handleError(err)));\n    }\n\n    saveUtility(clientId: number, utility: Utility): Observable<Utility> {\n        const url = utility.utilityId > 0\n            ? `${this.apiUrl}clients/${clientId}/utilities/${utility.utilityId}`\n            : `${this.apiUrl}clients/${clientId}/utilities`;\n        return this.http.post<Utility>(url, utility)\n            .pipe(catchError(err => this.handleError(err)));\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // client side network error\n            console.log('Error occurred: ', error.error.message || error.message);\n        } else {\n            // backend returned server error\n            console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `);\n        }\n        return throwError('There was a network error. Please try again.');\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport * as _ from 'lodash';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\nimport {NewCampaignDialogComponent} from '@app/campaigns/new-campaign-dialog/new-campaign-dialog.component';\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\nimport {User, ICampaign} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {MessageService} from '@app/message.service';\nimport {UserRole} from '@app/models/role.model';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { CampaignFilters, CompOperator } from '@app/models/campaign-filters.model';\nimport { CampaignFilterDialogComponent } from '@app/campaigns/campaign-filter-dialog/campaign-filter-dialog.component';\nimport { FormControl } from '@angular/forms';\nimport { distinctUntilChanged, debounceTime, startWith } from 'rxjs/operators';\n\ninterface DataStore {\n    campaigns: ICampaign[];\n}\n\n@Component({\n    selector: 'app-campaigns',\n    templateUrl: './campaigns.component.html',\n    styleUrls: ['./campaigns.component.scss']\n})\nexport class CampaignsComponent implements OnInit {\n    private readonly defaultFilter:CampaignFilters = {\n        activeStatus: 'active',\n        compOperator: CompOperator.Equals,\n        compensation: null,\n        location: { name: 'Michigan', abbreviation: 'MI' }\n    };\n    filter:CampaignFilters;\n    filterActive:boolean;\n    numFilters = 0;\n    store:DataStore = {} as DataStore;\n    activeTab: number;\n    tableData: ICampaign[];\n\n    activeTableColumns = ['name', 'campaignId', 'active', 'createdAt', 'updatedAt'];\n    activeTableSource: ICampaign[] = [];\n    campaigns = new BehaviorSubject<ICampaign[]>(null);\n\n    inactiveTableSource: ICampaign[] = [];\n\n    floatBtnIsOpen$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    floatIsOpen: Observable<boolean>;\n\n    user: User;\n    searchText = new FormControl('');\n\n    constructor(\n        private dialog: MatDialog,\n        private session: SessionService,\n        private service: CampaignService,\n        private msg: MessageService,\n        private sanitizer:DomSanitizer\n    ) {\n        this.filter = this.defaultFilter;\n    }\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.userItem.subscribe((next: User) => {\n            if (next == null) return;\n            this.user = next;\n\n            // if the user isn't at least a company admin, then we are going to send them back to the page they\n            // were prior to reaching this point...\n            if (this.user.role.role < UserRole.COMPANY_ADMIN)\n                this.session.navigateBack().then(result => {\n                    console.dir(result);\n                });\n\n            this.service\n                .getCampaigns(this.user.sessionUser.sessionClient, false)\n                .then((campaigns: ICampaign[]) => {\n                    this.store.campaigns = campaigns;\n                    this.session.hideLoader();\n\n                    // TODO: remove after restructuring\n                    this.tableData = campaigns;\n                    this.sortCampaignsByStatus();\n                    this.updateCampaignsByFilter();\n                })\n                .catch(this.msg.showWebApiError);\n        });\n\n        this.floatIsOpen = this.floatBtnIsOpen$.asObservable();\n\n        this.searchText.valueChanges.pipe(\n            distinctUntilChanged(),\n            debounceTime(500),\n        ).subscribe(val => {\n            const dataset = this.processFilters();\n            const result = dataset.filter(c => c.name.toLowerCase().includes(val.trim().toLowerCase()));\n            this.campaigns.next(result);\n        });\n    }\n\n    switchActiveStatus(item: ICampaign, index:number): void {\n        this.session.showLoader();\n        index = _.findIndex(this.store.campaigns, { campaignId:item.campaignId });\n        const pendingCampaign = this.store.campaigns[index];\n\n        pendingCampaign.active = !pendingCampaign.active;\n\n        this.service.saveCampaign(this.user.sessionUser.sessionClient, pendingCampaign.campaignId, pendingCampaign)\n            .then(updated => {\n                this.session.hideLoader();\n                this.store.campaigns.map(c => c.campaignId === item.campaignId ? updated : c);\n                this.campaigns.next(this.store.campaigns);\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    addCampaign(): void {\n        this.floatBtnIsOpen$.next(true);\n        // show dialog with form...\n        const ref = this.dialog.open(NewCampaignDialogComponent, {\n            width: '650px',\n            data: {\n                user: this.user\n            }\n        });\n\n        ref.afterClosed().subscribe((result: ICampaign) => {\n            this.floatBtnIsOpen$.next(false);\n            if (result == null) return;\n\n            // do whatever updates that need to happen right here after adding a new campaign\n            this.tableData.push(result);\n            this.sortCampaignsByStatus();\n            this.updateActiveTab();\n        });\n    }\n\n    editCampaign(item: ICampaign): void {\n        const ref = this.dialog.open(NewCampaignDialogComponent, {\n            width: '650px',\n            data: {\n                user: this.user,\n                campaign: item\n            }\n        });\n\n        ref.afterClosed().subscribe((result: ICampaign) => {\n            if (result == null) return;\n\n            for (let i = 0; i < this.tableData.length; i++) {\n                // if the campaign ids don't match, skip to the next iteration\n                if (this.tableData[i].campaignId != result.campaignId) continue;\n\n                this.tableData[i] = result;\n                this.sortCampaignsByStatus();\n                this.updateActiveTab();\n            }\n        });\n    }\n\n    setFilters():void {\n        this.dialog.open(CampaignFilterDialogComponent, {\n            width: '350px',\n            data: {\n                filter: this.filter\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if (result == null) return;\n            this.filter = result;\n            this.updateCampaignsByFilter();\n        });\n    }\n\n    changeViewHandler(event:MatSlideToggleChange) {\n        const isChecked = event.checked;\n        const newFilterValue = isChecked ? 'all' : 'active';\n        this.filter.activeStatus = newFilterValue;\n        this.updateCampaignsByFilter();        \n    }\n\n    updateCampaignsByFilter():void {\n        let result:ICampaign[];\n        result = this.processFilters();\n\n        if (result != null) this.campaigns.next(result);\n        this.filterActive = true;\n    }\n\n    clearFilters():void {\n        this.filterActive = false;\n        this.campaigns.next(this.store.campaigns);\n        this.filter = this.defaultFilter;\n        this.numFilters = 0;\n    }\n\n    sanitize(value:string):SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n\n    // PRIVATE METHODS\n\n    private processFilters():ICampaign[] {\n        let result:ICampaign[];\n        this.numFilters = 0;\n\n        if (this.filter.activeStatus === 'all') {\n            result = this.store.campaigns;\n            this.numFilters++;\n\n        } else if (this.filter.activeStatus === 'active') {\n            result = _.filter(this.store.campaigns, (c:ICampaign) => {\n                return c.active;\n            });\n            this.numFilters++;\n\n        } else if (this.filter.activeStatus === 'inactive') {\n            result = _.filter(this.store.campaigns, (c:ICampaign) => {\n                return !c.active;\n            });\n            this.numFilters++;\n        }\n\n        if (this.filter.compensation > 0) {\n            if (this.filter.compOperator == CompOperator.Equals) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation === this.filter.compensation;\n                });\n            } else if (this.filter.compOperator == CompOperator.GreaterThan) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation > this.filter.compensation;\n                });\n            } else if (this.filter.compOperator == CompOperator.GreaterThanEqualTo) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation >= this.filter.compensation;\n                });\n            } else if (this.filter.compOperator == CompOperator.LessThan) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation < this.filter.compensation;\n                });\n            } else if (this.filter.compOperator == CompOperator.LessThanEqualTo) {\n                result = _.filter(result, (c:ICampaign) => {\n                    return c.compensation <= this.filter.compensation;\n                });\n            }\n            this.numFilters++;\n        }\n        return result;\n    }\n\n    private sortCampaignsByStatus(): void {\n        this.activeTableSource = [];\n        this.inactiveTableSource = [];\n\n        for (let i = 0; i < this.tableData.length; i++) {\n            const item = this.tableData[i];\n            if (item.active) {\n                this.activeTableSource.push(item);\n            } else {\n                this.inactiveTableSource.push(item);\n            }\n        }\n\n        this.activeTableSource = _.sortBy(this.activeTableSource, ['name']);\n        this.inactiveTableSource = _.sortBy(this.inactiveTableSource, ['name']);\n    }\n\n    private updateActiveTab(): void {\n        if (this.activeTableSource.length === 0 && this.inactiveTableSource.length > 0) {\n            this.activeTab = 1;\n        } else if (this.inactiveTableSource.length === 0 && this.activeTableSource.length > 0) {\n            this.activeTab = 0;\n        }\n    }\n}\n\n\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"col-md-10\">\n                            <h3>Campaign Management</h3>\n                        </div>\n                        <div class=\"col-md-2 d-flex justify-content-end align-items-center\">\n                            <mat-slide-toggle (change)=\"changeViewHandler($event)\" class=\"mr-2\">Show All</mat-slide-toggle>\n                            <mat-form-field>\n                                <input type=\"text\" matInput [formControl]=\"searchText\" placeholder=\"Search Campaigns\" />\n                            </mat-form-field>\n                            \n                            <!-- <button type=\"button\" \n                                mat-icon-button \n                                color=\"primary\" \n                                (click)=\"setFilters()\" \n                                [class.filter-active]=\"filterActive\"\n                            >\n                                <mat-icon>filter_list</mat-icon>\n                            </button>\n                            <button type=\"button\"\n                                class=\"ml-2\"\n                                mat-flat-button\n                                color=\"primary\"\n                                [matBadge]=\"numFilters\"\n                                matBadgePosition=\"after\"\n                                matBadgeColor=\"accent\"\n                                [matBadgeHidden]=\"!filterActive\"\n                                matBadgeOverlap=\"true\"\n                                (click)=\"clearFilters()\"\n                                *ngIf=\"filterActive\"\n                            >\n                                Clear Filters\n                            </button> -->\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <ng-container *ngIf=\"(campaigns|async)?.length\">\n            <div class=\"col-md-6 my-2\" *ngFor=\"let c of (campaigns | async); let i = index\">\n                <div class=\"card hoverable\">\n                    <!-- <div class=\"card-header text-center\">{{c.name}}</div> -->\n                    <div class=\"card-body px-3 pt-1 pb-2\" [ngClass]=\"c.active ? 'border-top-info' : 'border-top-light'\">\n                        <div class=\"row\">\n                            <div class=\"col-md-10 d-flex align-items-center\">\n                                <h5 class=\"card-title mb-0\" [class.text-muted]=\"!c.active\">{{c.name}}</h5>\n                            </div>\n                            <div class=\"col-md-2 d-flex align-items-start justify-content-end\">\n                                <button mat-icon-button type=\"button\" [matMenuTriggerFor]=\"menu\" class=\"float-right\" [class.text-muted]=\"!c.active\">\n                                    <mat-icon>more_vert</mat-icon>\n                                </button>\n                                <mat-menu #menu>\n                                    <button mat-menu-item (click)=\"editCampaign(c)\" *ngIf=\"c.active\">Edit</button>\n                                    <button mat-menu-item *ngIf=\"c.active\" [routerLink]=\"'/campaigns/'+c.campaignId\">\n                                        Detail\n                                    </button>\n                                    <button mat-menu-item (click)=\"switchActiveStatus(c, i)\">{{c.active ? 'Deactivate' : 'Activate'}}</button>\n                                </mat-menu>\n                            </div>\n                        </div>\n    \n                        <div class=\"card-text my-2\" *ngIf=\"c.utilities != null && c.utilities.length\">\n                            <p>Utilities</p>\n                            <mat-divider></mat-divider>\n                            <mat-list class=\"utility-list\">\n                                <mat-list-item *ngFor=\"let u of c.utilities\">\n                                    <mat-icon mat-list-icon>store</mat-icon>\n                                    <h5 mat-line>{{u.utilityName}}</h5>\n                                    <p mat-line class=\"font-italic text-muted\">{{u.classification}}</p>\n                                </mat-list-item>\n                            </mat-list>\n                        </div>\n    \n                    </div>\n                    <div class=\"card-footer d-flex bg-light\" [ngClass]=\"c.compensation != null ? 'justify-content-between' : 'justify-content-end'\">\n                        <small class=\"font-italic text-dark\" *ngIf=\"c.compensation != null\">Compensation: ${{c.compensation}}</small>\n                        <small class=\"font-italic\" [ngClass]=\"!c.active ? 'text-muted' : 'text-info'\">\n                            {{c.active ? 'Active' : 'Inactive'}}\n                        </small>\n                    </div>\n                </div>\n            </div>\n        </ng-container>\n    </div>\n    \n</div>\n\n<vs-float-button\n  mat-icon=\"add\"\n  (callback)=\"addCampaign()\"\n  [isOpen]=\"floatIsOpen\"\n></vs-float-button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CampaignsComponent } from './campaigns.component';\nimport { MaterialModule } from '@app/material/material.module';\nimport { NewCampaignDialogComponent } from './new-campaign-dialog/new-campaign-dialog.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { QuillModule } from 'ngx-quill';\nimport { CampaignFilterDialogComponent } from './campaign-filter-dialog/campaign-filter-dialog.component';\nimport { CampaignDetailComponent } from './components/campaign-detail/campaign-detail.component';\nimport { RouterModule } from '@angular/router';\nimport { UtilityDetailComponent } from './components/utility-detail/utility-detail.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MaterialModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    FabFloatBtnModule,\n    QuillModule\n  ],\n  declarations: [\n    CampaignsComponent,\n    NewCampaignDialogComponent,\n    CampaignFilterDialogComponent,\n    CampaignDetailComponent,\n    UtilityDetailComponent\n  ],\n  entryComponents: [\n    NewCampaignDialogComponent,\n    CampaignFilterDialogComponent\n  ]\n})\nexport class CampaignsModule { }\n","import {Component, OnInit} from '@angular/core';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport { ICampaign, User, Utility } from '@app/models';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SessionService } from '@app/session.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { QuillConfig } from '@app/shared/quill-config';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n    selector: 'vs-campaign-detail',\n    templateUrl: './campaign-detail.component.html',\n    styleUrls: ['./campaign-detail.component.scss']\n})\nexport class CampaignDetailComponent implements OnInit {\n\n    user:User;\n    campaignId:number;\n    private _campaign:ICampaign;\n    campaign:BehaviorSubject<ICampaign> = new BehaviorSubject<ICampaign>({} as ICampaign);\n    form:FormGroup = this.createForm();\n\n    modules = QuillConfig.DEFAULT_MODULE;\n\n    constructor(\n        private route:ActivatedRoute, \n        private service: CampaignService, \n        private session:SessionService,\n        private fb:FormBuilder,\n        private router:Router\n    ) {\n        this.route.params.subscribe(params => {\n            this.campaignId = params.campaignId;\n        });\n    }\n\n    ngOnInit() {\n        this.session.userItem.subscribe(u => {\n            this.user = u;\n\n            this.service.getCampaign(this.user.sessionUser.sessionClient, this.campaignId)\n                .subscribe(campaign => {\n                    this._campaign = campaign;\n                    this.campaign.next(campaign);\n                    this.patchForm();\n                });\n        });\n    }\n\n    quillContentChanged(event) {\n        console.dir(event);\n    }\n\n    editUtility(utility:Utility) {\n        this.service.utility = utility;\n        this.service.campaign = this._campaign;\n        this.router.navigate(['/utilities', utility.utilityId]);\n    }\n\n    addUtility():void {\n        this.service.campaign = this._campaign;\n        this.router.navigate(['/add-utility']);\n    }\n\n    isEven(value):boolean {\n        return value % 2 == 0;\n    }\n\n    private createForm():FormGroup {\n        return this.fb.group({\n            mdDetails: this.fb.control(''),\n            mdOnboarding: this.fb.control(''),\n            mdOther: this.fb.control(''),\n            compensation: this.fb.control(''),\n            utilities: this.fb.array([])\n        });\n    }\n\n    private patchForm() {\n        this.form.patchValue({\n            mdDetails: this._campaign.mdDetails,\n            mdOnboarding: this._campaign.mdOnboarding,\n            mdOther: this._campaign.mdOther,\n            compensation: this._campaign.compensation,\n            utilities: this._campaign.utilities != null ? this._campaign.utilities : []\n        });\n    }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <h3 mat-card-title>Campaign Details</h3>\n                <mat-card-subtitle>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol class=\"breadcrumb\">\n                            <li class=\"breadcrumb-item\"><a routerLink=\"/campaigns\">Campaigns</a></li>\n                            <li class=\"breadcrumb-item active\" aria-current=\"page\">Detail</li>\n                        </ol>\n                    </nav>\n                </mat-card-subtitle>\n            </mat-card>\n        </div>\n    </div>\n    <ng-container *ngIf=\"campaign|async as campaign\" [formGroup]=\"form\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-card>\n                    <h4 mat-card-title>General Information - {{campaign.name}}</h4>\n                    <mat-card-content>\n                        <div class=\"row mb-4\">\n                            <div class=\"col-md-12\">\n                                <div class=\"my-1\">\n                                    <span class=\"font-weight-bold\" [class.text-muted]=\"!campaign.active\">Status: </span>\n                                    {{ campaign.active ? 'Active' : 'Inactive' }}\n                                </div>\n                                <div class=\"my-1\">\n                                    <mat-form-field>\n                                        <input matInput placeholder=\"Compensation\" formControlName=\"compensation\" />\n                                        <span matPrefix>$&nbsp;</span>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-12\">\n                                <mat-accordion>\n                                    <mat-expansion-panel>\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>\n                                                Detail and Info\n                                            </mat-panel-title>\n                                        </mat-expansion-panel-header>\n\n                                        <p class=\"font-italic text-muted\">\n                                            This is some brief information that describes the campaign and gives pertinent information to employees.\n                                        </p>\n                                        <quill-editor \n                                            [style]=\"{height: '200px'}\" \n                                            formControlName=\"mdDetails\" \n                                            (onContentChanged)=\"quillContentChanged($event)\"\n                                            [modules]=\"modules\"\n                                        ></quill-editor>\n                                    </mat-expansion-panel>\n\n                                    <mat-expansion-panel>\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>\n                                                Onboarding.\n                                            </mat-panel-title>\n                                        </mat-expansion-panel-header>\n\n                                        <p class=\"font-italic text-muted\">\n                                            Onboarding. No problem. Let's tell the employees how to get it done. \n                                        </p>\n                                        <quill-editor \n                                            [style]=\"{height: '200px'}\" \n                                            formControlName=\"mdOnboarding\" \n                                            (onContentChanged)=\"quillContentChanged($event)\"\n                                            [modules]=\"modules\"\n                                        ></quill-editor>\n                                    </mat-expansion-panel>\n\n                                    <mat-expansion-panel>\n                                        <mat-expansion-panel-header>\n                                            <mat-panel-title>\n                                                Additional Info\n                                            </mat-panel-title>\n                                        </mat-expansion-panel-header>\n\n                                        <p class=\"font-italic text-muted\">\n                                            Is there additional information you need to share about this campaign? (Restrictions, permit necessities, etc)\n                                        </p>\n                                        <quill-editor \n                                            [style]=\"{height: '200px'}\" \n                                            formControlName=\"mdOther\" \n                                            (onContentChanged)=\"quillContentChanged($event)\"\n                                            [modules]=\"modules\"\n                                        ></quill-editor>\n                                    </mat-expansion-panel>\n                                </mat-accordion>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n        <div class=\"row my-2\">\n            <div class=\"col-md-12\">\n                <mat-card>\n                    <h4 mat-card-title>Utilities</h4>\n                    <mat-card-subtitle>\n                        Information about the utilities available for \n                        <span class=\"font-weight-bold\">{{campaign.name}}. </span>\n                        The accuracy of this information is extremely important as it is used to generate reporting sent \n                        to the EDI and Utility company. \n                    </mat-card-subtitle>\n                    <mat-card-content>\n                        <div class=\"row\" *ngIf=\"campaign.utilities != null\">\n                            <ng-container *ngFor=\"let u of campaign.utilities; let i = index\">\n                                <div class=\"col-md-6\">\n                                    <mat-card class=\"mat-card-border-primary\">\n                                        <mat-card-header>\n                                            <mat-icon mat-card-avatar>domain</mat-icon>\n                                            <h5 mat-card-title>{{u.utilityName}}</h5>\n                                            <mat-card-subtitle>Commodity: {{u.commodity}}</mat-card-subtitle>\n                                            <div class=\"flex-grow-1\">\n                                                <button type=\"button\" \n                                                    mat-button \n                                                    color=\"primary\" \n                                                    class=\"float-right\" \n                                                    (click)=\"editUtility(u)\"\n                                                >\n                                                    <mat-icon inline=\"true\">edit</mat-icon> Edit\n                                                </button>\n                                            </div>\n                                        </mat-card-header>\n                                        <mat-card-content>\n                                            <p>Status: {{u.isActive ? 'Active' : 'Inactive'}}</p>\n                                        </mat-card-content>\n                                    </mat-card>\n                                </div>\n                            </ng-container>\n                        </div>\n                       \n                        <div class=\"row row-top-border-primary\">\n                            <div class=\"col-md-12 d-flex justify-content-center\">\n                                <button type=\"button\" mat-button color=\"primary\" (click)=\"addUtility()\">\n                                    <mat-icon inline=\"true\">add</mat-icon> Utility\n                                </button>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Utility, ICampaign, User } from '@app/models';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { ActivatedRoute, Router, ParamMap } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { SessionService } from '@app/session.service';\nimport { switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport { MessageService } from '@app/message.service';\n\n@Component({\n    selector: 'vs-utility-detail',\n    templateUrl: './utility-detail.component.html',\n    styleUrls: ['./utility-detail.component.scss']\n})\nexport class UtilityDetailComponent implements OnInit {\n\n    user:User;\n    campaign:ICampaign;\n    utility:Utility;\n    form:FormGroup = this.createForm();\n    isNew:boolean;\n\n    constructor(\n        private route:ActivatedRoute, \n        private router:Router,\n        private location:Location,\n        private fb:FormBuilder, \n        private campaignService:CampaignService,\n        private session:SessionService,\n        private msg:MessageService\n    ) {}\n\n    ngOnInit() {\n        this.session.getUserItem().subscribe(u => {\n            this.user = u;\n            this.utility = this.campaignService.utility;\n            this.campaign = this.campaignService.campaign;\n\n            if(this.utility == null) {\n                this.route.paramMap\n                    .pipe(\n                        switchMap((params:ParamMap) => {\n                            const utilityId = params.get('utilityId') as any;\n                            if(utilityId == null) {\n                                this.isNew = true;\n                                this.campaign = this.campaignService.campaign;\n                                if(this.campaign == null)\n                                    this.router.navigate(['/campaigns']);\n                                return of(null);\n                            }\n                            return this.campaignService.getUtility(this.user.sessionUser.sessionClient, utilityId);\n                        })\n                    )\n                    .subscribe(utility => {\n                        if(utility == null) return;\n                        this.utility = utility;\n                        this.campaign = utility.campaign;\n                        this.patchForm();\n                    });\n\n            } else {\n                this.patchForm();\n            }\n        });\n    }\n\n    cancel():void {\n        this.campaignService.utility = null;\n        this.campaignService.campaign = null;\n        this.location.back();\n    }\n\n    saveUtility() {\n        if(this.form.invalid) return;\n\n        this.campaignService.saveUtility(this.user.sessionUser.sessionClient, this.prepareModel())\n            .subscribe(utility => {\n                this.utility = utility;\n                this.msg.addMessage('Saved Utility successfully!', 'dismiss', 3000);\n                this.router.navigate(['/campaigns', this.utility.campaignId]);\n            });\n    }\n\n    private createForm() {\n        return this.fb.group({\n            utilityId: this.fb.control(''),\n            campaignId: this.fb.control(''),\n            commodity: this.fb.control(''),\n            agentCompanyId: this.fb.control(''),\n            agentCompanyName: this.fb.control('', [Validators.required]),\n            utilityName: this.fb.control('', [Validators.required]),\n            meterNumber: this.fb.control(''),\n            classification: this.fb.control(''),\n            price: this.fb.control(''),\n            unitOfMeasure: this.fb.control(''),\n            term: this.fb.control(''),\n            isActive: this.fb.control(true)\n        });\n    }\n\n    private patchForm() {\n        this.form.patchValue({\n            utilityId: this.utility.utilityId || null,\n            campaignId: this.utility.campaignId || this.campaign.campaignId || null,\n            commodity: this.utility.commodity || '',\n            agentCompanyId: this.utility.agentCompanyId || '',\n            agentCompanyName: this.utility.agentCompanyName || '',\n            utilityName: this.utility.utilityName || '',\n            meterNumber: this.utility.meterNumber || '',\n            classification: this.utility.classification || '',\n            price: this.utility.price || '',\n            unitOfMeasure: this.utility.unitOfMeasure || '',\n            term: this.utility.term || '',\n            isActive: this.utility.isActive\n        });\n    }\n\n    private prepareModel():Utility\n    {\n        return {\n            utilityId: this.form.value.utilityId,\n            campaignId: this.form.value.campaignId || this.campaign.campaignId,\n            agentCompanyId: this.form.value.agentCompanyId,\n            agentCompanyName: this.form.value.agentCompanyName,\n            classification: this.form.value.classification,\n            commodity: this.form.value.commodity,\n            meterNumber: this.form.value.meterNumber,\n            price: this.form.value.price,\n            term: this.form.value.term,\n            unitOfMeasure: this.form.value.unitOfMeasure,\n            utilityName: this.form.value.utilityName,\n            isActive: this.form.value.isActive\n        } as Utility;\n    }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <h3 mat-card-title>Edit Utility</h3>\n                <mat-card-subtitle>\n                    <nav aria-label=\"breadcrumb\">\n                        <ol class=\"breadcrumb\">\n                            <li class=\"breadcrumb-item\"><a routerLink=\"/campaigns\">Campaigns</a></li>\n                            <li class=\"breadcrumb-item\"><a [routerLink]=\"['/campaigns', campaign.campaignId]\">{{campaign.name}}</a></li>\n                            <li class=\"breadcrumb-item active\" aria-current=\"page\">Utility Detail</li>\n                        </ol>\n                    </nav>\n                </mat-card-subtitle>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n            <mat-card>\n                <mat-card-title>\n                    Please fill out all required fields.\n                </mat-card-title>\n                <mat-card-content>\n                    <div [formGroup]=\"form\" class=\"d-flex flex-column\">\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Utility\" formControlName=\"utilityName\" required />\n                            <mat-hint>Name of the utility how you'd like on the reporting.</mat-hint>\n                            <mat-error *ngIf=\"form.get('utilityName').hasError('required')\">\n                                Please enter a utility name.\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Agent Company\" formControlName=\"agentCompanyName\" required />\n                            <mat-hint>Name you'd like to show for agent company on reporting.</mat-hint>\n                            <mat-error *ngIf=\"form.get('agentCompanyName').hasError('required')\">\n                                Please enter a company name.\n                            </mat-error>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Agent Company ID\" formControlName=\"agentCompanyId\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Commodity\" formControlName=\"commodity\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Meter Number\" formControlName=\"meterNumber\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Classification\" formControlName=\"classification\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Price\" formControlName=\"price\" />\n                            <mat-hint>Price of the utility per Unit of Measure (not compensation to agent).</mat-hint>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Unit of Measure\" formControlName=\"unitOfMeasure\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <input matInput type=\"text\" placeholder=\"Term\" formControlName=\"term\" />\n                        </mat-form-field>\n                        <mat-checkbox formControlName=\"isActive\">Active</mat-checkbox>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button type=\"button\" mat-button (click)=\"cancel()\">Cancel</button>\n                    <button type=\"button\" mat-button color=\"primary\" (click)=\"saveUtility()\">Save</button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","import {Component, OnInit, Inject, ViewChild, OnChanges} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {User, ICampaign} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {MessageService} from '@app/message.service';\nimport { QuillEditorComponent } from 'ngx-quill';\n\ninterface DialogData {\n    user:User,\n    campaign:ICampaign\n}\n\n@Component({\n    selector: 'app-new-campaign-dialog',\n    templateUrl: './new-campaign-dialog.component.html',\n    styleUrls: ['./new-campaign-dialog.component.scss']\n})\nexport class NewCampaignDialogComponent implements OnInit {\n    user: User;\n    campaign: ICampaign;\n    form: FormGroup;\n    @ViewChild('editor', { static: false }) editor: QuillEditorComponent\n\n    // set to true if an existing campaign has been opened\n    hasExistingCampaign: boolean = false;\n    modules:any = {\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n            [{ 'font': [] }],\n            [{ 'color': [], 'background': [] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // headings\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }], // lists\n            [{ 'align': [] }],\n            ['blockquote'],\n            [{ 'indent': '-1'}, { 'indent': '+1' }], // indentations\n            ['link', 'image'] // media\n        ]\n    }\n\n    constructor(\n        public diagRef: MatDialogRef<NewCampaignDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private fb: FormBuilder,\n        private service: CampaignService,\n        private session: SessionService,\n        private msg: MessageService\n    ) {\n        this.hasExistingCampaign = this.data.campaign != null;\n\n        if (!this.hasExistingCampaign) {\n            this.createForm();\n            this.campaign = this.createEmptyCampaign();\n        } else {\n            this.campaign = data.campaign;\n            this.createForm(this.campaign);\n        }\n\n        this.user = this.data.user;\n    }\n\n    ngOnInit() {\n        // this.session.loadTokenStorageItem();\n    }\n\n    onNoClick():void {\n        this.diagRef.close();\n    }\n\n    /**\n     * Save a new/existing campaign entity to the database.\n     *\n     */\n    saveCampaign(): void {\n        // If this dialog had an existing campaign passed to it when it opened\n        // we are going to skip checking if one exists, so that we don't get an error\n        // telling us we can't update.\n        if (this.hasExistingCampaign) {\n            this.campaign = this.prepareCampaign();\n\n            this.service\n                .saveCampaign(this.user.sessionUser.sessionClient, this.campaign.campaignId, this.campaign)\n                .then((updated: ICampaign) => {\n                    this.diagRef.close(updated);\n                })\n                .catch(this.msg.showWebApiError);\n        } else {\n            this.service\n                .checkCampaignNameAvailability(1, this.form.controls.name.value)\n                .then((exists: boolean) => {\n                    if (exists) {\n                        this.msg.addMessage('Name already exists.', 'dismiss', 6000);\n                        return;\n                    }\n\n                    this.campaign = this.prepareCampaign();\n\n                    // FINISH THE METHOD HERE TO SAVE THE NEW CAMPAIGN\n                    this.service\n                        .saveCampaign(this.user.sessionUser.sessionClient, null, this.campaign)\n                        .then(campaign => {\n                            this.diagRef.close(campaign);\n                        })\n                        .catch(this.msg.showWebApiError);\n                })\n                .catch(this.msg.showWebApiError);\n        }\n    }\n\n    cancel(): void {\n        this.diagRef.close(null);\n    }\n\n    quillContentChanged(event) {\n        // console.dir(this.form.value);\n    }\n\n    // PRIVATE METHODS\n\n    private prepareCampaign(): ICampaign {\n        const form = this.form.value;\n        return {\n            campaignId: this.campaign.campaignId || null,\n            clientId: this.user.sessionUser.sessionClient,\n            name: form.name,\n            active: form.active,\n            compensation: form.compensation,\n            mdDetails: form.mdDetails,\n            mdOnboarding: form.mdOnboarding,\n            mdOther: form.mdOther\n        };\n    }\n\n    private createForm(campaign: ICampaign = null): void {\n        this.form = this.fb.group({\n            name: this.fb.control(campaign == null ? '' : campaign.name, [Validators.required]),\n            active: this.fb.control(campaign == null ? true : campaign.active),\n            compensation: this.fb.control(campaign == null ? '' : campaign.compensation || '', [Validators.pattern(/(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/)]),\n            mdDetails: this.fb.control(campaign == null ? '' : campaign.mdDetails || ''),\n            mdOnboarding: this.fb.control(campaign == null ? '' : campaign.mdOnboarding || ''),\n            mdOther: this.fb.control(campaign == null ? '' : campaign.mdOther || '')\n        });\n    }\n\n    private createEmptyCampaign(): ICampaign {\n        return <ICampaign>{\n            campaignId: null,\n            clientId: null,\n            name: null,\n            active: true,\n            compensation: null,\n            mdDetails: null,\n            mdOnboarding: null,\n            mdOther: null\n        };\n    }\n}\n","\n<div class=\"modal-header\">\n    <h3 class=\"modal-title\">Add a Campaign</h3>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\" tabindex=\"-1\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveCampaign()\">\n        <div class=\"row\">\n            <div class=\"col-md-5\">\n                <mat-form-field>\n                    <input type=\"text\" matInput placeholder=\"Name\" formControlName=\"name\" />\n                    <mat-error *ngIf=\"form.get('name').hasError('required')\">\n                        Please enter a name.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-7 d-flex align-items-center\">\n                <mat-checkbox hidden formControlName=\"active\">Active</mat-checkbox>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <mat-form-field>\n                    <span matPrefix>$ &nbsp;</span>\n                    <input matInput type=\"text\" placeholder=\"Compensation\" formControlName=\"compensation\" />\n                    <mat-error *ngIf=\"form.get('compensation').hasError('pattern')\">\n                        Please enter numbers only.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        \n        <div class=\"row mb-4\">\n            <div class=\"col-md-12\">\n                <mat-accordion>\n                    <mat-expansion-panel expanded=\"true\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                Detail and Info\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <p class=\"font-italic text-muted\">\n                            This is some brief information that describes the campaign and gives pertinent information to employees.\n                        </p>\n                        <quill-editor \n                            [style]=\"{height: '200px'}\" \n                            formControlName=\"mdDetails\" \n                            (onContentChanged)=\"quillContentChanged($event)\"\n                            [modules]=\"modules\"\n                        ></quill-editor>\n                    </mat-expansion-panel>\n\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                How we get started\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <p class=\"font-italic text-muted\">\n                            Onboarding. No problem. Let's tell the employees how to get it done. \n                        </p>\n                        <quill-editor \n                            [style]=\"{height: '200px'}\" \n                            formControlName=\"mdOnboarding\" \n                            (onContentChanged)=\"quillContentChanged($event)\"\n                            [modules]=\"modules\"\n                        ></quill-editor>\n                    </mat-expansion-panel>\n\n                    <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                Additional Info\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <p class=\"font-italic text-muted\">\n                            Is there additional information you need to share about this campaign? (Restrictions, permit necessities, etc)\n                        </p>\n                        <quill-editor \n                            [style]=\"{height: '200px'}\" \n                            formControlName=\"mdOther\" \n                            (onContentChanged)=\"quillContentChanged($event)\"\n                            [modules]=\"modules\"\n                        ></quill-editor>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n        </div>\n    </form>\n    <div class=\"float-right\">\n        <button mat-button type=\"button\" (click)=\"cancel()\">Cancel</button>\n        <button mat-button color=\"primary\" (click)=\"saveCampaign()\">Save</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { User, IClient, IClientOption, SaleStatus } from '../models/index';\nimport { Validators, NgForm, FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MessageService } from '../message.service';\nimport { ClientService } from './client.service';\nimport { BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\nimport { UserService } from '../user-features/user.service';\nimport { SessionService } from '@app/session.service';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddSaleStatusDialog } from '@app/client-information/dialogs/add-sale-status.component';\n\n@Component({\n    selector: 'app-client-information',\n    templateUrl: './client-information.component.html',\n    styleUrls: ['./client-information.component.scss']\n})\nexport class ClientInformationComponent implements OnInit {\n    user: User;\n    clients: IClient[];\n    client: IClient;\n    editMode: boolean;\n    editOptions: boolean;\n    displayColumns: string[] = ['name', 'isActive'];\n    saleStatusForm: FormGroup;\n    saleStatuses$: BehaviorSubject<SaleStatus[]> = new BehaviorSubject([]);\n\n    tooltipPosition = 'after';\n\n    allStatuses: SaleStatus[];\n    showAllStatuses: boolean;\n    hasInactiveStatuses: boolean;\n    options:IClientOption;\n    useExistingContacts = new FormControl();\n\n    states: string[] = [\n        'AL',\n        'AK',\n        'AZ',\n        'AR',\n        'CA',\n        'CO',\n        'CT',\n        'DE',\n        'FL',\n        'GA',\n        'HI',\n        'ID',\n        'IL',\n        'IN',\n        'IA',\n        'KS',\n        'KY',\n        'LA',\n        'ME',\n        'MD',\n        'MA',\n        'MI',\n        'MN',\n        'MS',\n        'MO',\n        'MT',\n        'NE',\n        'NV',\n        'NH',\n        'NJ',\n        'NM',\n        'NY',\n        'NC',\n        'ND',\n        'OH',\n        'OK',\n        'OR',\n        'PA',\n        'RI',\n        'SC',\n        'SD',\n        'TN',\n        'TX',\n        'UT',\n        'VT',\n        'VA',\n        'WA',\n        'WV',\n        'WI',\n        'WY'\n    ];\n\n    constructor(\n        private msg: MessageService,\n        private clientService: ClientService,\n        private userService: UserService,\n        private session: SessionService,\n        private fb: FormBuilder,\n        private dailog: MatDialog\n    ) {\n        this.client = this.setEmptyClient();\n    }\n\n    ngOnInit() {\n        \n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n            this.client = this.user.sessionUser.client;\n            this.clients = this.user.clients;\n\n            this.clientService.getClientOptions().subscribe(options => {\n                this.options = options;\n                this.useExistingContacts.setValue(this.options.useExistingContacts);\n            });\n\n            this.clientService.getSaleStatuses(this.client.clientId).subscribe(statuses => {\n                this.allStatuses = statuses;\n                this.evaluateShowAllStatus();\n\n                const activeStatuses = statuses.filter(s => s.isActive);\n                this.saleStatuses$.next(activeStatuses);\n\n                this.createSaleStatusForm();\n\n                const defaults = statuses.filter(s => s.clientId < 1);\n\n                if (defaults.length > 0) {\n                    this.clientService.setDefaultStatuses(this.client.clientId, defaults).subscribe(results => {\n                        this.saleStatuses$.next(results);\n                    });\n                }\n            });\n        });\n    }\n\n    filterStatuses(): void {\n        const filteredStatusList = this.showAllStatuses\n            ? this.allStatuses\n            : _.filter(this.allStatuses, (s: SaleStatus) => {\n                  return s.isActive;\n              });\n        this.saleStatuses$.next(filteredStatusList);\n    }\n\n    save(f: NgForm) {\n        if (f.valid) {\n            if (this.client.clientId > 0) {\n                this.clientService.updateClient(this.client);\n                this.editMode = !this.editMode;\n                if (this.client.clientId > 0) f.reset();\n            }\n        }\n    }\n\n    cancel(f: NgForm) {\n        this.client = this.user.sessionUser.client;\n        this.editMode = !this.editMode;\n        f.reset();\n    }\n\n    changeEditMode(f: NgForm): void {\n        if (!f.dirty) {\n            this.editMode = !this.editMode;\n        } else {\n            f.reset();\n        }\n    }\n\n    onStateChange($evt) {\n        this.client.state = $evt.value;\n    }\n\n    changeOptionsMode() {\n        this.editOptions = !this.editOptions;\n    }\n\n    saveOptions() {\n        this.clientService.updateClientOptions(this.user.sessionUser.client.options);\n    }\n\n    updateActiveStatus(saleStatus: SaleStatus): void {\n        this.clientService.updateSaleStatus(saleStatus.clientId, saleStatus).subscribe(item => {\n            this.msg.addMessage('Successfully updated!', 'dismiss', 2500);\n\n            this.allStatuses.map(s => {\n                if (s.saleStatusId != item.saleStatusId) return s;\n                s = item;\n                return s;\n            });\n            this.evaluateShowAllStatus();\n        });\n    }\n\n    showAddSaleStatusDialog(): void {\n        const ref = this.dailog.open(AddSaleStatusDialog, {\n            width: '400px'\n        });\n\n        ref.afterClosed().subscribe(result => {\n            if (result == null) return;\n            const dto: SaleStatus = {\n                saleStatusId: null,\n                name: result.name,\n                isActive: result.isActive,\n                clientId: this.client.clientId\n            };\n            this.clientService.createSaleStatus(this.client.clientId, dto).subscribe(result => {\n                this.msg.addMessage('Successfully saved status.', 'dismiss', 3000);\n                this.allStatuses.push(result);\n                this.allStatuses = _.sortBy(this.allStatuses, ['name']);\n                this.evaluateShowAllStatus();\n            });\n        });\n    }\n\n    changeUseExistingContacts(event:MatCheckboxChange) {\n        this.useExistingContacts.setValue(event.checked);\n        this.options.useExistingContacts = this.useExistingContacts.value;\n\n        this.clientService.updateUseExistingContacts(this.options)\n            .subscribe(op => {\n                this.options = op;\n                this.msg.addMessage('Updated mobile app settings.', 'dismiss', 2500);\n            });\n    }\n\n    private evaluateShowAllStatus(): void {\n        this.hasInactiveStatuses =\n            _.find(this.allStatuses, (s: SaleStatus) => {\n                return !s.isActive;\n            }) != null;\n        this.showAllStatuses = this.hasInactiveStatuses ? this.showAllStatuses : false;\n    }\n\n    private setEmptyClient(): IClient {\n        return {\n            clientId: 0,\n            active: false,\n            city: null,\n            name: null,\n            options: <IClientOption>{\n                clientId: 0,\n                hasOnboarding: false,\n                optionsId: 0\n            },\n            phone: null,\n            state: null,\n            street: null,\n            taxid: null,\n            zip: null\n        };\n    }\n\n    private createSaleStatusForm(): FormGroup {\n        const statuses = this.saleStatuses$.getValue();\n        let formArray: FormGroup[] = [];\n        if (statuses.length > 0) {\n            statuses.forEach(s => {\n                formArray.push(this.createSaleFormGroup(s));\n            });\n            formArray.push(this.createSaleFormGroup());\n        } else {\n            formArray.push(this.createSaleFormGroup());\n        }\n        return this.fb.group({\n            statuses: formArray\n        });\n    }\n\n    private createSaleFormGroup(status: SaleStatus = null): FormGroup {\n        status = status == null ? { saleStatusId: null, name: null, isActive: false, clientId: null } : status;\n        return this.fb.group({\n            name: this.fb.control(status.name || '', [Validators.required]),\n            isActive: this.fb.control(status.isActive)\n        });\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <form #f=\"ngForm\" (ngSubmit)=\"save(f)\">\n                    <h2 mat-card-title>Organization Details</h2>\n                    <mat-card-header class=\"justify-content-between\">\n                        <mat-slide-toggle [ngClass]=\"{'float-right': true, 'text-muted': !editMode, 'text-light': editMode}\"\n                            [checked]=\"editMode\" (change)=\"changeEditMode(f)\" [disabled]=\"f.touched\" color=\"primary\">\n                        </mat-slide-toggle>\n                    </mat-card-header>\n                    <mat-card-content class=\"flex-column\">\n                        <mat-form-field>\n                            <mat-label>Company Name</mat-label>\n                            <input type=\"text\" name=\"firstName\" [(ngModel)]=\"client.name\" matInput [disabled]=\"!editMode\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-label>Street Address</mat-label>\n                            <input type=\"text\" matInput [value]=\"client.street\" [disabled]=\"!editMode\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-label>City</mat-label>\n                            <input type=\"text\" matInput [value]=\"client.city\" [disabled]=\"!editMode\" />\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-label>State</mat-label>\n                            <mat-select placeholder=\"State\" [disabled]=\"!editMode\" (change)=\"onStateChange($event)\"\n                                [(value)]=\"client.state\">\n                                <mat-option *ngFor=\"let state of states\" [value]=\"state\">\n                                    {{state}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </mat-card-content>\n                    <mat-card-actions class=\"d-flex justify-content-between mb-0\">\n                        <button mat-button type=\"button\" *ngIf=\"editMode\" (click)=\"cancel(f)\">Cancel</button>\n                        <button mat-raised-button type=\"submit\" color=\"primary\" *ngIf=\"editMode\">Save</button>\n                    </mat-card-actions>\n                </form>\n            </mat-card>\n            <!-- <mat-card>\n            <mat-card-header class=\"justify-content-between\">\n                <mat-card-title>\n                <h4>Settings</h4>\n                </mat-card-title>\n                <mat-slide-toggle\n                [ngClass]=\"{'float-right': true, 'text-muted': !editOptions, 'text-light': editOptions}\"\n                [checked]=\"editOptions\"\n                (change)=\"changeOptionsMode()\"\n                color=\"primary\"\n                ></mat-slide-toggle>\n            </mat-card-header>\n            <mat-card-content>\n                <mat-checkbox\n                [(ngModel)]=\"client.options.hasOnboarding\"\n                matTooltip=\"Enables the onboarding feature on the user's profile.\"\n                [matTooltipPosition]=\"tooltipPosition\"\n                [disabled]=\"!editOptions\"\n                >Onboarding</mat-checkbox>\n            </mat-card-content>\n            <mat-card-actions class=\"d-flex justify-content-end mx-1 mb-0\">\n                <button\n                mat-raised-button\n                type=\"button\"\n                color=\"primary\"\n                *ngIf=\"editOptions\"\n                (click)=\"saveOptions()\"\n                >Save</button>\n            </mat-card-actions>\n            </mat-card> -->\n            <div class=\"row\">\n                <div class=\"col-md-7\">\n                    <mat-card class=\"border-top-primary\">\n                        <mat-card-header>\n                            <mat-card-title>\n                                <h4>Sale Status Configuration</h4>\n                            </mat-card-title>\n                            <mat-card-subtitle>\n                                <p>\n                                    The following is your organization's sale statuses. These should be updated to be used on\n                                    your invoices based on the campaigns\n                                    you work with.\n                                </p>\n                                <div>\n                                    <button type=\"button\" mat-raised-button (click)=\"showAddSaleStatusDialog()\" color=\"primary\"\n                                        class=\"ml-4 mr-2\">\n                                        <mat-icon>add</mat-icon> Add\n                                    </button>\n                                    <mat-checkbox [(ngModel)]=\"showAllStatuses\" (change)=\"filterStatuses()\"\n                                        [disabled]=\"!hasInactiveStatuses\" class=\"mx-2 mt-1\">Show All</mat-checkbox>\n                                </div>\n                            </mat-card-subtitle>\n                        </mat-card-header>\n            \n                        <mat-card-content>\n                            <mat-table [dataSource]=\"saleStatuses$\">\n                                <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: displayColumns\"></mat-row>\n            \n                                <ng-container matColumnDef=\"name\">\n                                    <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{item.name}}\n                                    </mat-cell>\n                                </ng-container>\n            \n                                <ng-container matColumnDef=\"isActive\">\n                                    <mat-header-cell *matHeaderCellDef>Active</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        <mat-checkbox [(ngModel)]=\"item.isActive\" (change)=\"updateActiveStatus(item)\">Active\n                                        </mat-checkbox>\n                                    </mat-cell>\n                                </ng-container>\n            \n                            </mat-table>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n                <div class=\"col-md-5\">\n                    <mat-card class=\"border-top-primary\">\n                        <mat-card-header>\n                            <mat-card-title>\n                                <h4>Mobile App Settings</h4>\n                            </mat-card-title>\n                            <mat-card-subtitle>\n                                <p>\n                                    Settings that control mobile app users' experience and permissions.\n                                </p>\n                            </mat-card-subtitle>\n                        </mat-card-header>\n                        <mat-card-content>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-md-12\">\n                                    <mat-checkbox [formControl]=\"useExistingContacts\"\n                                        (change)=\"changeUseExistingContacts($event);\">\n                                        Do not solicit Existing Contacts\n                                    </mat-checkbox>\n                                    <p>\n                                        By enabling this feature, users of the companion mobile app will\n                                        be detered from contacting existing or past customers of your products and services.\n                                    </p>\n                                </div>\n                            </div>\n                        </mat-card-content>\n                    </mat-card>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { User, IClient, IClientOption, ICampaign, SaleStatus } from '../models';\nimport { MessageService } from '../message.service';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user-features/user.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { SessionService } from '../session.service';\n\ninterface DataStore {\n  client: IClient,\n  options: IClientOption,\n  campaigns: ICampaign[]\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClientService {\n  private url: string;\n  client: Observable<IClient>;\n  private client$: BehaviorSubject<IClient>;\n  options: Observable<IClientOption>;\n  private options$: BehaviorSubject<IClientOption>;\n  campaigns: Observable<ICampaign[]>;\n  private campaigns$: BehaviorSubject<ICampaign[]>;\n\n  private user: User;\n\n  dataStore: DataStore = {\n    client: <IClient>{},\n    options: <IClientOption>{},\n    campaigns: <ICampaign[]>[]\n  };\n\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private auth: AuthService,\n    private userService: UserService,\n    private msg: MessageService,\n    private session:SessionService\n  ) {\n    this.url = this.auth.apiUrl;\n    this.client$ = new BehaviorSubject<IClient>(null);\n    this.options$ = new BehaviorSubject<IClientOption>(null);\n    this.campaigns$ = new BehaviorSubject<ICampaign[]>(null);\n    this.client = this.client$.asObservable();\n    this.options = this.options$.asObservable();\n    this.campaigns = this.campaigns$.asObservable();\n\n    this.userService.user.subscribe((next: User) => {\n      if(next == null) return;\n      this.user = next;\n\n      // store client\n      this.dataStore.client = next.sessionUser.client;\n      this.client$.next(this.dataStore.client);\n\n      // store client options\n      this.dataStore.options = next.sessionUser.client.options;\n      this.options$.next(this.dataStore.options);\n\n      // this.loadCampaigns();\n    });\n  }\n\n  updateClient(client: IClient): void {\n    this.http.post(this.url + 'api/clients/' + client.clientId, client)\n      .subscribe((data: IClient) => {\n        this.dataStore.client = data;\n        this.client$.next(Object.assign({}, this.dataStore.client));\n      },\n      err => console.dir(err)\n    );\n  }\n\n  loadClientOptions(): void {\n    this.http.get(this.url + 'api/clients/' + this.user.sessionUser.sessionClient)\n      .subscribe((options: IClientOption) => {\n        this.dataStore.options = options;\n        this.options$.next(this.dataStore.options);\n      },\n      err => console.dir(err)\n    );\n  }\n\n  updateClientOptions(options: IClientOption): void {\n    this.http.post(this.url + 'api/clients/' + options.clientId + '/client-options', options)\n      .subscribe((next: IClientOption) => {\n        this.dataStore.options = next;\n        this.dataStore.client.options = this.dataStore.options;\n        this.options$.next(this.dataStore.options);\n        this.client$.next(this.dataStore.client);\n        this.user.sessionUser.client = this.dataStore.client;\n        this.userService.cacheUser(this.user);\n      },\n      err => console.dir(err)\n    );\n  }\n\n  loadCampaigns(): void {\n    this.http.get(this.url + 'api/clients/' + this.user.sessionUser.sessionClient + '/campaigns')\n      .subscribe((next: ICampaign[]) => {\n        this.dataStore.campaigns = next;\n        this.campaigns$.next(this.dataStore.campaigns);\n      });\n  }\n\n  getSaleStatuses(clientId:number):Observable<SaleStatus[]> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses`;\n    return this.http.get<SaleStatus[]>(url);\n  }\n\n  updateSaleStatus(clientId:number, dto:SaleStatus):Observable<SaleStatus> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses/${dto.saleStatusId}`;\n    return this.http.post<SaleStatus>(url, dto);\n  }\n\n  setDefaultStatuses(clientId:number, dtoList:SaleStatus[]):Observable<SaleStatus[]> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses/all`;\n    return this.http.post<SaleStatus[]>(url, dtoList);\n  }\n\n  createSaleStatus(clientId:number, dto:SaleStatus):Observable<SaleStatus> {\n    const url = `${this.url}api/clients/${clientId}/sale-statuses`;\n    return this.http.post<SaleStatus>(url, dto);\n  }\n\n  getClientOptions():Observable<IClientOption> {\n    const url = `${this.url}api/clients/0/client-options`;\n    return this.http.get<IClientOption>(url);\n  }\n\n  updateUseExistingContacts(dto:IClientOption):Observable<IClientOption> {\n    const url = `${this.url}api/clients/${dto.clientId}/client-options/use-existing-contacts`;\n    return this.http.post<IClientOption>(url, dto);\n  }\n\n}\n","import { Component, Inject, OnInit } from \"@angular/core\";\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { ClientService } from \"@app/client-information/client.service\";\nimport { SaleStatus } from \"@app/models\";\n\ninterface DialogData {\n  existing?:SaleStatus\n}\n\n@Component({\n  selector: 'add-sale-status-dialog',\n  templateUrl: './add-sale-status.component.html',\n  styleUrls: ['./add-sale-status.component.scss']\n})\nexport class AddSaleStatusDialog implements OnInit {\n\n  form:FormGroup;\n\n  constructor(\n    public ref:MatDialogRef<AddSaleStatusDialog>,\n    @Inject(MAT_DIALOG_DATA) public data:DialogData,\n    private fb:FormBuilder,\n    private clientService:ClientService\n  ) {}\n\n  ngOnInit() {\n    this.createForm();\n  }\n\n  onNoClick():void {\n    this.ref.close();\n  }\n\n  private createForm():void {\n    this.form = this.fb.group({\n      name: this.fb.control('', [Validators.required]),\n      isActive: this.fb.control(true)\n    });\n  }\n\n  private resetForm():void {\n    this.form.patchValue({\n      name: null,\n      isActive: true\n    });\n  }\n\n}\n","<div class=\"modal-header\">\n    <h3 class=\"modal-title\">Add Sale Status</h3>\n    <span class=\"clickable float-right\">\n        <i class=\"material-icons\" (click)=\"onNoClick()\">clear</i>\n    </span>\n</div>\n<div class=\"modal-body\">\n    <form [formGroup]=\"form\">\n        <mat-form-field class=\"wp-100\" [hideRequiredMarker]=\"true\">\n        <input matInput placeholder=\"Status Description\" formControlName=\"name\" required />\n        </mat-form-field>\n    </form>\n    <div class=\"float-right\">\n        <button mat-button (click)=\"onNoClick()\">Cancel</button>\n        <button mat-raised-button [mat-dialog-close]=\"form.value\" color=\"primary\" [disabled]=\"form.invalid || form.pristine\">Save</button>\n    </div>\n</div>\n\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AuthService } from '../auth.service';\nimport { User, IClient } from '../models/index';\nimport { Observable ,  BehaviorSubject, Subscription } from 'rxjs';\nimport { UserService } from '../user-features/user.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-client-selector',\n  templateUrl: './client-selector.component.html',\n  styleUrls: ['./client-selector.component.css']\n})\nexport class ClientSelectorComponent implements OnInit, OnDestroy {\n  user: User;\n  clientControl: FormControl = new FormControl('', [Validators.required]);\n\n  subscriptions: Subscription[] = [];\n\n  constructor(\n    public dialogRef: MatDialogRef<ClientSelectorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: User,\n    public auth: AuthService,\n    public userService: UserService,\n    private location:Location,\n    private router:Router\n  ) {}\n\n  ngOnInit() {\n    this.subscriptions.push(this.userService.user.subscribe((next: User) => {\n      this.user = next;\n\n      this.clientControl.setValue(this.user.sessionUser.sessionClient, { emitEvent: false });\n    }));\n  }\n\n  ngOnDestroy() {\n      this.subscriptions.forEach((s, i, a) => {\n          s.unsubscribe();\n      });\n  }\n\n  cancel(): void {\n    this.dialogRef.close();\n  }\n\n  onClientChange() {\n    const clientId = this.clientControl.value;\n    if (clientId == null) return;\n\n    this.userService.changeClient(clientId)\n        .subscribe(result => {\n            if (!result) return;\n\n            this.router.navigate(['client-information']);\n            this.cancel();\n        });\n  }\n\n  compareFn: ((f1: any, f2: any) => boolean)|null = this.compareByValue;\n\n  compareByValue(f1: any, f2: any) {\n    return f1 && f2 && f1.clientId === f2.clientId;\n  }\n\n}\n","\n<div>\n  <h2 mat-dialog-title>Current Client</h2>\n  <mat-dialog-content>\n    <mat-form-field class=\"w-100\">\n      <mat-select [formControl]=\"clientControl\">\n        <mat-option *ngFor=\"let c of data.clients\" [value]=\"c.clientId\">{{c.name}}</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"clientControl.hasError('required')\">Please choose a client.</mat-error>\n    </mat-form-field>\n  </mat-dialog-content>\n  <mat-dialog-actions class=\"d-flex justify-content-between\">\n    <button mat-button (click)=\"cancel()\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"onClientChange()\">Change Client</button>\n  </mat-dialog-actions>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport { Contact, ContactRequest } from '@app/models/contact.model';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport { AuthService } from '@app/auth.service';\nimport { catchError, tap, map } from 'rxjs/operators';\nimport { LaravelErrorResponse } from '@app/models/validator-error.model';\nimport { MessageService } from '@app/message.service';\nimport * as _ from 'lodash';\nimport { DncContact, GeocodingRequest, GeocodingResponse, Graphql, DncContactRequest } from '@app/models';\nimport { environment } from '@env/environment';\nimport { Observable as ApolloObservable } from 'apollo-link';\nimport { QueryResult } from '@app/buoy/operations/query/query-result';\nimport { QueryError } from '@app/buoy/operations/query/query-error';\nimport { Buoy } from '@app/buoy/buoy';\nimport gql from 'graphql-tag';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContactService {\n    private api:string;\n    _contacts:Contact[];\n\n    private restrictedContacts:DncContact[];\n    _restrictedContacts$ = new BehaviorSubject<DncContact[]>(null);\n\n    private gUrl = environment.geocoding;\n    private gKey = environment.geocodingApi;\n    graphql = environment.graphql;\n\n    constructor(\n        private http: HttpClient,\n        private auth:AuthService,\n        private msg:MessageService,\n        private buoy: Buoy\n    ) {\n        this.api = `${this.auth.apiUrl}api`;\n    }\n\n    getGeocoding(address: GeocodingRequest): Observable<GeocodingResponse> {\n        let query = '';\n        for (const p in address) {\n            if (address[p]) {\n                if (query.length) query += '+';\n                query += `${address[p]}`;\n            }\n        }\n        query += `&key=${this.gKey}`;\n        return this.http.get<GeocodingResponse>(this.gUrl + query);\n    }\n\n    /**\n     * Get collection of contact entities by the current client.\n     * \n     * @param clientId \n     */\n    getContactsByClient(clientId:number):Observable<Contact[]> {\n        return this.http.get<Contact[]>(`${this.api}/clients/${clientId}/contacts`)\n            .pipe(\n                tap(next => this._contacts = next),\n                catchError(this.handleError)\n            );\n    }\n\n    /**\n     * Save a contact entity.\n     * \n     * @param clientId\n     * @param contact \n     */\n    saveContact(clientId:number, contact:Contact):Observable<Contact> {\n        const url = contact.contactId != null && contact.contactId > 0\n            ? `${this.api}/clients/${clientId}/contacts/${contact.contactId}`\n            : `${this.api}/clients/${clientId}/contacts`;\n        return this.http.post<Contact>(url, contact)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    setRestrictedContacts(contacts:DncContact[]) {\n        this.restrictedContacts = contacts;\n        this._restrictedContacts$.next(contacts);\n    }\n\n    getAllRestrictedContacts():DncContact[] {\n        return this.restrictedContacts;\n    }\n\n    saveContactList(dtos: ContactRequest[]): ApolloObservable<QueryResult<Contact[]> | QueryError> {\n        return this.buoy.mutate(\n            gql`\n                mutation {\n                    newContactList(input: $dtos) {\n                        contactId clientId contactType businessName firstName lastName \n                        middleName prefix suffix ssn dob street street2 city state zip \n                        phoneCountry phone faxCountry fax email\n                    }\n                }\n            `,\n            {\n                dtos: dtos\n            }\n        );\n    }\n\n    // saveContactList(dtos: ContactRequest[]): Observable<Contact[]> {\n    //     const s = ['mutation { newContactList(input: [{'];\n    //     dtos.forEach((d, i, a) => {\n    //         for (const p in d) {\n    //             if (p == 'client_id' || p == 'contact_type' || p == 'ssn' || p == 'phone' || p == 'fax'\n    //                 || p == 'phone_country' || p == 'fax_country') {\n    //                     s.push(`${p}: ${d[p]}`);\n    //                 } else {\n    //                     s.push(`${p}: \"${d[p]}\"`);\n    //                 }\n\n    //             if (i < dtos.length - 1) {\n    //                 s.push(`}, {`);\n    //             } else {\n    //                 s.push(`}]) {`);\n    //                 s.push(`contactId clientId contactType businessName firstName lastName middleName prefix `);\n    //                 s.push(`suffix ssn dob street street2 city state zip phoneCountry phone faxCountry fax email `);\n    //             }\n    //         }\n    //     });\n    //     return this.http.post<Graphql<Contact[]>>(this.graphql, {\n    //             query: s.join(' ')\n    //         })\n    //         .pipe(\n    //             map(r => r.data.newContactList)\n    //         );\n    // }\n\n    saveDncContactList(dtos: DncContactRequest[]): Observable<DncContact[]> {\n        const sb = [`mutation { newDncContactList(input: [{`];\n        dtos.forEach((d, i, a) => {\n            for (const p in d) {\n                if (p == 'client_id' || p == 'lat' || p == 'long') {\n                    sb.push(`${p}: ${d[p]}`);\n                } else if (p == 'geocode') {\n                    sb.push(`${p}: ${JSON.stringify(d[p])}`);\n                } else {\n                    sb.push(`${p}: \"${d[p]}\"`);\n                }\n            }\n\n            if (i < (dtos.length - 1)) {\n                sb.push(`}, {`);\n            } else {\n                sb.push(`}]) {`);\n                sb.push(`dncContactId clientId firstName lastName description address `);\n                sb.push(`addressCont city state zip note lat long geocode }}`);\n            }\n        });\n        return this.http.post<Graphql<DncContact[]>>(this.graphql, {\n                query: sb.join(' ')\n            })\n            .pipe(\n                map(result => result.data.newDncContactList)\n            );\n    }\n\n    private handleError<T>(resp:LaravelErrorResponse, caught:Observable<T>):Observable<T> {\n        const keys = Object.keys(resp.error.errors);\n        let errorMsg = 'Errors: ';\n\n        keys.forEach(key => {\n            const propErrors:string[] = resp.error.errors[key];\n            if (!_.isArray(propErrors)) return; /** if this isn't an array, it means we don't have any errors and need to bail */\n            propErrors.forEach((pe:string, i:number) => {\n                errorMsg += `(${i + 1}) ${pe}`;\n            });\n        });\n        this.msg.addMessage(errorMsg);\n        return caught;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { IAgent, User } from '@app/models';\n\nimport { environment } from 'environments/environment';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { RoleType } from '@app/models/role.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AgentsService {\n\n  private api = environment.apiUrl + 'api/';\n\n  constructor(private http:HttpClient) { }\n\n  /**\n   * TODO: Refactor to return Observable<IAgent[]>\n   * Get all agents by active status.\n   *\n   * @param activeOnly\n   */\n  getAgents(activeOnly:boolean = true):Promise<IAgent[]> {\n    return this.http.get(this.api + 'agents/statuses/' + activeOnly)\n      .toPromise()\n      .then((agents:IAgent[]) => {\n        return agents;\n      })\n      .catch(e => {\n        console.dir(e);\n        return null;\n      });\n  }\n\n  /**\n   * Return a list of agents by the client id.\n   * \n   * @param clientId \n   */\n  getAgentsByClient(clientId:number):Observable<User[]> {\n    const url = `${this.api}clients/${clientId}/agents`;\n    return this.http.get<User[]>(url)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * updates an agent entity\n   *\n   * @param agent\n   */\n  updateAgent(agent:IAgent):Promise<IAgent> {\n    return this.http.post(this.api + 'agents/' + agent.agentId, agent)\n      .toPromise()\n      .then((agent:IAgent) => {\n        return agent;\n      });\n  }\n\n  /**\n   * Return an array of sales pairings entities by agent id.\n   *\n   * @param agentId\n   * @param clientId\n   */\n  getAgentSalesPairings(agentId:number, clientId:number):Promise<ISalesPairing[]> {\n    return this.http.get(this.api + 'clients/' + clientId + '/agents/' + agentId + '/sales-pairings')\n      .toPromise()\n      .then((salesPairings:ISalesPairing[]) => {\n        return salesPairings;\n      });\n  }\n\n  /**\n   * Save a list of agent sales pairings.\n   *\n   * @param pairings\n   * @param agentId\n   */\n  saveAgentSalesPairings(pairings:ISalesPairing[], agentId:number):Promise<ISalesPairing[]> {\n    return this.http.post(this.api + 'agents/' + agentId + '/sales-pairings', { pairings: pairings })\n      .toPromise()\n      .then((pairings:ISalesPairing[]) => {\n        return pairings;\n      });\n  }\n\n  deleteAgentSalesPairings(pairingId:number):Promise<void> {\n    return this.http.delete(this.api + 'sales-pairings/' + pairingId)\n      .toPromise()\n      .then(() => { return; });\n  }\n\n  getRoleTypes(includeInactive:boolean = false):Observable<RoleType[]> {\n      return this.http.get<RoleType[]>(`${this.api}role-types?inactive=${includeInactive}`);\n  }\n\n  private handleError(error:HttpErrorResponse) {\n    if(error.error instanceof ErrorEvent) {\n      // client side network error\n      console.log('Error occurred: ', error.error.message || error.message);\n    } else {\n      // backend returned server error\n      console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `)\n    }\n    return throwError('There was a network error. Please try again.');\n  }\n}\n","import {Component, Inject, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatInput } from '@angular/material/input';\nimport {User, IUserDetail, IAgent} from '@app/models';\nimport {FormGroup, FormBuilder, Validators, FormControl, AbstractControl } from '@angular/forms';\nimport {IState, States} from '@app/shared/models/state.model';\nimport {MessageService} from '@app/message.service';\nimport {AgentsService} from '@app/core/agents/agents.service';\nimport { isValidNumber, NationalNumber, parseNumber } from 'libphonenumber-js';\n\nimport * as _ from 'lodash';\nimport {UserService} from '@app/user-features/user.service';\nimport {SessionService} from '@app/session.service';\nimport { catchError, startWith } from 'rxjs/operators';\nimport { RoleType } from '@app/models/role.model';\nimport { AgentService } from '@app/agent/agent.service';\nimport { Observable, of } from 'rxjs';\nimport { LaravelErrorResponse } from '@app/models/validator-error.model';\n\ninterface IKeyValue {\n    key: string | number;\n    value: any;\n}\n\ninterface DataDialog {\n    user: User;\n}\n\n@Component({\n    selector: 'add-agent-dialog',\n    templateUrl: './add-agent.component.html',\n    styleUrls: ['./add-agent.component.scss']\n})\nexport class AddAgentDialogComponent implements OnInit {\n    user: User;\n    states: IState[];\n    userEntity: User;\n    detailEntity: IUserDetail;\n    agentEntity: IAgent;\n    userForm: FormGroup;\n    detailForm: FormGroup;\n    agentForm: FormGroup;\n    roleType:FormControl;\n\n    verifyAccount: number = null;\n    managers: IAgent[];\n    roleTypes:RoleType[];\n    usernameTaken:boolean = false;\n    attemptedUsername:string;\n    suggestedUsername:string;\n\n    @ViewChildren(MatInput) inputs:QueryList<MatInput>;\n\n    constructor(\n        public ref: MatDialogRef<AddAgentDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DataDialog,\n        private fb: FormBuilder,\n        private msg: MessageService,\n        private service:AgentService,\n        private agentsService: AgentsService,\n        private userService: UserService,\n        private session: SessionService\n    ) {\n        this.user = this.data.user;\n        this.states = States.$get();\n    }\n\n    ngOnInit() {\n        this.agentsService.getRoleTypes(true)\n            .subscribe(roleTypes => this.roleTypes = roleTypes);\n\n        this.createUserForm();\n        this.createDetailForm();\n        this.createAgentForm();\n        this.createRoleTypeForm();\n\n        // DO SOME MORE STUFF\n        this.agentsService\n            .getAgents()\n            .then(agents => {\n                this.managers = _.filter(agents, (a: IAgent) => {\n                    return a.isManager;\n                });\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    saveNewUserAgentEntity(): void {\n        if (this.userForm.invalid || this.detailForm.invalid || this.agentForm.invalid) return;\n\n        this.session.showLoader();\n\n        this.userEntity = {\n            firstName: this.userForm.value.firstName,\n            lastName: this.userForm.value.lastName,\n            username: this.userForm.value.username,\n            email: this.userForm.value.email,\n            password: this.userForm.value.password,\n            active: true\n        };\n\n        this.detailEntity = {\n            street: this.detailForm.value.street,\n            street2: this.detailForm.value.street2,\n            city: this.detailForm.value.city,\n            state: this.detailForm.value.state,\n            zip: this.detailForm.value.zip,\n            ssn: this.detailForm.value.ssn,\n            phone: this.detailForm.value.phone,\n            birthDate: this.detailForm.value.birthDate,\n            bankRouting: this.detailForm.value.bankRouting,\n            bankAccount: this.detailForm.value.bankAccount\n        };\n\n        this.agentEntity = {\n            firstName: this.userForm.value.firstName,\n            lastName: this.userForm.value.lastName,\n            managerId: this.agentForm.value.managerId,\n            isManager: this.agentForm.value.isManager\n        };\n\n        const role = this.roleType.value;\n\n        this.userService\n            .saveNewUserAgentEntity(this.userEntity, this.agentEntity, this.detailEntity, this.user.sessionUser.sessionClient, role)\n            .pipe(\n                catchError((resp:LaravelErrorResponse, caught:Observable<boolean>) => {\n                    const keys = Object.keys(resp.error.errors);\n                    let errorDisplaymsg = 'Errors: ';\n\n                    keys.forEach(key => {\n                        const propErrors:string[] = resp.error.errors[key];\n                        if (!_.isArray(propErrors)) return;\n                        propErrors.forEach((pe:string, i:number) => {\n                            errorDisplaymsg += `(${i + 1}) ${pe}`;\n                        });\n\n                        if (key == 'email') \n                            this.userForm.controls.email.setErrors({ notUnique: true });\n                    });\n\n                    this.msg.addMessage(errorDisplaymsg, 'dismiss');\n\n                    return of(false);\n                })\n            )\n            .subscribe(result => {\n                if (!result) return;\n                this.msg.addMessage('User added!', 'dismiss', 6000);\n                this.ref.close(result);\n            });\n    }\n\n    close(): void {\n        this.ref.close(this.data);\n    }\n\n    copyPasswordText(copy: string): void {\n        let selBox = document.createElement('textarea');\n        selBox.style.position = 'fixed';\n        selBox.style.left = '0';\n        selBox.style.top = '0';\n        selBox.style.opacity = '0';\n        selBox.value = copy;\n        document.body.appendChild(selBox);\n        selBox.focus();\n        selBox.select();\n        document.execCommand('copy');\n        document.body.removeChild(selBox);\n\n        this.msg.addMessage('Password copied to your clipboard!', 'dismiss', 6000);\n    }\n\n    private createUserForm(): void {\n        let pw = this.makeUpperCaseRandomLetter(\n            Math.random()\n                .toString(36)\n                .slice(-8)\n        );\n\n        this.userForm = this.fb.group({\n            firstName: this.fb.control('', [Validators.required]),\n            lastName: this.fb.control('', [Validators.required]),\n            username: this.fb.control('', [Validators.required, Validators.minLength(5), Validators.maxLength(15)]),\n            email: this.fb.control('', [Validators.required, Validators.email]),\n            password: this.fb.control(pw, [Validators.required])\n        });\n    }\n\n    private makeUpperCaseRandomLetter(pw: string): string {\n        let kv = this.getRandomCharKeyValue(pw);\n        if (!/^[a-zA-Z]+$/.test(kv.value)) this.makeUpperCaseRandomLetter(pw);\n        kv.value = kv.value.toUpperCase();\n        return this.replaceAt(pw, +kv.key, kv.value);\n    }\n\n    private getRandomCharKeyValue(pw: string): IKeyValue {\n        let min = 0;\n        let max = pw.length - 1;\n        let key = Math.floor(Math.random() * (max - min + 1)) + min;\n        return {key: key, value: pw.charAt(key)};\n    }\n\n    private replaceAt(original: string, index: number, replacement: string): string {\n        return original.substr(0, index) + replacement + original.substr(index + replacement.length);\n    }\n\n    private createDetailForm(): void {\n        this.detailForm = this.fb.group({\n            street: this.fb.control('', [Validators.required]),\n            street2: this.fb.control('', []),\n            city: this.fb.control('', [Validators.required]),\n            state: this.fb.control('', [Validators.required]),\n            zip: this.fb.control('', [Validators.required, Validators.pattern(/^\\d{5}?$/)]),\n            ssn: this.fb.control('', [Validators.pattern(/^\\d{3}-?\\d{2}-?\\d{4}$/)]),\n            phone: this.fb.control('', {\n                validators: [Validators.required, (control:AbstractControl) => {\n                    const phNo = parseNumber(control.value, 'US');\n                    if (!isValidNumber(phNo)) {\n                        return { phone: true };\n                    }\n                    return null;\n                }],\n                updateOn: 'blur'\n            }),\n            birthDate: this.fb.control('', [Validators.required]),\n            bankRouting: this.fb.control('', []),\n            verifyRouting: this.fb.control('', []),\n            bankAccount: this.fb.control('', []),\n            verifyAccount: this.fb.control('', [])\n        });\n    }\n\n    validateVerifyAccount(): void {\n        if (this.detailForm.value.bankAccount > 0 && this.detailForm.controls.bankAccount.valid)\n            this.detailForm.controls.verifyAccount.setValidators(Validators.required);\n    }\n\n    validateVerifyRouting(): void {\n        if (this.detailForm.value.bankRouting > 0 && this.detailForm.controls.bankRouting.valid)\n            this.detailForm.controls.verifyRouting.setValidators(Validators.required);\n    }\n\n    compareAccounts(): void {\n        if (this.detailForm.value.bankAccount === this.detailForm.value.verifyAccount) return;\n        this.detailForm.controls.verifyAccount.setErrors({notEqual: true});\n    }\n\n    compareRouting(): void {\n        if (this.detailForm.value.bankRouting === this.detailForm.value.verifyRouting) return;\n        this.detailForm.controls.verifyRouting.setErrors({notEqual: true});\n    }\n\n    phoneNoKeyPress(event: any) {\n        if (event.charCode !== 0) {\n            const pattern = /[0-9\\+\\-\\ ]/;\n            const inputChar = String.fromCharCode(event.charCode);\n            if (!pattern.test(inputChar)) {\n                // invalid character, prevent input\n                event.preventDefault();\n            }\n        }\n    }\n\n    checkUsernameAvailability():void {\n        const usernameInput = _.find(this.inputs.toArray(), (input:MatInput) => {\n            return input.ngControl.name === 'username';\n        }) as MatInput;\n\n        const username:string = usernameInput.value;\n        this.attemptedUsername = username;\n        if (username.length < 1) return;\n\n        if (this.userForm.controls.username.errors != null && this.userForm.controls.username.errors.unavailable) {\n            this.userForm.patchValue({ username: username });\n        } else {\n            this.service.checkUsernameAvailability(username)\n                .subscribe(available => {\n                    this.usernameTaken = !available;\n\n                    if (!available) {\n                        this.userForm.get('username').setErrors({ unavailable: true });\n\n                        const lastSection = this.userForm.value.firstName.substr(0, 2).toLowerCase();\n                        this.suggestedUsername = this.userForm.value.lastName.substr(0, 5).toLowerCase() + lastSection;\n\n                        usernameInput.focus();\n                        usernameInput.value = this.suggestedUsername;\n                    }\n                });\n        }\n        \n    }\n\n    private createAgentForm(): void {\n        this.userEntity =\n            this.userEntity == null\n                ? <User>{\n                      firstName: null,\n                      lastName: null\n                  }\n                : this.userEntity;\n\n        this.agentForm = this.fb.group({\n            // firstName: this.fb.control(this.userEntity.firstName, [Validators.required]),\n            // lastName: this.fb.control(this.userEntity.lastName, [Validators.required]),\n            managerId: this.fb.control(''),\n            isManager: this.fb.control('')\n        });\n    }\n\n    private createRoleTypeForm():void {\n        this.roleType = this.fb.control('', [Validators.required]);\n    }\n}\n","\n<mat-horizontal-stepper  #addAgent>\n  <mat-step [stepControl]=\"userForm\">\n    <form [formGroup]=\"userForm\">\n      <ng-template matStepLabel>User Login Info</ng-template>\n\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Username\" formControlName=\"username\" required (blur)=\"checkUsernameAvailability()\" />\n        <mat-error *ngIf=\"userForm.get('username').hasError('unavailable')\">\n            Sorry, that username is unavailable. \n            <ng-container *ngIf=\"suggestedUsername.length && suggestedUsername != attemptedUsername\">\n                What about <strong>{{suggestedUsername}}</strong>?\n            </ng-container> \n        </mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" required #emailInput />\n        <mat-error *ngIf=\"userForm.get('email').hasError('notUnique')\">\n            Users cannot share email addresses. This one has already been used. Please try again. \n        </mat-error>\n      </mat-form-field>\n      <mat-form-field class=\"clickable\" (click)=\"copyPasswordText(userForm.value.password)\">\n        <input matInput\n          class=\"clickable\"\n          type=\"text\"\n          placeholder=\"Random Password\"\n          formControlName=\"password\"\n          readonly\n        />\n        <mat-icon matSuffix>filter_none</mat-icon>\n        <mat-hint align=\"start\">\n          Click to Copy\n        </mat-hint>\n      </mat-form-field>\n      <div class=\"d-flex justify-content-end pt-4\">\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"detailForm\">\n    <form [formGroup]=\"detailForm\">\n      <ng-template matStepLabel>Detail Info</ng-template>\n\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Street\" formControlName=\"street\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Street 2\" formControlName=\"street2\" />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"City\" formControlName=\"city\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-select placeholder=\"State\" formControlName=\"state\" required>\n          <mat-option *ngFor=\"let s of states\" [value]=\"s.abbreviation\">{{s.name}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Postal Code\" formControlName=\"zip\" required />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput\n          [matDatepicker]=\"birthDate\"\n          placeholder=\"Date of Birth\"\n          formControlName=\"birthDate\"\n          required\n        />\n        <mat-datepicker-toggle matSuffix [for]=\"birthDate\"></mat-datepicker-toggle>\n        <mat-datepicker #birthDate></mat-datepicker>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput\n          type=\"text\"\n          placeholder=\"Phone No\"\n          (keypress)=\"phoneNoKeyPress($event)\"\n          formControlName=\"phone\"\n          [value]=\"detailForm.get('phone').value | phone\"\n          maxlength=\"10\"\n          required\n        />\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput type=\"text\" placeholder=\"Social Security Number\" formControlName=\"ssn\" />\n        <mat-hint align=\"start\" class=\"text-muted font-italic\">Optional</mat-hint>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput\n          type=\"text\"\n          placeholder=\"Bank Routing\"\n          formControlName=\"bankRouting\"\n          (keyup)=\"validateVerifyRouting()\"\n        />\n        <mat-hint align=\"start\" class=\"text-muted font-italic\">Optional</mat-hint>\n      </mat-form-field>\n      <mat-form-field [hidden]=\"!(detailForm.value.bankRouting > 0)\">\n        <input matInput\n          type=\"text\"\n          placeholder=\"Verify Routing\"\n          formControlName=\"verifyRouting\"\n          [required]=\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\"\n          (keyup)=\"compareRouting()\"\n        />\n        <mat-error *ngIf=\"detailForm.get('verifyRouting').getError('notEqual')\">\n          Routing numbers must match.\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <input matInput\n          type=\"text\"\n          placeholder=\"Bank Account\"\n          formControlName=\"bankAccount\"\n          [required]=\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\"\n          (keyup)=\"validateVerifyAccount()\"\n        />\n        <mat-hint\n          align=\"start\"\n          class=\"text-muted font-italic\"\n          [hidden]=\"detailForm.value.bankRouting > 0 && detailForm.get('bankRouting').valid\"\n        >Optional</mat-hint>\n      </mat-form-field>\n      <mat-form-field [hidden]=\"!(detailForm.value.bankAccount > 0)\">\n        <input matInput\n          type=\"text\"\n          placeholder=\"Verify Account\"\n          formControlName=\"verifyAccount\"\n          [required]=\"detailForm.value.bankAccount > 0 && detailForm.get('bankAccount').valid\"\n          (keyup)=\"compareAccounts()\"\n        />\n        <mat-error *ngIf=\"detailForm.get('verifyAccount').getError('notEqual')\">\n          Account numbers must match.\n        </mat-error>\n      </mat-form-field>\n      <div class=\"d-flex justify-content-between pt-4\">\n        <button mat-button matStepperPrevious>Previous</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]=\"agentForm\">\n    <form [formGroup]=\"agentForm\">\n      <ng-template matStepLabel>Permissions</ng-template>\n\n      <mat-form-field class=\"pt-3\">\n          <mat-select placeholder=\"User Role\" [formControl]=\"roleType\" required>\n              <mat-option *ngFor=\"let type of roleTypes\" [value]=\"type.id\">\n                  {{type.type | titlecase}}\n              </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"roleType.hasError('required')\">\n              Please select a role for the new user.\n          </mat-error>\n      </mat-form-field>\n\n      <mat-form-field>\n        <mat-select placeholder=\"Manager\" formControlName=\"managerId\">\n          <mat-option *ngFor=\"let m of managers\" [value]=\"m.agentId\">\n            {{m.firstName}} {{m.lastName}}\n          </mat-option>\n        </mat-select>\n        <mat-hint>Who will the agent report to?</mat-hint>\n      </mat-form-field>\n\n      <mat-checkbox\n        formControlName=\"isManager\"\n        matTooltip=\"Is this agent a manager?\"\n      >Enable Manager Access</mat-checkbox>\n\n      <mat-divider></mat-divider>\n\n      <div class=\"text-muted font-sm font-italic mt-4\">\n        Sales ID(s) can be added by saving the new agent and then clicking <span class=\"font-weight-bold\">edit</span> on\n        their agent card after this dialog is closed.\n      </div>\n    </form>\n    <div class=\"d-flex justify-content-between pt-4\">\n      <button mat-button matStepperPrevious>Previous</button>\n      <button mat-button (click)=\"saveNewUserAgentEntity()\">Save</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n","import { NgModule, SkipSelf, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthGuard } from '../auth.guard';\nimport { TokenInterceptor } from '../token.interceptor';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material/material.module';\nimport { SharedModule } from '@app/shared';\nimport { MessagesComponent } from '@app/messages/messages.component';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { AddAgentDialogComponent } from '@app/core/agents/dialogs/add-agent.component';\nimport { AddSaleStatusDialog } from '@app/client-information/dialogs/add-sale-status.component';\nimport { AddSaleDialogComponent } from '@app/daily-sale-tracker/dialogs/add-sale.component';\nimport { DailySaleTrackerComponent } from '@app/daily-sale-tracker/daily-sale-tracker.component';\nimport { DeleteSaleDialog } from '@app/daily-sale-tracker/dialogs/delete-sale.component';\nimport { RouterModule } from '@angular/router';\nimport { DirectivesModule } from '@app/directives/directives.module';\nimport { PipesModule } from '@app/pipes/pipes.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FabFloatBtnModule,\n    RouterModule,\n    DirectivesModule,\n    PipesModule\n  ],\n  declarations: [\n    MessagesComponent,\n    AddAgentDialogComponent,\n    AddSaleStatusDialog,\n    AddSaleDialogComponent,\n    DailySaleTrackerComponent,\n    DeleteSaleDialog\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  entryComponents: [\n    AddAgentDialogComponent,\n    AddSaleStatusDialog,\n    AddSaleDialogComponent,\n    DeleteSaleDialog\n  ]\n})\nexport class CoreModule {\n\n  /**\n   * Make sure CoreModule is imported only by one NgModule - the AppModule\n   */\n  constructor(\n    @Optional() @SkipSelf() parentModule:CoreModule\n  ) {\n    if(parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule.');\n    }\n  }\n}\n","\nexport * from './core.module';\n","import {Component, OnInit} from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormArray, AbstractControl, ValidatorFn } from '@angular/forms';\nimport { User, IAgent, DailySale, ICampaign, Utility, Remark, SaleStatus } from '../../../models';\nimport { SessionService } from '../../../session.service';\nimport { ContactService } from '../../../contact/contact.service';\nimport { AgentService } from '../../../agent/agent.service';\nimport { CampaignService } from '../../../campaigns/campaign.service';\nimport { Observable, Subject, from, of, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { States, IState } from '../../../shared/models/state.model';\nimport { ClientService } from '../../../client-information/client.service';\nimport { DailySaleTrackerService } from '../../../daily-sale-tracker/daily-sale-tracker.service';\nimport { MessageService } from '../../../message.service';\nimport { Router } from '@angular/router';\nimport { Contact } from '../../../models/contact.model';\n\n@Component({\n    selector: 'vs-new-sale',\n    templateUrl: './new-sale.component.html',\n    styleUrls: ['./new-sale.component.scss']\n})\nexport class NewSaleComponent implements OnInit {\n\n    user:User;\n    form:FormGroup = this.createForm();\n    formRemarks:Remark[];\n    formSubmitted = false;\n    showNewContactFields = false;\n    showSetContactUI = false;\n    showNewRemarkField = false;\n    private _contacts:Contact[];\n    contacts:Observable<Contact[]>;\n    private _agents:IAgent[];\n    agents:Observable<IAgent[]>;\n    private _campaigns:ICampaign[];\n    campaigns:Observable<ICampaign[]>;\n    private _saleStatuses:SaleStatus[];\n    saleStatuses:BehaviorSubject<SaleStatus[]> = new BehaviorSubject<SaleStatus[]>([]);\n\n    /** internal use only, keeps track of all available utilities */\n    private _utilities:Utility[];\n    utilities:BehaviorSubject<Utility[]> = new BehaviorSubject<Utility[]>([]);\n\n    states:IState[] = States.$get();\n    returnUrl = '';\n\n    constructor(\n        private fb:FormBuilder, \n        private session:SessionService, \n        private contactService:ContactService, \n        private agentService:AgentService,\n        private campaignService:CampaignService,\n        private clientService:ClientService,\n        private saleService:DailySaleTrackerService,\n        private message:MessageService,\n        private router:Router\n    ) {}\n\n    ngOnInit() {\n        this.returnUrl = this.session.previousUrl;\n        this.session.getUserItem().subscribe(u => {\n            this.user = u;\n\n            this.contactService.getContactsByClient(this.user.sessionUser.sessionClient)\n                .pipe(tap(next => this._contacts = next))\n                .subscribe(contacts => this.contacts = of(contacts));\n\n            this.agentService.getAgentsByClient(this.user.sessionUser.sessionClient)\n                .pipe(tap(next => this._agents = next))\n                .subscribe(agents => this.agents = of(agents));\n\n            this.campaignService.getCampaignsByClient(this.user.sessionUser.sessionClient)\n                .pipe(tap(next => {\n                    this._campaigns = next;\n                    this._utilities = [];\n                    next.forEach(c => this._utilities = this._utilities.concat(c.utilities));\n                }))\n                .subscribe(campaigns => this.campaigns = of(campaigns));\n\n            this.clientService.getSaleStatuses(this.user.sessionUser.sessionClient)\n                .subscribe(statuses => {\n                    this._saleStatuses = statuses.filter(s => s.isActive);\n                    this.saleStatuses.next(this._saleStatuses);\n                });\n\n            this.initializeComponent();\n        });\n    }\n\n    showNewContactForm():void {\n        this.resetContactForm('contact');\n        this.showNewContactFields = !this.showNewContactFields;\n    }\n\n    setNewContact():void {\n        this.setControlsTouched(this.form.get('contact') as FormGroup);\n        if(this.form.get('contact').invalid) return;\n\n        this.showNewContactFields = false;\n        this.showSetContactUI = true;\n    }\n\n    private setControlsTouched(group:FormGroup) {\n        for (const c in group.controls) {\n            group.controls[c].markAsTouched();\n            if (this.hasProperty(group.controls[c], 'controls')) {\n                this.setControlsTouched(group.controls[c]['controls']);\n            }\n        }\n    }\n\n    private hasProperty(obj, prop):boolean {\n        const proto = obj.__proto__ || obj.constructor.prototype;\n        return (prop in obj) &&\n            (!(prop in proto) || proto[prop] !== obj[prop]);\n    }\n\n    unsetNewContact(formGroupName:string):void {\n        this.resetContactForm(formGroupName);\n        this.showNewContactFields = false;\n        this.showSetContactUI = false;\n    }\n\n    private resetContactForm(formGroupName:string):void {\n        (<FormGroup>this.form.controls[formGroupName]).patchValue({\n            firstName: '',\n            lastName: '',\n            prefix: '',\n            ssn: '',\n            dob: '',\n            street: '',\n            street2: '',\n            city: '',\n            state: '',\n            zip: '',\n            phone: '',\n            email: '',\n            fax: ''\n        });\n        this.form.get(formGroupName).reset();\n    }\n\n    showNewRemarkForm() {\n        if(!this.form.value.remarks.length)\n            (<FormArray>this.form.controls.remarks).patchValue([]);\n        (<FormArray>this.form.controls.remarks).push(this.fb.group({\n            remarkId: this.fb.control(''),\n            dailySaleId: this.fb.control(''),\n            description: this.fb.control('', [Validators.required])\n        }));\n\n        this.formRemarks = [{} as Remark];\n        this.showNewRemarkField = true;\n    }\n\n    undoRemark():void {\n        let i = 0;\n\n        while((<FormArray>this.form.controls.remarks).length) {\n            (<FormArray>this.form.controls.remarks).removeAt(i);\n            i++;\n        }\n        \n        this.form.controls.remarks.reset();\n        this.showNewRemarkField = false;\n    }\n\n    displayFn(contact:Contact):string {\n        return typeof contact === 'object' && contact != null\n            ? `${contact.firstName} ${contact.lastName}`\n            : '';\n    }\n\n    private initializeComponent() {\n\n        /** watch for form changes to campaign id and update utility dropdown options accordingly */\n        this.form.controls.campaignId.valueChanges.subscribe(val => {\n            const filteredUtils = this._utilities.filter(u => u.campaignId == val);\n            if(!filteredUtils.length) {\n                this.form.patchValue({ utilityId: null });\n                this.form.controls.utilityId.reset();\n            }\n                \n            this.utilities.next(filteredUtils);\n        });\n\n    }\n\n    save():void {\n\n        /**\n         * Check to see if the user selected and existing contact or if they used the \"new contact\"\n         * form to create a new contact and then revalidate the sale form.\n         */\n        if(this.form.get('existingContact').dirty && this.form.get('existingContact').valid) {\n            delete this.form.controls['contact'];\n        } else if(this.form.get('contact').dirty && this.form.get('contact').valid) {\n            delete this.form.controls['existingContact'];\n        }\n\n        this.setControlsTouched(this.form);\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n\n        const model = this.prepareModel();\n\n        /** WRITE THE SERVICE CALL TO DAILY SALE CONTROLLER */\n        this.saleService.saveSaleWithContactInfo(this.user.sessionUser.sessionClient, model.campaignId, model)\n            .subscribe(sale => {\n                this.message.addMessage('Sale saved!', 'dismiss', 5000);\n                setTimeout(() => this.router.navigate(['/daily-tracker']), 2500);\n            }, err => {\n                console.error(err);\n            });\n    }\n\n    clearForm():void {\n        this.form.reset();\n        this.router.navigate([this.returnUrl]);\n    }\n\n    validateContactInput(event:any) {\n        const input = event.target.value;\n        let exists = false;\n        this._contacts.forEach(c => {\n            if(c.firstName.includes(input))\n                return exists = true;\n            if(c.lastName.includes(input))\n                return exists = true;\n        });\n        if(!exists)\n            this.form.get('existingContact').setErrors({ nonExistent: true });\n    }\n\n    private createForm() {\n        return this.fb.group({\n            dailySaleId: this.fb.control(''),\n            agentId: this.fb.control('', [Validators.required]),\n            campaignId: this.fb.control('', [Validators.required]),\n            utilityId: this.fb.control('', [Validators.required]),\n            contactId: this.fb.control('',),\n            clientId: this.fb.control(''),\n            podAccount: this.fb.control('', [Validators.required]),\n            existingContact: this.fb.control('', [this.contactValidatorFn]),\n            contact: this.fb.group({\n                contactId: this.fb.control(''),\n                clientId: this.fb.control(''),\n                firstName: this.fb.control('', [Validators.required]),\n                lastName: this.fb.control('', [Validators.required]),\n                middleName: this.fb.control(''),\n                prefix: this.fb.control(''),\n                suffix: this.fb.control(''),\n                ssn: this.fb.control(''),\n                dob: this.fb.control('', [Validators.required]),\n                street: this.fb.control('', [Validators.required]),\n                street2: this.fb.control(''),\n                city: this.fb.control('', [Validators.required]),\n                state: this.fb.control('', [Validators.required]),\n                zip: this.fb.control('', [Validators.required]),\n                phone: this.fb.control('', [Validators.required, Validators.pattern('[0-9]+')]),\n                email: this.fb.control(''),\n                fax: this.fb.control('')\n            }),\n            status: this.fb.control('', [Validators.required]),\n            saleDate: this.fb.control('', [Validators.required]),\n            paidStatus: this.fb.control(''),\n            paidDate: this.fb.control(''),\n            chargeDate: this.fb.control(''),\n            repaidDate: this.fb.control(''),\n            remarks: this.fb.array([])\n        });\n    }\n\n    private contactValidatorFn():ValidatorFn {\n        return (control:AbstractControl): {[key:string]:any} | null => {\n            const invalid = control.value == null && this.form.get('contact').invalid;\n            return invalid ? {'required': { value: control.value } } : null;\n        }\n    }\n\n    private prepareModel():DailySale {\n        return {\n            dailySaleId: this.form.value.dailySaleId,\n            agentId: this.form.value.agentId,\n            campaignId: this.form.value.campaignId,\n            utilityId: this.form.value.utilityId,\n            clientId: this.form.value.clientId || this.user.sessionUser.sessionClient,\n            podAccount: this.form.value.podAccount,\n            contact: typeof this.form.value.existingContact === 'object'\n                ? this.form.value.existingContact \n                : {\n                contactId: this.form.value.contactId,\n                clientId: this.user.sessionUser.sessionClient,\n                firstName: this.form.value.contact.firstName,\n                lastName: this.form.value.contact.lastName,\n                middleName: this.form.value.contact.middleName,\n                prefix: this.form.value.contact.prefix,\n                suffix: this.form.value.contact.suffix,\n                ssn: this.form.value.contact.ssn,\n                dob: this.form.value.contact.dob,\n                street: this.form.value.contact.street,\n                street2: this.form.value.contact.street2,\n                city: this.form.value.contact.city,\n                state: this.form.value.contact.state,\n                zip: this.form.value.contact.zip,\n                phone: this.form.value.contact.phone,\n                email: this.form.value.contact.email,\n                fax: this.form.value.contact.fax\n            },\n            status: this.form.value.status,\n            paidStatus: this.form.value.paidStatus,\n            saleDate: this.form.value.saleDate,\n            paidDate: this.form.value.paidDate,\n            chargeDate: this.form.value.chargeDate,\n            repaidDate: this.form.value.repaidDate,\n            remarks: this.form.value.remarks.length > 0 \n                ? this.form.value.remarks\n                : null\n        }\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <h3 mat-card-title>\n                    Record a Sale\n                </h3>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card>\n                <mat-card-header>\n                    <mat-card-subtitle>\n                        All fields denoted with * are required.\n                    </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <form [formGroup]=\"form\" class=\"add-daily-sale-form\">\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <mat-select placeholder=\"Agent\" formControlName=\"agentId\" required>\n                                        <mat-option *ngFor=\"let a of agents|async\" [value]=\"a.agentId\">\n                                            {{a.firstName}} {{a.lastName}}\n                                        </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"form.get('agentId').hasError('required')\">\n                                        Please select an agent\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <mat-select placeholder=\"Campaign\" formControlName=\"campaignId\" required>\n                                        <mat-option *ngFor=\"let c of campaigns|async\" [value]=\"c.campaignId\">\n                                            {{c.name}}\n                                        </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"form.get('campaignId').hasError('required') && (form.get('campaignId').touched || formSubmitted)\">\n                                        Please select a campaign\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <ng-container *ngIf=\"form.get('campaignId').value > 0\">\n                                    <mat-form-field *ngIf=\"(utilities|async).length; else noUtilitiesMsg\" class=\"w-100\">\n                                        <mat-select placeholder=\"Utility\" formControlName=\"utilityId\" required>\n                                            <mat-option *ngFor=\"let u of utilities|async\" [value]=\"u.utilityId\">\n                                                {{u.utilityName}}\n                                            </mat-option>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"form.get('utilityId').hasError('required') && (form.get('utilityId').touched || formSubmitted)\">\n                                            Please select a utility\n                                        </mat-error>\n                                    </mat-form-field>\n                                    <ng-template #noUtilitiesMsg>\n                                        <p *ngIf=\"user.role.role > 5; else empRoleType\">\n                                            Uh oh! It looks like you're missing utilities. This is required before you can save sales. Please\n                                            head over <a [routerLink]=\"['/campaigns', form.get('campaignId').value]\">here</a> to add your \n                                            first utility for this campaign now.\n                                        </p>\n                                        <ng-template #empRoleType>\n                                            <p>\n                                                It looks like your organization has not fully setup their campaigns. Please let your direct \n                                                supervisor know, so they can help you resolve this issue before you start completing sales \n                                                entries.\n                                            </p>\n                                        </ng-template>\n                                    </ng-template>\n                                </ng-container>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <input matInput [matDatepicker]=\"saleDatepicker\" placeholder=\"Sale Date\" formControlName=\"saleDate\" required />\n                                    <mat-datepicker-toggle matSuffix [for]=\"saleDatepicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #saleDatepicker></mat-datepicker>\n                                    <mat-error *ngIf=\"form.get('saleDate').hasError('required')\">\n                                        Please select a sale date\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\" *ngIf=\"!showNewContactFields && !showSetContactUI\">\n                            <div class=\"col-md-5\">\n                                <mat-form-field class=\"w-100\">\n                                    <input matInput \n                                        placeholder=\"Customer\" \n                                        formControlName=\"existingContact\" \n                                        [matAutocomplete]=\"autocontact\" \n                                        (keyup)=\"validateContactInput($event)\"\n                                        required \n                                    />\n                                    <mat-autocomplete #autocontact=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                                        <mat-option *ngFor=\"let c of contacts|async\" [value]=\"c\">\n                                            <mat-icon inline=\"true\">person</mat-icon>\n                                            <span>{{c.firstName}} {{c.lastName}}</span> | \n                                            <small>{{c.street}} {{c.city}} {{c.state}}</small>\n                                        </mat-option>\n                                    </mat-autocomplete>\n                                    <mat-error *ngIf=\"form.get('existingContact').hasError('required')\">\n                                        Please select a contact or click the button to add a new one\n                                    </mat-error>\n                                    <mat-error *ngIf=\"form.get('existingContact').hasError('nonExistent')\">\n                                        Please select a contact from the search or create a new one\n                                    </mat-error>\n                                </mat-form-field>\n                                <ng-container *ngIf=\"showSetContactUI\">\n                                    <div class=\"w-100\">\n                                        <span class=\"font-weight-bold\">New Contact: </span>\n                                        <span>{{form.get('contact').get('firstName').value}} </span>\n                                        <span>{{form.get('contact').get('lastName').value}}</span>\n                                        <button type=\"button\" mat-icon-button (click)=\"unsetNewContact()\">\n                                            <mat-icon>clear</mat-icon>\n                                        </button>\n                                        <p class=\"text-muted\">\n                                            This contact will be added when you save the sale. Please make sure you're not duplicating contacts.\n                                        </p>\n                                    </div>\n                                </ng-container>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <button type=\"button\" mat-button \n                                    color=\"primary\" \n                                    (click)=\"showNewContactForm()\"\n                                    [disabled]=\"showNewContactFields || showSetContactUI\"\n                                >\n                                    <mat-icon inline=\"true\">add</mat-icon>\n                                    <span>New Contact</span>\n                                </button>\n                            </div>\n                        </div>\n                        <ng-container *ngIf=\"showNewContactFields\">\n                            <!-- CREATE NEW CONTACT FORM HERE & continue with rest of form -->\n                            <hr />\n                            <p class=\"font-weight-bold\">Create New Customer</p>\n                            <div formGroupName=\"contact\" class=\"new-customer-form\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-1\">\n                                        <mat-form-field class=\"w-100\">\n                                            <mat-select placeholder=\"Prefix\" formControlName=\"prefix\">\n                                                <mat-option value=\"\"></mat-option>\n                                                <mat-option value=\"Dr\">Dr</mat-option>\n                                                <mat-option value=\"Mr\">Mr</mat-option>\n                                                <mat-option value=\"Mrs\">Mrs</mat-option>\n                                                <mat-option value=\"Ms\">Ms</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-4\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\" required />\n                                            <mat-error *ngIf=\"form.get('contact').get('firstName').hasError('required')\">\n                                                Please enter a first name\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-5\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\" required />\n                                            <mat-error *ngIf=\"form.get('contact').get('lastName').hasError('required')\">\n                                                Please enter a last name\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput [matDatepicker]=\"dobPicker\" placeholder=\"Birthdate\" formControlName=\"dob\" required />\n                                            <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                                            <mat-datepicker #dobPicker></mat-datepicker>\n                                            <mat-error *ngIf=\"form.get('contact').get('dob').hasError('required')\">\n                                                Please select a date\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-7\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"Address\" formControlName=\"street\" required />\n                                            <mat-error *ngIf=\"form.get('contact').get('street').hasError('required')\">\n                                                Please enter a street address\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"Apt/Suite/Unit\" formControlName=\"street2\" />\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" #ssn placeholder=\"Social Security Number\" formControlName=\"ssn\" maxlength=\"9\" />\n                                            <mat-hint align=\"end\">{{ssn.value.length}} / 9</mat-hint>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-7\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"City\" formControlName=\"city\" required />\n                                            <mat-error *ngIf=\"form.get('contact').get('city').hasError('required')\">\n                                                Please enter a city\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <mat-form-field class=\"w-100\">\n                                            <mat-select placeholder=\"State\" formControlName=\"state\" required>\n                                                <mat-option *ngFor=\"let s of states\" [value]=\"s.abbreviation\">{{s.name}}</mat-option>\n                                            </mat-select>\n                                            <mat-error *ngIf=\"form.get('contact').get('state').hasError('required')\">\n                                                Please select a state\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-2\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" \n                                                #postalCode\n                                                placeholder=\"Postal Code\" \n                                                formControlName=\"zip\" \n                                                maxlength=\"5\"\n                                                required \n                                            />\n                                            <mat-hint>{{postalCode.value.length}} / 5</mat-hint>\n                                            <mat-error *ngIf=\"form.get('contact').get('zip').hasError('required')\">\n                                                Please enter a postal code\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" required />\n                                            <mat-error *ngIf=\"form.get('contact').get('email').hasError('required')\">\n                                                Please enter an email\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" \n                                                placeholder=\"Phone\" \n                                                formControlName=\"phone\" \n                                                #phone\n                                                maxlength=\"10\"\n                                                required \n                                            />\n                                            <mat-hint>{{phone.value.length}} / 10</mat-hint>\n                                            <mat-error *ngIf=\"form.get('contact').get('phone').hasError('required')\">\n                                                Please enter a phone\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-3\">\n                                        <mat-form-field class=\"w-100\">\n                                            <input matInput type=\"text\" \n                                                placeholder=\"Fax\" \n                                                formControlName=\"fax\" \n                                                #fax\n                                                maxlength=\"10\"\n                                            />\n                                            <mat-hint>{{fax.value.length}} / 10</mat-hint>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </div>\n                            <button type=\"button\" mat-button (click)=\"unsetNewContact('existingContact')\">Cancel</button>\n                            <!-- <button type=\"button\" mat-button color=\"primary\" (click)=\"setNewContact()\">\n                                <mat-icon inline=\"true\">save</mat-icon>\n                                <span>Save</span>\n                            </button> -->\n                            <hr />\n                        </ng-container>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <input type=\"text\" matInput placeholder=\"POD/Account\" formControlName=\"podAccount\" required />\n                                    <mat-error *ngIf=\"form.get('podAccount').hasError('required')\">\n                                        Please enter a POD/Account number\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <mat-select placeholder=\"Sale Status\" formControlName=\"status\" required>\n                                        <mat-option *ngFor=\"let s of saleStatuses|async\" [value]=\"s.saleStatusId\">\n                                            {{s.name}}\n                                        </mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"form.get('status').hasError('required')\">\n                                        Please select a sale status\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <mat-select placeholder=\"Paid Status\" formControlName=\"paidStatus\" required>\n                                        <mat-option value=\"0\">Unpaid</mat-option>\n                                        <mat-option value=\"1\">Paid</mat-option>\n                                        <mat-option value=\"2\">Chargeback</mat-option>\n                                        <mat-option value=\"3\">Repaid</mat-option>\n                                    </mat-select>\n                                    <mat-error *ngIf=\"form.get('paidStatus').hasError('required')\">\n                                        Please select paid status\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <input type=\"text\" matInput [matDatepicker]=\"paidDatepicker\" placeholder=\"Paid Date\" formControlName=\"paidDate\" />\n                                    <mat-datepicker-toggle matSuffix [for]=\"paidDatepicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #paidDatepicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <input type=\"text\" matInput [matDatepicker]=\"chargebackDatepicker\" placeholder=\"Chargeback Date\" formControlName=\"chargeDate\" />\n                                    <mat-datepicker-toggle matSuffix [for]=\"chargebackDatepicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #chargebackDatepicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"w-100\">\n                                    <input type=\"text\" matInput [matDatepicker]=\"repaidDatepicker\" placeholder=\"Repaid Date\" formControlName=\"repaidDate\" />\n                                    <mat-datepicker-toggle matSuffix [for]=\"repaidDatepicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #repaidDatepicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <hr />\n                        <button \n                            type=\"button\" \n                            mat-button \n                            (click)=\"showNewRemarkForm()\" \n                            color=\"primary\"\n                            *ngIf=\"!showNewRemarkField; else newRemarkField;\"\n                        >\n                            <mat-icon inline=\"true\">add</mat-icon>\n                            <span>Note</span>\n                        </button>\n                        <ng-template #newRemarkField>\n                            <div formArrayName=\"remarks\">\n                                <ng-container *ngFor=\"let r of formRemarks; let i = index\">\n                                    <mat-form-field class=\"w-100\" [formGroupName]=\"i\">\n                                        <textarea \n                                            matInput \n                                            placeholder=\"Note\" \n                                            formControlName=\"description\"\n                                            matTextareaAutosize=\"true\"\n                                            matAutosizeMinRows=\"4\"\n                                        ></textarea>\n                                    </mat-form-field>\n                                </ng-container>\n                            </div>\n                            <button type=\"button\" mat-button color=\"warn\" (click)=\"undoRemark()\">\n                                <mat-icon inline=\"true\">undo</mat-icon>\n                                <span>Undo</span>\n                            </button>\n                        </ng-template>\n                    </form>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button type=\"button\" mat-button (click)=\"clearForm()\">\n                        Cancel\n                    </button>\n                    <button type=\"button\" mat-button color=\"primary\" (click)=\"save()\">\n                        <mat-icon inline=\"true\">save</mat-icon>\n                        <span>Save</span>\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </div>  \n    </div>\n</div>","import {Component, OnInit, AfterViewInit, NgZone, OnDestroy} from '@angular/core';\nimport {DailySale, IAgent, SaleStatus, User, ICampaign, Remark, PaidStatusType} from '@app/models';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {AgentsService} from '@app/core/agents/agents.service';\nimport {MessageService} from '@app/message.service';\nimport {Observable, of, BehaviorSubject, zip, forkJoin, Subscription} from 'rxjs';\nimport {DataSource} from '@angular/cdk/table';\nimport {ClientService} from '@app/client-information/client.service';\nimport {UserService} from '@app/user-features/user.service';\nimport {DailySaleTrackerService} from './daily-sale-tracker.service';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport {Moment} from 'moment';\nimport {AddSaleDialogComponent} from '@app/daily-sale-tracker/dialogs/add-sale.component';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {States, IState} from '@app/shared/models/state.model';\nimport {FormGroup, FormBuilder, FormArray, Validators, FormControl} from '@angular/forms';\nimport {DeleteSaleDialog} from '@app/daily-sale-tracker/dialogs/delete-sale.component';\nimport {trigger, style, state, transition, animate} from '@angular/animations';\nimport {FloatBtnService} from '@app/fab-float-btn/float-btn.service';\nimport { coerceNumberProperty } from '@app/utils';\nimport { startWith, map, distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport { SessionService } from '@app/session.service';\n\ninterface DataStore {\n    statuses: SaleStatus[];\n    sales: DailySale[];\n}\n\ninterface PaidStatus {\n    id: number | string;\n    name: string;\n}\n\n@Component({\n    selector: 'vs-daily-sale-tracker',\n    templateUrl: './daily-sale-tracker.component.html',\n    styleUrls: ['./daily-sale-tracker.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n        ]),\n        trigger('collapseIcon', [\n            state('collapsed', style({ transform: 'rotate(0)' })),\n            state('expanded', style({ transform: 'rotate(180deg)' })),\n            transition('collapsed <=> expanded', animate('400ms ease-in-out'))\n        ])\n    ],\n    providers: [FloatBtnService]\n})\nexport class DailySaleTrackerComponent implements OnInit, AfterViewInit, OnDestroy {\n    paidStatusOptions: PaidStatus[] = [\n        {id: 0, name: 'Unpaid'},\n        {id: 1, name: 'Paid'},\n        {id: 2, name: 'Chargeback'},\n        {id: 3, name: 'Repaid'}\n    ];\n    states: IState[] = States.$get();\n    displayColumns: string[] = [\n        'saleDate',\n        'agentId',\n        'podAccount',\n        'firstName',\n        'lastName',\n        'status',\n        'paidStatus',\n        'activityDate',\n        'save'\n    ];\n\n    private store: DataStore = {\n        statuses: null,\n        sales: null\n    };\n\n    userInfo: User;\n    dataSource$: BehaviorSubject<DailySale[]> = new BehaviorSubject<DailySale[]>(null);\n    sales: Observable<DailySale[]>;\n    agents: IAgent[] = [];\n    startDate = moment().subtract(3, 'days');\n    endDate = moment();\n    statuses: BehaviorSubject<SaleStatus[]> = new BehaviorSubject<SaleStatus[]>(null);\n    campaigns: ICampaign[];\n    selectedCampaign: ICampaign;\n    tableEmpty: boolean;\n    floatIsOpen: Observable<boolean>;\n    form: FormGroup;\n    expandedElement: DailySale;\n    showNotes: boolean = false;\n    searchAgentsCtrl = new FormControl('');\n    filteredAgents:Observable<IAgent[]>;\n    agentInputs:string[] = [];\n\n    subs: Subscription[] = [];\n\n    constructor(\n        private agentService: AgentsService,\n        private clientService: ClientService,\n        private campaignService: CampaignService,\n        private userService: UserService,\n        private msg: MessageService,\n        private trackerService: DailySaleTrackerService,\n        private dialog: MatDialog,\n        private fb: FormBuilder,\n        private floatBtnService: FloatBtnService,\n        private session:SessionService,\n        private ngZone:NgZone\n    ) {\n        /** why are we doing this? why not just use an observable w/async pipe to dataSource$? */\n        this.dataSource$.subscribe(next => {\n            if (next == null) return;\n            this.sales = of(next);\n        });\n        this.floatIsOpen = this.floatBtnService.opened$.asObservable();\n\n        this.searchAgentsCtrl.valueChanges\n            .pipe(\n                debounceTime(250),\n                distinctUntilChanged()\n            ).subscribe(agent => this.filteredAgents = of(agent ? this._filterAgents(agent) : this.agents.slice()));\n    }\n\n    private _filterAgents(value:string):IAgent[] {\n        if(value == null) {\n            this.filteredAgents = of(this.agents);\n            return;\n        }\n        const filterValue = value.toString().trim().toLowerCase();\n        return this.agents.filter(agent => agent.firstName.toLowerCase().indexOf(filterValue) === 0 ||\n            agent.lastName.toLowerCase().indexOf(filterValue) === 0);\n    }\n\n    removeChip(input:string):void {\n        this.agentInputs.splice(this.agentInputs.indexOf(input), 1);\n    }\n\n    addChip(event:MatChipInputEvent):void {\n        const input = event.input;\n        const value = event.value;\n\n        if((value || '').trim()) {\n            this.agentInputs.push(value.trim());\n            this._filterAgents(value.trim());\n        }\n\n        // clear\n        if(input) {\n            input.value = '';\n        }\n    }\n\n    ngOnInit() {\n        this.createForm();\n        \n        this.subs.push(this.session.getUserItem().subscribe(u => {\n            this.userInfo = u;\n\n            forkJoin(\n                this.clientService.getSaleStatuses(this.userInfo.sessionUser.sessionClient),\n                this.campaignService.getCampaigns(this.userInfo.sessionUser.sessionClient)\n            ).subscribe(([saleStatuses, campaigns]) => {\n                this.store.statuses = saleStatuses;\n                this.statuses.next(saleStatuses);\n\n                this.campaigns = _.sortBy(campaigns, ['name']);\n                this.campaigns.unshift({\n                    campaignId: 0,\n                    clientId: this.userInfo.sessionUser.sessionClient,\n                    name: 'All Campaigns',\n                    active: true\n                });\n\n                if (this.campaigns.length) {\n                    this.selectedCampaign = this.campaigns[0];\n                } else {\n                    this.selectedCampaign = {\n                        campaignId: 0,\n                        clientId: null,\n                        name: null,\n                        active: false\n                    };\n                }\n\n                this.refreshDailySales(this.startDate, this.endDate);\n            });\n        }));\n\n        this.agentService\n            .getAgents(true)\n            .then(agents => {\n                this.agents = agents;\n                this.filteredAgents = of(this.agents);\n            })\n            .catch(this.msg.showWebApiError);\n    }\n\n    ngOnDestroy() {\n        this.subs.forEach(s => {\n            s.unsubscribe();\n        });\n    }\n\n    ngAfterViewInit() {\n        this.form.valueChanges.subscribe(value => {\n            console.dir(value);\n        });\n    }\n\n    handleDateChange($event: MatDatepickerInputEvent<Moment>, isStartDate: boolean): void {\n        const mDate = $event.value;\n\n        if (isStartDate) {\n            this.startDate = mDate;\n        } else {\n            this.endDate = mDate;\n        }\n\n        const start = this.startDate;\n        const end = this.endDate;\n\n        this.refreshDailySales(start, end);\n    }\n\n    expandedRowHover(row: any): void {\n        if (row.remarks.length < 1) return;\n        row.showNotes = row.showNotes == null ? true : !row.showNotes;\n        this.showNotes = !this.showNotes;\n        row = this.showNotes ? row : null;\n\n        this.ngZone.run(() => this.expandedElement = row);\n        // setTimeout(() => {\n        //     this.expandedElement = row;\n        // }, 250);\n    }\n\n    showAddSaleDialog(): void {\n        this.floatBtnService.open();\n        this.dialog\n            .open(AddSaleDialogComponent, {\n                width: '800px',\n                data: {\n                    statuses: this.store.statuses,\n                    agents: this.agents,\n                    selectedCampaign: this.selectedCampaign,\n                    campaigns: this.campaigns.filter(c => c.active),\n                    user: this.userInfo\n                },\n                autoFocus: false\n            })\n            .afterClosed()\n            .subscribe((result: any) => {\n                this.floatBtnService.close();\n                if (result == null) return;\n\n                let dto:DailySale = result;\n                dto.contact.contactId = dto.contact.contactId != null ? dto.contact.contactId : null;\n                dto.clientId = this.userInfo.sessionUser.sessionClient;\n                dto.saleDate = this.formatSqlDate(dto.saleDate as Moment, true);\n\n                this.trackerService.saveSaleWithContactInfo(dto.clientId, dto.campaignId, dto)\n                    .subscribe(sale => {\n                        this.refreshDailySales(this.startDate, this.endDate);\n                    });\n            });\n    }\n\n    changeSelectedCampaignId(event: MatSelectChange): void {\n        this.selectedCampaign = _.find(this.campaigns, {campaignId: event.value}) as ICampaign;\n\n        this.refreshDailySales(this.startDate, this.endDate);\n    }\n\n    castString(value: any): string {\n        return value + '';\n    }\n\n    formatSqlDate(date: Moment, withTimestamp: boolean = false): string {\n        if (withTimestamp) return date.format('YYYY-MM-DD HH:mm:ss');\n        return date.format('YYYY-MM-DD');\n    }\n\n    getFormGroup(name: string, index: number): FormGroup {\n        return this.form.get(name).get(index + '') as FormGroup;\n    }\n\n    getSalesControl(name: string, index: number): FormControl {\n        return this.form\n            .get('sales')\n            .get(index + '')\n            .get(name) as FormControl;\n    }\n\n    updateExistingSalesRow(index: number): void {\n        const sale: FormGroup = this.form.get('sales').get(index + '') as FormGroup;\n\n        // if the user chose a paid status of \"unpaid\", let's call the method to handle this\n        // which simply unsets the activity date\n        if (sale.value.paidStatus == PaidStatusType.unpaid) this.unsetActivityDate(index);\n\n        let dto = this.prepareModel(sale, index);\n\n        if(dto == null) {\n            this.form.setErrors({ missingContactInformation: true }, { emitEvent: false });\n            this.msg.addMessage('Failed to save. Please refresh and click the pencil to edit.', 'dismiss', 3500);\n            return;\n        }\n\n        let changeType, changeDate;\n        switch (coerceNumberProperty(sale.value.paidStatus)) {\n            case PaidStatusType.chargeback:\n                changeType = 'Chargeback';\n                changeDate = dto.chargeDate;\n                break;\n            case PaidStatusType.paid:\n                changeType = 'Paid';\n                changeDate = dto.paidDate;\n                break;\n            case PaidStatusType.repaid:\n                changeType = 'Repaid';\n                changeDate = dto.repaidDate;\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                changeType = 'Unpaid';\n                changeDate = null;\n                break;\n        }\n\n        if (sale.value.paidStatus != PaidStatusType.unpaid) {\n            let changeDateTime = moment().toString();\n            let formattedChangeDate: string = moment(changeDate).format('MM-DD-YYYY');\n            let changeAgent = this.userInfo.firstName + ' ' + this.userInfo.lastName;\n            let remark = `Paid status was changed to: ${changeType} (${formattedChangeDate}) on ${changeDateTime} by: ${changeAgent}.`;\n\n            dto.remarks.push({\n                remarkId: null,\n                dailySaleId: dto.dailySaleId,\n                description: remark,\n                modifiedBy: this.userInfo.id\n            });\n        }\n\n        this.trackerService.updateDailySale(dto.clientId, dto).subscribe(result => {\n            this.store.sales[index] = result;\n            this.patchFormSaleValue(result, index);\n            this.msg.addMessage('Sale updated successfully.', 'dismiss', 3000);\n        });\n    }\n\n    private unsetActivityDate(index: number): void {\n        (<FormControl>this.form.get('sales').get(index + '')).patchValue({\n            activityDate: null\n        });\n    }\n\n    showEditSaleDialog(index: number): void {\n        // this was checking form validity when we were completing the entire form right in the table\n        // but don't think i need this anymore\n        // const sale:FormGroup = this.form.get('sales').get(index+'') as FormGroup;\n        // if (sale.invalid) return;\n\n        let dto = this.store.sales[index];\n\n        let campaign:ICampaign;\n        if(this.selectedCampaign.campaignId < 1) {\n            campaign = _.find(this.campaigns, {campaignId: dto.campaignId});\n        } else {\n            campaign = this.selectedCampaign;\n        }\n\n        this.dialog\n            .open(AddSaleDialogComponent, {\n                width: '800px',\n                data: {\n                    agents: this.agents,\n                    selectedCampaign: campaign,\n                    sale: dto,\n                    statuses: this.store.statuses,\n                    campaigns: this.campaigns,\n                    user: this.userInfo\n                }, \n                autoFocus: false\n            })\n            .afterClosed()\n            .subscribe(dto => {\n                if (dto == null) return;\n\n                this.trackerService.updateDailySale(this.userInfo.sessionUser.sessionClient, dto).subscribe(sale => {\n                    this.store.sales[index] = sale;\n                    // this.patchFormSaleValue(sale, index);\n                    this.refreshDailySales(this.startDate, this.endDate);\n                    this.msg.addMessage('Saved!', 'dismiss', 3000);\n                });\n            });\n    }\n\n    deleteSale(index: number): void {\n        const sale = this.form.get('sales').get(index + '') as FormGroup;\n\n        if (this.showNotes) this.expandedRowHover(null);\n\n        this.dialog\n            .open(DeleteSaleDialog, {\n                width: '300'\n            })\n            .afterClosed()\n            .subscribe(result => {\n                if (result == null) return;\n                \n                const dailySaleId = sale.value.dailySaleId;\n                if (dailySaleId < 1) return;\n\n                this.trackerService\n                    .deleteDailySale(this.userInfo.sessionUser.sessionClient, dailySaleId)\n                    .subscribe(() => {\n                        this.msg.addMessage('Successfully deleted sale.', 'dismiss', 3000);\n                        this.refreshDailySales(this.startDate, this.endDate);\n                    });\n            });\n    }\n\n    getAgentName(agentId: number): string {\n        const agent = _.find(this.agents, {agentId: agentId}) as IAgent;\n        return agent.firstName + ' ' + agent.lastName;\n    }\n\n    getSaleStatus(statusId: number): SaleStatus {\n        return (_.find(this.statuses.getValue(), {saleStatusId: statusId}) || {id: statusId, name: null}) as SaleStatus;\n    }\n\n    getPaidStatus(paidStatusId: number): PaidStatus {\n        return _.find(this.paidStatusOptions, {id: paidStatusId}) as PaidStatus;\n    }\n\n    private refreshDailySales(startDate: Moment, endDate: Moment): void {\n\n        this.trackerService\n            .getDailySalesByDate(\n                this.userInfo.sessionUser.sessionClient,\n                this.selectedCampaign.campaignId,\n                startDate,\n                endDate\n            )\n            .subscribe(sales => {\n                this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n\n                this.store.sales.forEach(s => s.readonly = s.payCycleId != null && s.payCycleId > 0);\n\n                this.tableEmpty = sales.length < 1;\n                this.dataSource$.next(this.store.sales);\n                this.createForm();\n            });\n    }\n\n    private createForm(): void {\n        this.form = this.fb.group({\n            sales: this.createSalesFormArray()\n        });\n    }\n\n    private createSalesFormArray(): FormArray {\n        if (this.store.sales == null || this.store.sales.length < 1) return this.fb.array([]);\n        let result: FormArray = this.fb.array([]);\n        for (let i = 0; i < this.store.sales.length; i++) {\n            const d = this.store.sales[i];\n            result.push(\n                this.fb.group({\n                    dailySaleId: this.fb.control(d.dailySaleId || ''),\n                    agent: this.fb.control(d.agentId || '', [Validators.required]),\n                    account: this.fb.control(d.podAccount || '', [Validators.required]),\n                    firstName: this.fb.control(d.firstName || '', [Validators.required]),\n                    lastName: this.fb.control(d.lastName || '', [Validators.required]),\n                    street: this.fb.control(d.street || '', [Validators.required]),\n                    street2: this.fb.control(d.street2 || ''),\n                    city: this.fb.control(d.city || '', [Validators.required]),\n                    state: this.fb.control(d.state || '', [Validators.required]),\n                    zip: this.fb.control(d.zip || '', [Validators.required]),\n                    status: this.fb.control(d.status || '', [Validators.required]),\n                    paidStatus: this.fb.control(d.paidStatus, [Validators.required]),\n                    saleDate: this.fb.control(d.saleDate || '', [Validators.required]),\n                    paidDate: this.fb.control(d.paidDate || ''),\n                    chargeDate: this.fb.control(d.chargeDate || ''),\n                    repaidDate: this.fb.control(d.repaidDate || ''),\n                    activityDate: this.fb.control(this.calculateActivityDate(d)),\n                    remarks: this.createRemarksFormArray(d.remarks)\n                })\n            );\n        }\n        return result;\n    }\n\n    private calculateActivityDate(sale: DailySale): Date | string | Moment {\n        let activityDate: Date | string | Moment;\n\n        switch (coerceNumberProperty(sale.paidStatus)) {\n            case PaidStatusType.paid:\n                activityDate = sale.paidDate;\n                break;\n            case PaidStatusType.chargeback:\n                activityDate = sale.chargeDate;\n                break;\n            case PaidStatusType.repaid:\n                activityDate = sale.repaidDate;\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                activityDate = null;\n                break;\n        }\n\n        return activityDate;\n    }\n\n    private setActivityDateProperty(\n        formPaidStatus: PaidStatusType,\n        modelField: string,\n        index: number\n    ): Date | string | Moment {\n        let actMo = moment(this.form.value.sales[index].activityDate);\n        if (modelField == 'paidDate' && formPaidStatus == PaidStatusType.paid && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        } else if (modelField == 'chargeDate' && formPaidStatus == PaidStatusType.chargeback && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        } else if (modelField == 'repaidDate' && formPaidStatus == PaidStatusType.repaid && actMo.isValid()) {\n            return moment(this.form.value.sales[index].activityDate).format('YYYY-MM-DD');\n        }\n        return this.store.sales[index][modelField] || null;\n    }\n\n    private createRemarksFormArray(remarks: Remark[]): FormArray {\n        let result = this.fb.array([]);\n        remarks.forEach(r => {\n            result.push(this.fb.control(r.description || '', [Validators.required]));\n        });\n        return result;\n    }\n\n    private patchFormSaleValue(sale: DailySale, index: number): void {\n        const formSale = this.form.get('sales').get(index.toString()) as FormGroup;\n        const remarks = formSale.get('remarks') as FormArray;\n\n        for(let i = 0; i < remarks.length; i++) {\n            remarks.removeAt(i);\n        }\n\n        const remarksArray = this.createRemarksFormArray(sale.remarks);\n\n        remarksArray.controls.forEach(r => (<FormArray>formSale.get('remarks')).push(r));\n\n        this.form\n            .get('sales')\n            .get(index + '')\n            .patchValue({\n                dailySaleId: sale.dailySaleId,\n                agent: sale.agentId,\n                account: sale.podAccount,\n                firstName: sale.firstName,\n                lastName: sale.lastName,\n                street: sale.street,\n                street2: sale.street2,\n                city: sale.city,\n                state: sale.state,\n                zip: sale.zip,\n                status: sale.status,\n                paidStatus: +sale.paidStatus,\n                activityDate: this.calculateActivityDate(sale),\n                saleDate: sale.saleDate\n            });\n    }\n\n    private prepareModel(form: FormGroup, index: number = null): DailySale {\n        const contact = this.store.sales.find(s => s.dailySaleId == form.value.dailySaleId).contact;\n        if(contact == null) return null;\n\n        const paidStatus = coerceNumberProperty(form.value.paidStatus);\n\n        return {\n            dailySaleId: form.value.dailySaleId,\n            agentId: form.value.agent,\n            campaignId: this.resolveClientId(index),\n            clientId: this.userInfo.sessionUser.sessionClient,\n            contactId: contact.contactId,\n            contact: contact,\n            firstName: form.value.firstName,\n            lastName: form.value.lastName,\n            street: form.value.street,\n            street2: form.value.street2,\n            city: form.value.city,\n            state: form.value.state,\n            zip: form.value.zip,\n            status: form.value.status,\n            paidStatus: form.value.paidStatus,\n            // paidDate: this.setActivityDateProperty(form.value.paidStatus, 'paidDate', index),\n            // chargeDate: this.setActivityDateProperty(form.value.paidStatus, 'chargeDate', index),\n            // repaidDate: this.setActivityDateProperty(form.value.paidStatus, 'repaidDate', index),\n            remarks: this.prepareRemarks(index),\n            saleDate: form.value.saleDate,\n            podAccount: form.value.account,\n            paidDate: paidStatus == PaidStatusType.paid && form.value.paidDate == '' \n                ? moment().format('YYYY-MM-DD') : form.value.paidDate,\n            chargeDate: paidStatus == PaidStatusType.chargeback && form.value.chargeDate == ''\n                ? moment().format('YYYY-MM-DD') : form.value.chargeDate,\n            repaidDate: paidStatus == PaidStatusType.repaid && form.value.repaidDate == ''\n                ? moment().format('YYYY-MM-DD') : form.value.repaidDate\n        };\n    }\n\n    private resolveClientId(saleIndex: number): number {\n        if (this.selectedCampaign.campaignId > 0) return this.selectedCampaign.campaignId;\n        return this.store.sales[saleIndex].campaignId;\n    }\n\n    private prepareRemarks(index): Remark[] {\n        var result: Remark[] = [];\n        if (this.form.value.remarks == null) return [];\n        this.form.value.remarks.forEach((r: string) => {\n            result.push({\n                remarkId: null,\n                dailySaleId: this.store.sales[index].dailySaleId,\n                description: r,\n                modifiedBy: this.userInfo.id\n            });\n        });\n        return result;\n    }\n}\n\n\n","\n<mat-card class=\"page-header-accent\">\n    <h2 mat-card-title>Sales Tracker</h2>\n    <mat-card-subtitle class=\"d-flex justify-content-between py-2\">\n        <div>\n            <mat-form-field class=\"mx-1\">\n                <input matInput [matDatepicker]=\"trackerStart\" placeholder=\"Start Date\" [(value)]=\"startDate\"\n                    (dateChange)=\"handleDateChange($event, true)\" />\n                <mat-datepicker-toggle matSuffix [for]=\"trackerStart\"></mat-datepicker-toggle>\n                <mat-datepicker #trackerStart [startAt]=\"startDate\"></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field class=\"mx-1\">\n                <input matInput [matDatepicker]=\"trackerEnd\" placeholder=\"End Date\" [(value)]=\"endDate\" (dateChange)=\"handleDateChange($event, false)\" />\n                <mat-datepicker-toggle matSuffix [for]=\"trackerEnd\"></mat-datepicker-toggle>\n                <mat-datepicker #trackerEnd [startAt]=\"endDate\"></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field class=\"mx-1\" *ngIf=\"selectedCampaign != null\">\n                <mat-select placeholder=\"Select Campaign\" [value]=\"selectedCampaign.campaignId\" (selectionChange)=\"changeSelectedCampaignId($event)\">\n                    <mat-option *ngFor=\"let c of campaigns\" [value]=\"c.campaignId\">\n                        {{ c.name }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <!-- <mat-form-field class=\"wx-220 align-items-baseline\">\n            <mat-icon matPrefix inline=\"true\">search</mat-icon>\n            <mat-chip-list #chipList>\n                <mat-chip *ngFor=\"let input of agentInputs\" selectable=\"false\" removable=\"true\"\n                    (removed)=\"removeChip(input)\">\n                    {{input}}\n                    <mat-icon matChipRemove>cancel</mat-icon>\n                </mat-chip>\n                <input matInput placeholder=\"Search by Agent\" [formControl]=\"searchAgentsCtrl\"\n                    [matChipInputFor]=\"chipList\" [matChipInputAddOnBlur]=\"true\" (matChipInputTokenEnd)=\"addChip($event)\" />\n            </mat-chip-list>\n            \n            <mat-autocomplete #searchAgents=\"matAutocomplete\">\n                <mat-option *ngFor=\"let a of filteredAgents|async\" [value]=\"a.agentId\">\n                    <mat-icon inline=\"true\">account_circle</mat-icon>\n                    <span>{{a.firstName}} {{a.lastName}}</span>\n                </mat-option>\n            </mat-autocomplete>\n        </mat-form-field> -->\n    </mat-card-subtitle>\n</mat-card>\n\n<mat-card>\n    <mat-card-content>\n\n        <!-- NO TABLE DATA VIEW -->\n        <div class=\"row justify-content-center no-data-message\" *ngIf=\"!(dataSource$.getValue() != null && dataSource$.getValue().length); else hasTableData;\">\n            <div class=\"col-md-6 text-center\">\n                <h4>\n                    Looks like you don't have any sales or this time period. Adjust the date range above or add a sale.\n                </h4>\n                <button mat-raised-button type=\"button\" color=\"primary\" (click)=\"showAddSaleDialog()\">Add Sale</button>\n            </div>\n        </div>\n\n        <!-- TABLE -->\n        <ng-template #hasTableData>\n            <form [formGroup]=\"form\">\n                <table mat-table [dataSource]=\"sales\" multiTemplateDataRows formArrayName=\"sales\" *ngIf=\"dataSource$.getValue() != null && dataSource$.getValue().length > 0\">\n\n                    <ng-container matColumnDef=\"saleDate\">\n                        <th mat-header-cell *matHeaderCellDef>Date</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\" class=\"pl-0 pr-1\">\n                            <button type=\"button\" mat-icon-button \n                                (click)=\"expandedRowHover(item)\" [class.invisible]=\"item.remarks.length < 1\">\n                                <mat-icon [@collapseIcon]=\"item === expandedElement ? 'expanded' : 'collapsed'\">keyboard_arrow_up</mat-icon>\n                            </button>\n                            {{ item.saleDate | date:'shortDate' }}\n                        </td>\n                    </ng-container>\n\n                    <!-- agent dropdown -->\n                    <ng-container matColumnDef=\"agentId\">\n                        <th mat-header-cell *matHeaderCellDef>Agent</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\" class=\"px-1\">\n                            <span>{{getAgentName(item.agentId)}}</span>\n                        </td>\n                    </ng-container>\n\n                    <!-- account number  -->\n                    <ng-container matColumnDef=\"podAccount\">\n                        <th mat-header-cell *matHeaderCellDef>POD/Account</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\">\n                            {{item.podAccount}}\n                        </td>\n                    </ng-container>\n\n                    <!-- customer first name -->\n                    <ng-container matColumnDef=\"firstName\">\n                        <th mat-header-cell *matHeaderCellDef>Contact</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\" [matTooltip]=\"item.contact?.businessName\">\n                            <ng-container *ngIf=\"item.contact?.businessName != null\">\n                                <mat-icon inline=\"true\" class=\"px-1\">domain</mat-icon>\n                            </ng-container>\n                            <span>{{item.contact?.firstName}}</span>\n                        </td>\n                    </ng-container>\n\n                    <!-- customer last name -->\n                    <ng-container matColumnDef=\"lastName\">\n                        <th mat-header-cell *matHeaderCellDef>\n                            <mat-icon inline=\"true\">launch</mat-icon>\n                        </th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\">\n                            <span>{{item.contact?.lastName}}</span>\n                        </td>\n                    </ng-container>\n\n                    <!-- sale status -->\n                    <ng-container matColumnDef=\"status\">\n                        <th mat-header-cell *matHeaderCellDef>Status</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\">\n                            <mat-form-field>\n                                <mat-select formControlName=\"status\" required \n                                    (selectionChange)=\"updateExistingSalesRow(i)\" [disabled]=\"item.readonly\">\n                                    <mat-option *ngFor=\"let s of statuses | async\" [value]=\"s.saleStatusId\">\n                                        {{s.name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                    </ng-container>\n\n                    <!-- paid status -->\n                    <ng-container matColumnDef=\"paidStatus\">\n                        <th mat-header-cell *matHeaderCellDef>Paid Status</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\">\n                            <mat-form-field>\n                                <mat-select formControlName=\"paidStatus\" required \n                                    (selectionChange)=\"updateExistingSalesRow(i)\" [disabled]=\"item.readonly\">\n                                    <mat-option *ngFor=\"let p of paidStatusOptions\" [value]=\"p.id\">\n                                        {{p.name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                    </ng-container>\n\n                    <!-- activity date -->\n                    <ng-container matColumnDef=\"activityDate\">\n                        <th mat-header-cell *matHeaderCellDef>Activity</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\" [formGroupName]=\"i\">\n                            <ng-container *ngIf=\"form.controls['sales'].controls[i].controls.activityDate.value != null; else nullActivity\">\n                                {{form.controls['sales'].controls[i].controls.activityDate.value | date:'shortDate'}}\n                            </ng-container>\n                            <ng-template #nullActivity>\n                                <span class=\"text-muted font-italic\">(No date)</span>\n                            </ng-template>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"save\">\n                        <th mat-header-cell *matHeaderCellDef>&nbsp;</th>\n                        <td mat-cell *matCellDef=\"let item; let i=dataIndex\">\n                            <div class=\"table-shrink\" class=\"hover-item\" *ngIf=\"!item.readonly\">\n                                <button mat-icon-button (click)=\"showEditSaleDialog(i)\">\n                                    <mat-icon>edit</mat-icon>\n                                </button>\n                                <button mat-icon-button color=\"warn\" (click)=\"deleteSale(i)\">\n                                    <mat-icon>delete</mat-icon>\n                                </button>\n                            </div>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"expandedDetail\">\n                        <td mat-cell *matCellDef=\"let item; let i = dataIndex\" [attr.colspan]=\"displayColumns.length\">\n                            <div class=\"element-detail\" [@detailExpand]=\"item == expandedElement ? 'expanded' : 'collapsed'\">\n                                <mat-list>\n                                    <h3 mat-subheader>Notes</h3>\n                                    <mat-list-item *ngIf=\"item.remarks.length == 0; else hasRemarks\">\n                                        <mat-icon mat-list-icon>error_outline</mat-icon>\n                                        <h4 mat-line>Sorry, no notes for this sale exist.</h4>\n                                    </mat-list-item>\n                                    <ng-template #hasRemarks>\n                                        <mat-list-item *ngFor=\"let r of item.remarks\">\n                                            <mat-icon mat-list-icon>folder</mat-icon>\n                                            <h4 mat-line class=\"white-space-normal\">{{r.description}}</h4>\n                                            <p mat-line>{{r.updatedAt | date:'shortDate'}}</p>\n                                        </mat-list-item>\n                                    </ng-template>\n                                </mat-list>\n                            </div>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"displayColumns; sticky: true\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayColumns; let i=index\" \n                        class=\"element-row hoverable\" [class.bg-light]=\"row.readonly\" [class.disabled]=\"row.readonly\"></tr>\n                    <tr mat-row *matRowDef=\"let expandedRow; columns: ['expandedDetail']\" class=\"detail-row\"></tr>\n                </table>\n            </form>\n        </ng-template>\n\n\n    </mat-card-content>\n</mat-card>\n\n<vs-float-button mat-icon=\"add\" (callback)=\"showAddSaleDialog()\" [isOpen]=\"floatIsOpen\"></vs-float-button>","import { Injectable } from '@angular/core';\nimport { AuthService } from '@app/auth.service';\nimport { Observable, throwError } from 'rxjs';\nimport { SaleStatus, DailySale, HttpErrorResponse, DailySaleRequest, Graphql } from '@app/models';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, map } from 'rxjs/operators';\nimport { Moment } from 'moment';\nimport { environment } from '@env/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DailySaleTrackerService {\n\n    url: string;\n    graphql = environment.graphql;\n\n    constructor(private http: HttpClient, private auth: AuthService) {\n        this.url = `${this.auth.apiUrl}api`;\n    }\n\n    getDailySalesByDate(clientId: number, campaignId: number, startDate: Moment, endDate: Moment): Observable<DailySale[]> {\n        const url = `${this.url}/clients/${clientId}/daily-sales/campaigns/${campaignId}` +\n            `/from/${startDate.format('YYYY-MM-DD')}/to/${endDate.format('YYYY-MM-DD')}`;\n        return this.http.get<DailySale[]>(url);\n    }\n\n    getDailySalesByAgent(clientId: number, agentId: number, startDate: string, endDate: string): Observable<DailySale[]> {\n        const url = `${this.url}/clients/${clientId}/daily-sales/agents/${agentId}/from/${startDate}/to/${endDate}`;\n        return this.http.get<DailySale[]>(url)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    getPaycheckDetailSales(clientId: number, payCycleId: number): Observable<DailySale[]> {\n        const url = `${this.url}/clients/${clientId}/pay-cycles/${payCycleId}/daily-sales`;\n        return this.http.get<DailySale[]>(url);\n    }\n\n    createDailySale(clientId: number, dto: DailySale): Observable<DailySale> {\n        const url = `${this.url}/clients/${clientId}/daily-sales`;\n        return this.http.post<DailySale>(url, dto);\n    }\n\n    checkUniquePodAccount(account: number): Observable<boolean> {\n        const url = `${this.url}/pods/${account}`;\n        return this.http.get<boolean>(url)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    updateDailySale(clientId: number, dto: DailySale): Observable<DailySale> {\n        const url = `${this.url}/clients/${clientId}/daily-sales/${dto.dailySaleId}`;\n        return this.http.post<DailySale>(url, dto)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    deleteDailySale(clientId: number, dailySaleId: number): Observable<boolean> {\n        const url = `${this.url}/clients/${clientId}/daily-sales/${dailySaleId}`;\n        return this.http.delete<boolean>(url)\n            .pipe(\n                catchError(this.handleError)\n            );\n    }\n\n    saveSaleWithContactInfo(clientId: number, campaignId: number, saleWithContact: DailySale): Observable<DailySale> {\n        const url = `${this.url}/clients/${clientId}/campaigns/${campaignId}/daily-sales`;\n        return this.http.post<DailySale>(url, saleWithContact);\n    }\n\n    saveSalesList(dtos: DailySaleRequest[]): Observable<DailySale[]> {\n        const s = [`mutation { saveDailySales(input: [{`];\n        dtos.forEach((d, i, a) => {\n            for (const p in d) {\n                if (p == 'agent_id' || p == 'client_id' || p == 'campaign_id' || p == 'utility_id'\n                    || p == 'contact_id' || p == 'pod_account' || p == 'status' || p == 'paid_status'\n                    || p == 'pay_cycle_id' || p == 'has_geo') {\n                        s.push(`${p}: ${d[p]}`);\n                    } else {\n                        s.push(`${p}: \"${d[p]}\"`);\n                    }\n\n                if (i < dtos.length - 1) {\n                    s.push(`}, {`);\n                } else {\n                    s.push(`}]) {`);\n                    s.push(`dailySaleId agentId clientId utilityId contactId podAccount status `);\n                    s.push(`paidStatus payCycleId hasGeo saleDate lastTouchDate paidDate`);\n                    s.push(`chargeDate repaidDate createdAt updatedAt`);\n                }\n            }\n        });\n        return this.http.post<Graphql<DailySale[]>>(this.graphql, {\n                query: s.join(' ')\n            })\n            .pipe(\n                map(r => r.data.saveDailySales)\n            );\n    }\n\n    private handleError(error: HttpErrorResponse) {\n        if (error.error instanceof ErrorEvent) {\n            // client side network error\n            console.log('Error occurred: ', error.error.message || error.message);\n        } else {\n            // backend returned server error\n            console.error(`\n        Server returned error code ${error.status}: ${error.error}\n      `)\n        }\n        return throwError('There was a network error. Please try again.');\n    }\n\n}\n","import {Component, OnInit, Inject, ViewChild, AfterViewInit, ChangeDetectorRef} from '@angular/core';\nimport { MatAutocomplete } from '@angular/material/autocomplete';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {FormBuilder, FormGroup, Validators, FormArray, FormControl, ValidatorFn, AbstractControl} from '@angular/forms';\nimport {SaleStatus, IAgent, ICampaign, DailySale, User, Remark, PaidStatusType, Utility, ContactType} from '@app/models';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {IState, States} from '@app/shared/models/state.model';\nimport {Moment} from 'moment';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {Router} from '@angular/router';\nimport { Contact } from '@app/models/contact.model';\nimport { ContactService } from '@app/contact/contact.service';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { coerceNumberProperty, showFieldAnimation } from '@app/utils';\nimport { Role } from '@app/models/role.model';\n\ninterface DialogData {\n    statuses: SaleStatus[];\n    agents: IAgent[];\n    selectedCampaign: ICampaign;\n    sale: DailySale;\n    campaigns: ICampaign[];\n    user: User;\n}\n\ninterface ViewRemark extends Remark {\n    wordWrap?: boolean;\n}\n\n/**\n * This is the dialog used to create a sale as an admin from the daily-sale tracker\n */\n@Component({\n    selector: 'vs-add-daily-sale',\n    templateUrl: './add-sale.component.html',\n    styleUrls: ['./add-sale.component.scss'],\n    animations: showFieldAnimation\n})\nexport class AddSaleDialogComponent implements OnInit, AfterViewInit {\n    form: FormGroup;\n    statuses:SaleStatus[] = [];\n    agents:IAgent[] = [];\n    agents$:Observable<IAgent[]>;\n    selectedCampaign:ICampaign;\n    today:moment.Moment;\n    states:IState[] = States.$get();\n    existingSale:DailySale;\n    remarks:ViewRemark[] = [];\n    newRemarks:Remark[];\n    campaigns:ICampaign[] = [];\n    user:User;\n    hideTooltip = false;\n    showAddRemarkInput = false;\n    newRemarkInputValue: FormControl;\n    submitted: boolean;\n    remarkControl: FormGroup;\n    isExistingSale: boolean;\n    showEditContactForm = false;\n    contacts:Contact[];\n    contacts$:Observable<Contact[]>;\n    showNewContactFields = false;\n    showSetContactUI = false;\n    showBusinessNameField = false;\n\n    /** internal use only, keeps track of all available utilities */\n    private _utilities:Utility[];\n    utilities:BehaviorSubject<Utility[]> = new BehaviorSubject<Utility[]>(null);\n    @ViewChild(MatAutocomplete, { static: true }) agentAutocomplete:MatAutocomplete;\n\n    constructor(\n        public ref: MatDialogRef<AddSaleDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\n        private fb: FormBuilder,\n        private campaignService: CampaignService,\n        private router: Router,\n        private contactService:ContactService,\n        private _cd:ChangeDetectorRef\n    ) {}\n\n    ngOnInit() {\n        this.newRemarks = [];\n        this.today = moment();\n        this.existingSale = this.data.sale || {} as DailySale;\n        this.isExistingSale = this.data.sale != null;\n        this.remarks = this.data.sale != null ? this.data.sale.remarks : [];\n        this.sortRemarks();\n        this.statuses = this.data.statuses.filter(s => s.isActive);\n        this.agents = this.data.agents.filter(a => a.isActive);\n        this.selectedCampaign = this.data.selectedCampaign;\n        this.user = this.data.user;\n\n        this.contactService.getContactsByClient(this.user.sessionUser.sessionClient)\n            .subscribe(contacts => {\n                this.contacts = contacts;\n\n                this._setObservables();\n            });\n\n        if (this._checkForSelfEntryUser()) {\n            this.agents = this.agents.filter(a => a.userId == this.user.id);\n        }\n\n        if (this.isExistingSale && this.data.campaigns == null) {\n            this.campaignService.getCampaigns(this.user.sessionUser.sessionClient, false).then(results => {\n\n                if (this._checkForSelfEntryUser()) {\n                    this.campaigns = results.filter(r => this.agents[0].salesPairings.filter(sp => sp.campaignId == r.campaignId));\n                } else {\n                    this.campaigns = results;\n                }\n\n            });\n        } else {\n            if (this._checkForSelfEntryUser()) {\n                this.campaigns = this.data.campaigns.filter(c => this.agents[0].salesPairings.find(sp => sp.campaignId == c.campaignId));\n            } else {\n                this.campaigns = this.data.campaigns;\n            }\n        }\n\n        // remove \"all campaigns\" option, so that the user has to be pick a valid campaign\n        this.campaigns = this.campaigns.filter(c => c.campaignId != 0);\n\n        this.createForm();\n    }\n\n    private _checkForSelfEntryUser():boolean {\n        return this.user.role.role < Role.companyAdmin && this.user.role.isSalesAdmin;\n    }\n\n    onNoClick(): void {\n        this.ref.close();\n    }\n    \n    ngAfterViewInit() {\n        const doNotEmit = { emitEvent: false };\n\n        /** watch for form changes to campaign id and update utility dropdown options accordingly */\n        this.form.controls.campaign.valueChanges.subscribe(val => this._updateUtilities(val));\n\n        this.form.controls.paidDate.valueChanges.subscribe(val =>\n            this.form.patchValue({ paidStatus: val == null \n                ? PaidStatusType.unpaid.toString() : PaidStatusType.paid.toString() }, doNotEmit));\n\n        this.form.controls.repaidDate.valueChanges.subscribe(val => \n            this.form.patchValue({ paidStatus: val == null \n                ? PaidStatusType.unpaid.toString() : PaidStatusType.repaid.toString() }, doNotEmit));\n\n        this.form.controls.chargeDate.valueChanges.subscribe(val =>\n            this.form.patchValue({ paidStatus: val == null \n                ? PaidStatusType.unpaid.toString() : PaidStatusType.chargeback.toString() }, doNotEmit));\n\n        this.form.controls.paidStatus.valueChanges.subscribe((value:PaidStatusType) => {\n            switch (coerceNumberProperty(value)) {\n                case PaidStatusType.paid:\n                    this.form.patchValue({ paidDate: moment() });\n                    break;\n                case PaidStatusType.repaid:\n                    this.form.patchValue({ repaidDate: moment() }, doNotEmit);\n                    break;\n                case PaidStatusType.chargeback:\n                    this.form.patchValue({ chargeDate: moment() }, doNotEmit);\n                    break;\n                case PaidStatusType.unpaid:\n                default:\n                    this.form.patchValue({ paidDate: '', chargeDate: '', repaidDate: '' }, doNotEmit);\n                    break;    \n            }\n        });\n\n        if (this._checkForSelfEntryUser()) {\n            this.selectedCampaign = this.campaigns[0];\n            this.form.get('campaign').setValue(this.campaigns[0].campaignId);\n            this.form.get('agent').setValue(this.agents[0]);\n        }\n\n        this._cd.detectChanges();\n    }\n\n    private _updateUtilities(campaignId:number):void {\n        const campaign = this.campaigns.find(c => c.campaignId == campaignId);\n        const filteredUtils = campaign.utilities;\n\n        if(!filteredUtils.length) {\n            this.form.patchValue({ utilityId: null });\n            this.form.controls.utilityId.reset();\n        }\n\n        this.utilities.next(filteredUtils);\n    }\n\n    private _setObservables() {\n        this.agents$ = of(this.agents);\n        this.contacts$ = of(this.contacts);\n    }\n\n    _filterAgents(event):void {\n        const filterValue = event.target.value.toLowerCase();\n        const filtered = this.agents.filter(agent => {\n            if(agent.firstName.toLowerCase().indexOf(filterValue) === 0)\n                return true;\n            if(agent.lastName.toLowerCase().indexOf(filterValue) === 0)\n                return true;\n            return false;\n        });\n        this.agents$ = of(filtered);\n    }\n\n    navigateToUtilitySetup() {\n        this.router.navigate(['/campaigns', this.form.get('campaign').value]);\n    }\n\n    saveDialog(): void {\n        this.submitted = true;\n        \n        /**\n         * Check to see if the user selected and existing contact or if they used the \"new contact\"\n         * form to create a new contact and then revalidate the sale form.\n         */\n        if (this.form.get('existingContact').value.contactId != null && this.form.get('existingContact').value.contactId > 0) {\n            delete this.form.controls['contact'];\n        } else {\n            delete this.form.controls['existingContact'];\n        }\n\n        this.form.updateValueAndValidity();\n        if (this.form.invalid) return;\n\n        const dto = this.prepareModel();\n        this.ref.close(dto);\n    }\n\n    validateContactInput(event:any) {\n        const input = event.target.value.toLowerCase();\n        let exists = false;\n        const filtered = this.contacts.filter(c => {\n            if(c.firstName.toLowerCase().indexOf(input) === 0 || c.lastName.toLowerCase().indexOf(input) === 0) {\n                exists = (!exists) ? true : exists;\n                return true;\n            }\n            return false;\n        });\n        this.contacts$ = of(filtered);\n    }\n\n    validateAgentInput(event) {\n        const input = event.target.value.trim().toLowerCase();\n        let exists = false;\n        this.agents.forEach(a => {\n            if (a.firstName.includes(input))\n                return exists = true;\n            if (a.lastName.includes(input))\n                return exists = true;\n        });\n        if (!exists) this.form.get('agent').setErrors({ nonExistent: true });\n    }\n\n    showNewContactForm():void {\n        if (this.form.get('contact').dirty || this.form.get('contact').touched) {\n            this.resetContactForm('contact');\n            this.form.patchValue({\n                contact: {\n                    contactType: 1\n                }\n            }, { emitEvent: false });\n        }\n        \n        this.showNewContactFields = !this.showNewContactFields;\n    }\n\n    setNewContact():void {\n        this.setControlsTouched(this.form.get('contact') as FormGroup);\n        if (this.form.get('contact').invalid) return;\n\n        this.showNewContactFields = false;\n        this.showSetContactUI = true;\n    }\n\n    unsetNewContact(formGroupName:string):void {\n        this.resetContactForm(formGroupName);\n        this.showNewContactFields = false;\n        this.showSetContactUI = false;\n    }\n\n    private resetContactForm(formGroupName:string):void {\n        (<FormGroup>this.form.controls[formGroupName]).patchValue({\n            firstName: '',\n            lastName: '',\n            prefix: '',\n            ssn: '',\n            dob: '',\n            street: '',\n            street2: '',\n            city: '',\n            state: '',\n            zip: '',\n            phone: '',\n            email: '',\n            fax: ''\n        });\n        this.form.get(formGroupName).reset();\n    }\n\n    private setControlsTouched(group:FormGroup) {\n        for(var c in group.controls) {\n            group.controls[c].markAsTouched();\n            if(this.hasProperty(group.controls[c], 'controls')) {\n                this.setControlsTouched(group.controls[c]['controls']);\n            }\n        }\n    }\n\n    private hasProperty(obj, prop):boolean {\n        var proto = obj.__proto__ || obj.constructor.prototype;\n        return (prop in obj) &&\n            (!(prop in proto) || proto[prop] !== obj[prop]);\n    }\n\n    navigateToSaleDetail() {\n        this.router.navigate(['/new-sale-contact']);\n        this.ref.close();\n    }\n\n    getFormControlValidity(field: string): boolean {\n        return this.form.get(field).invalid && (this.form.get(field).touched || this.form.pending);\n    }\n\n    getRemarkAgent(id: number): IAgent {\n        return _.find(this.agents, {agentId: id}) || ({} as IAgent);\n    }\n\n    addRemark(): void {\n        this.remarkControl = this.fb.group({\n            remarkId: this.fb.control(''),\n            description: this.fb.control('', [Validators.required])\n        });\n        (<FormArray>this.form.get('remarks')).push(this.remarkControl);\n        this.showAddRemarkInput = true;\n    }\n\n    getRemarkFormControl(): FormControl {\n        return this.remarkControl.get('description') as FormControl;\n    }\n\n    saveNewRemark(): void {\n        const dto: Remark = {\n            remarkId: this.remarkControl.value.remarkId,\n            dailySaleId: this.existingSale.dailySaleId,\n            description: this.remarkControl.value.description,\n            modifiedBy: this.user.id,\n            createdAt: moment(),\n            updatedAt: moment(),\n            user: this.user\n        };\n        this.remarks.push(dto);\n        this.newRemarks.push(dto);\n        this.showAddRemarkInput = false;\n        this.sortRemarks();\n    }\n\n    cancelNewRemark(): void {\n        this.showAddRemarkInput = false;\n\n        let i = 0;\n        while((<FormArray>this.form.controls.remarks).controls.length) {\n            (<FormArray>this.form.controls.remarks).removeAt(i);\n            i++;\n        }\n        this.form.controls.remarks.reset();\n    }\n\n    displayFn(contact:Contact):string {\n        return typeof contact === 'object' && contact != null\n            ? `${contact.firstName} ${contact.lastName}`\n            : '';\n    }\n\n    displayAgentFn(agent:IAgent):string {\n        return typeof agent === 'object' && agent != null\n            ? `${agent.firstName} ${agent.lastName}`\n            : '';\n    }\n\n    handleContactTypeChange(event:MatButtonToggleChange):void {\n        if (event.value == ContactType.business) {\n            this.form.get('contact.contactType').setValue(2, { emitEvent: false });\n            this.form.get('contact.businessName').setValidators([Validators.required]);\n            this.showBusinessNameField = true;\n        } else {\n            this.form.get('contact.contactType').setValue(1, { emitEvent: false });\n            this.form.get('contact.businessName').setValidators(null);\n            this.showBusinessNameField = false;\n        }\n\n        this.form.get('contact.businessName').reset();\n    }\n\n    private contactValidatorFn():ValidatorFn {\n        return (control:AbstractControl): {[key:string]:any} | null => {\n            const invalid = control.value == null && this.form.get('contact').invalid;\n            return invalid ? {'required': { value: control.value } } : null;\n        }\n    }\n\n    private createForm(): void {\n        let contactType:any = this.existingSale && this.existingSale.contact\n            && this.existingSale.contact.contactType\n                ? this.existingSale.contact.contactType.toString()\n                : ContactType.residential.toString();\n\n        contactType = contactType || ContactType.residential;\n\n        this.form = this.fb.group({\n            saleDate: this.fb.control(this.existingSale.saleDate || this.today, [Validators.required]),\n            agent: this.fb.control(this.agents.find(a => a.agentId == this.existingSale.agentId), [Validators.required]),\n            campaign: this.fb.control({ value: this.selectedCampaign.campaignId || '', \n                disabled: this.isExistingSale}, [Validators.required]),\n            utilityId: this.fb.control(this.existingSale.utilityId || '', [Validators.required]),\n            account: this.fb.control(this.existingSale.podAccount || '', [Validators.required]),\n            status: this.fb.control(this.existingSale.status || '', [Validators.required]),\n            paidStatus: this.fb.control(this.formatPaidStatus() || '', [Validators.required]),\n            paidDate: this.fb.control(this.existingSale.paidDate || ''),\n            chargeDate: this.fb.control(this.existingSale.chargeDate || ''),\n            repaidDate: this.fb.control(this.existingSale.repaidDate || ''),\n            remarks: this.createRemarksFormArray(),\n            existingContact: this.fb.control(this.existingSale.contact || '', [this.contactValidatorFn]),\n            contact: this.fb.group({\n                contactId: this.fb.control(''),\n                clientId: this.fb.control(''),\n                contactType: this.fb.control(contactType),\n                businessName: this.fb.control(''),\n                firstName: this.fb.control('', [Validators.required]),\n                lastName: this.fb.control('', [Validators.required]),\n                middleName: this.fb.control(''),\n                prefix: this.fb.control(''),\n                suffix: this.fb.control(''),\n                ssn: this.fb.control(''),\n                dob: this.fb.control(''),\n                street: this.fb.control('', [Validators.required]),\n                street2: this.fb.control(''),\n                city: this.fb.control('', [Validators.required]),\n                state: this.fb.control('', [Validators.required]),\n                zip: this.fb.control('', [Validators.required]),\n                phone: this.fb.control('', [Validators.required, Validators.pattern('[0-9]+')]),\n                email: this.fb.control(''),\n                fax: this.fb.control('')\n            })\n        });\n\n        const campaignId = this.form.get('campaign').value;\n        if(campaignId > 0) {\n            this._updateUtilities(campaignId);\n        }\n    }\n\n    private createRemarksFormArray():FormArray {\n        let result = this.fb.array([]);\n        this.remarks.forEach(r => {\n            result.push(\n                this.fb.group({\n                    remarkId: this.fb.control(r.remarkId),\n                    description: this.fb.control(r.description || '', [Validators.required])\n                })\n            );\n        });\n        return result;\n    }\n\n    private prepareModel(): DailySale {\n        const contact = typeof this.form.value.existingContact === 'object'\n            ? this.form.value.existingContact\n            : {\n                contactId: this.form.value.contactId,\n                clientId: this.user.sessionUser.sessionClient,\n                contactType: this.form.value.contact.contactType,\n                businessName: this.form.value.contact.businessName,\n                firstName: this.form.value.contact.firstName,\n                lastName: this.form.value.contact.lastName,\n                middleName: this.form.value.contact.middleName,\n                prefix: this.form.value.contact.prefix,\n                suffix: this.form.value.contact.suffix,\n                ssn: this.form.value.contact.ssn,\n                dob: this.form.value.contact.dob,\n                street: this.form.value.contact.street,\n                street2: this.form.value.contact.street2,\n                city: this.form.value.contact.city,\n                state: this.form.value.contact.state,\n                zip: this.form.value.contact.zip,\n                phone: this.form.value.contact.phone,\n                email: this.form.value.contact.email,\n                fax: this.form.value.contact.fax\n            };\n        \n        return {\n            dailySaleId: this.existingSale.dailySaleId || null,\n            agentId: this.form.value.agent.agentId,\n            campaignId: this.form.value.campaign || this.form.get('campaign').value,\n            utilityId: this.form.value.utilityId,\n            clientId: this.user.sessionUser.sessionClient,\n            status: this.form.value.status,\n            paidStatus: this.form.value.paidStatus,\n            paidDate: this.form.value.paidDate,\n            chargeDate: this.form.value.chargeDate,\n            repaidDate: this.form.value.repaidDate,\n            saleDate: this.form.value.saleDate,\n            podAccount: this.form.value.account,\n            remarks: this.newRemarks,\n            contact: contact\n        };\n    }\n\n    private formatPaidStatus(): string {\n        return this.existingSale.paidStatus != null ? this.existingSale.paidStatus.toString() : null;\n    }\n\n    private setActivityDateProperty(formPaidStatus: PaidStatusType, modelField: string): Date | string | Moment {\n        let actMo = moment(this.form.value.activityDate);\n        if (modelField == 'paidDate' && formPaidStatus == PaidStatusType.paid && actMo.isValid()) {\n            return actMo.format('YYYY-MM-DD');\n        } else if (modelField == 'chargeDate' && formPaidStatus == PaidStatusType.chargeback && actMo.isValid()) {\n            return actMo.format('YYYY-MM-DD');\n        } else if (modelField == 'repaidDate' && formPaidStatus == PaidStatusType.repaid && actMo.isValid()) {\n            return actMo.format('YYYY-MM-DD');\n        }\n        return this.existingSale[modelField] || null;\n    }\n\n    private sortRemarks(): Remark[] {\n        return _.orderBy(this.remarks, ['updatedAt'], ['desc']) as Remark[];\n    }\n}\n","\n<div mat-dialog-title class=\"d-flex justify-content-between\">\n    <h3>\n        {{ existingSale != null && existingSale.dailySaleId > 0 ? 'Edit Sale' : 'Add Sale' }}\n    </h3>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<mat-dialog-content *ngIf=\"!showEditContactForm\">\n    <p class=\"text-muted\">\n        All fields denoted with * are required.\n    </p>\n    <form [formGroup]=\"form\" class=\"add-daily-sale-form\">\n\n        <!-- CAMPAIGN ROW -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <!-- <input matInput placeholder=\"Campaign\" [value]=\"selectedCampaign.name\" /> -->\n                    <mat-select placeholder=\"Campaign\" formControlName=\"campaign\" required>\n                        <mat-option *ngFor=\"let c of campaigns\" [value]=\"c.campaignId\">\n                            {{c.name}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('campaign').hasError('required') && (form.get('campaign').touched || submitted)\">\n                        Please select a campaign\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <ng-container *ngIf=\"form.get('campaign').value > 0\">\n                    <ng-container *ngLet=\"utilities|async as utils\">\n                        <mat-form-field *ngIf=\"utils != null && utils.length; else noUtilitiesMsg\" class=\"w-100\" @showField>\n                            <mat-select placeholder=\"Utility\" formControlName=\"utilityId\" required>\n                                <mat-option *ngFor=\"let u of utils\" [value]=\"u?.utilityId\">\n                                    {{ u.utilityName }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"form.get('utilityId').hasError('required') && (form.get('utilityId').touched || submitted)\">\n                                Please select a utility\n                            </mat-error>\n                        </mat-form-field>\n                        <ng-template #noUtilitiesMsg>\n                            <p *ngIf=\"user.role.role > 5; else empRoleType\">\n                                Uh oh! It looks like you're missing utilities. This is required before you can save sales. Please\n                                head over \n                                <button class=\"btn btn-link\" (click)=\"navigateToUtilitySetup()\">here</button>\n                                to add your \n                                first utility for this campaign now.\n                            </p>\n                            <ng-template #empRoleType>\n                                <p>\n                                    It looks like your organization has not fully setup their campaigns. Please let your direct \n                                    supervisor know, so they can help you resolve this issue before you start completing sales \n                                    entries.\n                                </p>\n                            </ng-template>\n                        </ng-template>\n                    </ng-container>\n                </ng-container>\n            </div>\n        </div>\n\n        <!-- AGENT AND SALE DATE -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Agent\" formControlName=\"agent\" [matAutocomplete]=\"agentAc\" \n                        (keyup)=\"_filterAgents($event)\" required />\n                    <mat-autocomplete #agentAc=\"matAutocomplete\" [displayWith]=\"displayAgentFn\" autoActiveFirstOption>\n                        <mat-option *ngFor=\"let a of agents$|async\" [value]=\"a\">\n                            <mat-icon inline=\"true\">person</mat-icon>\n                            <span>{{a.firstName}} {{a.lastName}}</span>\n                        </mat-option>\n                    </mat-autocomplete>\n                    <mat-error *ngIf=\"(form.get('agent').hasError('required') || form.get('agent').hasError('nonExistent')) && (form.get('agent').touched || submitted)\">\n                        Please select an agent\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"saleDatePicker\" placeholder=\"Sale Date\" formControlName=\"saleDate\"\n                        required />\n                    <mat-datepicker-toggle matSuffix [for]=\"saleDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #saleDatePicker></mat-datepicker>\n                    <mat-error *ngIf=\"form.get('saleDate').hasError('required') && (form.get('saleDate').touched || submitted)\">\n                        Please select a sale date\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <input matInput placeholder=\"POD/Account\" formControlName=\"account\" required />\n                    <mat-error *ngIf=\"form.get('account').hasError('required') && (form.get('account').touched || submitted)\">\n                        Please enter a POD or Account No\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <mat-select placeholder=\"Sale Status\" formControlName=\"status\" required>\n                        <mat-option *ngFor=\"let s of statuses\" [value]=\"s.saleStatusId\">\n                            {{s.name}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('status').hasError('required') && (form.get('status').touched || submitted)\">\n                        Please select a status\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <mat-select placeholder=\"Paid Status\" formControlName=\"paidStatus\" required>\n                        <mat-option value=\"0\">Unpaid</mat-option>\n                        <mat-option value=\"1\">Paid</mat-option>\n                        <mat-option value=\"2\">Chargeback</mat-option>\n                        <mat-option value=\"3\">Repaid</mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('paidStatus').hasError('required') && (form.get('paidStatus').touched || submitted)\">\n                        Please select paid status\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"paidDatePicker\" formControlName=\"paidDate\" placeholder=\"Paid Date\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"paidDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #paidDatePicker></mat-datepicker>\n                </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"chargebackDatePicker\" formControlName=\"chargeDate\" placeholder=\"Chargeback Date\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"chargebackDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #chargebackDatePicker></mat-datepicker>\n                </mat-form-field>\n            </div>\n            <div class=\"col-4\">\n                <mat-form-field>\n                    <input matInput [matDatepicker]=\"repaidDatePicker\" formControlName=\"repaidDate\" placeholder=\"Repaid Date\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"repaidDatePicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #repaidDatePicker></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row my-4\" *ngIf=\"!showNewContactFields && !showSetContactUI\">\n            <div class=\"col-md-5\">\n                <!-- <span (click)=\"navigateToSaleDetail()\">Click here</span> to add contact info. -->\n                <mat-form-field>\n                    <input matInput placeholder=\"Customer\" \n                        [matAutocomplete]=\"autocontact\" formControlName=\"existingContact\" \n                        (keyup)=\"validateContactInput($event)\" required />\n                    <mat-autocomplete #autocontact=\"matAutocomplete\" [displayWith]=\"displayFn\">\n                        <mat-option *ngFor=\"let c of contacts$|async\" [value]=\"c\">\n                            <mat-icon inline=\"true\">person</mat-icon>\n                            <span>{{c.firstName}} {{c.lastName}} </span>\n                            <small>{{c.street}} {{c.city}} {{c.state}}</small>\n                        </mat-option>\n                    </mat-autocomplete>\n                    <mat-error *ngIf=\"form.get('existingContact').hasError('required')\">\n                        Please select a contact or click the button to add a new one\n                    </mat-error>\n                </mat-form-field>\n                <ng-container *ngIf=\"showSetContactUI\">\n                    <div class=\"w-100\">\n                        <span class=\"font-weight-bold\">New Contact: </span>\n                        <span>{{form.get('contact').get('firstName').value}} </span>\n                        <span>{{form.get('contact').get('lastName').value}}</span>\n                        <button type=\"button\" mat-icon-button (click)=\"unsetNewContact()\">\n                            <mat-icon>clear</mat-icon>\n                        </button>\n                        <p class=\"text-muted\">\n                            This contact will be added when you save the sale. Please make sure you're not duplicating contacts.\n                        </p>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"col-md-3\">\n                <button type=\"button\" mat-button \n                    color=\"primary\" \n                    (click)=\"showNewContactForm()\"\n                    [disabled]=\"showNewContactFields || showSetContactUI\"\n                >\n                    <mat-icon inline=\"true\">add</mat-icon>\n                    <span>New Contact</span>\n                </button>\n            </div>\n        </div>\n\n        <ng-container *ngIf=\"showNewContactFields\">\n            <!-- CREATE NEW CONTACT FORM HERE & continue with rest of form -->\n            <hr />\n            <p class=\"font-weight-bold\">Create New Customer</p>\n            <div formGroupName=\"contact\" class=\"new-customer-form\">\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-button-toggle-group #group=\"matButtonToggleGroup\" value=\"1\" (change)=\"handleContactTypeChange($event)\">\n                            <mat-button-toggle value=\"1\">\n                                <mat-icon inline=\"true\">home</mat-icon> Residential\n                            </mat-button-toggle>\n                            <mat-button-toggle value=\"2\">\n                                <mat-icon inline=\"true\">domain</mat-icon> Business\n                            </mat-button-toggle>\n                        </mat-button-toggle-group>\n                    </div>\n                </div>\n                <div class=\"row\" *ngIf=\"showBusinessNameField\" @showField>\n                    <div class=\"col-md-9\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"Business Name\" formControlName=\"businessName\" required />\n                            <mat-error *ngIf=\"form.get('contact.businessName').hasError('required')\">\n                                Please enter a business name\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-1\">\n                        <mat-form-field class=\"w-100\">\n                            <mat-select placeholder=\"Prefix\" formControlName=\"prefix\">\n                                <mat-option value=\"\"></mat-option>\n                                <mat-option value=\"Dr\">Dr</mat-option>\n                                <mat-option value=\"Mr\">Mr</mat-option>\n                                <mat-option value=\"Mrs\">Mrs</mat-option>\n                                <mat-option value=\"Ms\">Ms</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstName\" required />\n                            <mat-error *ngIf=\"form.get('contact.firstName')?.hasError('required')\">\n                                Please enter a first name\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-5\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastName\" required />\n                            <mat-error *ngIf=\"form.get('contact.lastName')?.hasError('required')\">\n                                Please enter a last name\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput [matDatepicker]=\"dobPicker\" placeholder=\"Birthdate\" formControlName=\"dob\" />\n                            <mat-datepicker-toggle matSuffix [for]=\"dobPicker\"></mat-datepicker-toggle>\n                            <mat-datepicker #dobPicker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-7\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"Address\" formControlName=\"street\" required />\n                            <mat-error *ngIf=\"form.get('contact').get('street').hasError('required')\">\n                                Please enter a street address\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"Apt/Suite/Unit\" formControlName=\"street2\" />\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" #ssn placeholder=\"SSN\" formControlName=\"ssn\" maxlength=\"9\" />\n                            <mat-hint align=\"end\">{{ssn.value.length}} / 9</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-7\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"City\" formControlName=\"city\" required />\n                            <mat-error *ngIf=\"form.get('contact').get('city').hasError('required')\">\n                                Please enter a city\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field class=\"w-100\">\n                            <mat-select placeholder=\"State\" formControlName=\"state\" required>\n                                <mat-option *ngFor=\"let s of states\" [value]=\"s.abbreviation\">{{s.name}}</mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"form.get('contact').get('state').hasError('required')\">\n                                Please select a state\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-2\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" \n                                #postalCode\n                                placeholder=\"zip\" \n                                formControlName=\"zip\" \n                                maxlength=\"5\"\n                                required \n                            />\n                            <mat-hint>{{postalCode.value.length}} / 5</mat-hint>\n                            <mat-error *ngIf=\"form.get('contact').get('zip').hasError('required')\">\n                                Please enter a postal code\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" required />\n                            <mat-error *ngIf=\"form.get('contact').get('email').hasError('required')\">\n                                Please enter an email\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" \n                                placeholder=\"Phone\" \n                                formControlName=\"phone\" \n                                #phone\n                                maxlength=\"10\"\n                                required \n                            />\n                            <mat-hint>{{phone.value.length}} / 10</mat-hint>\n                            <mat-error *ngIf=\"form.get('contact').get('phone').hasError('required')\">\n                                Please enter a phone\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-3\">\n                        <mat-form-field class=\"w-100\">\n                            <input matInput type=\"text\" \n                                placeholder=\"Fax\" \n                                formControlName=\"fax\" \n                                #fax\n                                maxlength=\"10\"\n                            />\n                            <mat-hint>{{fax.value.length}} / 10</mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" mat-button (click)=\"unsetNewContact('existingContact')\">Cancel</button>\n            <!-- <button type=\"button\" mat-button color=\"primary\" (click)=\"setNewContact()\">\n                <mat-icon inline=\"true\">save</mat-icon>\n                <span>Save</span>\n            </button> -->\n            <hr />\n        </ng-container>\n\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <mat-list formArrayName=\"remarks\">\n                    <div class=\"d-flex justify-content-between\">\n                        <h4 class=\"m-0\">\n                            Activity\n                        </h4>\n                        <span *ngIf=\"remarks.length\">\n                            <button type=\"button\" mat-stroked-button color=\"primary\" (click)=\"addRemark()\">\n                                Add Remark\n                            </button>\n                        </span>\n                    </div>\n\n                    <mat-form-field *ngIf=\"showAddRemarkInput\">\n                        <textarea matInput placeholder=\"Enter Remark\" #remarkField [formControl]=\"getRemarkFormControl()\"></textarea>\n                        <button mat-button type=\"button\" matSuffix mat-icon-button (click)=\"saveNewRemark()\">\n                            <mat-icon inline=\"true\">save</mat-icon>\n                        </button>\n                        <button mat-button type=\"button\" matSuffix mat-icon-button (click)=\"cancelNewRemark()\">\n                            <mat-icon inline=\"true\">clear</mat-icon>\n                        </button>\n                    </mat-form-field>\n                    <mat-list-item *ngFor=\"let r of remarks; let i=index\" [formGroupName]=\"i\" [matTooltip]=\"r.description\">\n                        <mat-icon mat-list-icon>note</mat-icon>\n                        <h4 mat-line>{{r.user.firstName}} {{r.user.lastName}}</h4>\n                        <p mat-line>{{r.description}}</p>\n                        <p mat-line>{{r.updatedAt | date}}</p>\n                        <mat-divider></mat-divider>\n                    </mat-list-item>\n                    <mat-list-item *ngIf=\"remarks.length < 1 && !showAddRemarkInput\" class=\"clickable\" (click)=\"addRemark()\">\n                        <mat-icon mat-list-icon>note_add</mat-icon>\n                        <h4 mat-line>Add a Remark</h4>\n                    </mat-list-item>\n\n                </mat-list>\n\n            </div>\n        </div>\n\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions class=\"d-flex justify-content-end\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button (click)=\"saveDialog()\" color=\"primary\">Save</button>\n</mat-dialog-actions>\n","import { Component } from \"@angular/core\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\n\n\n@Component({\n  selector: 'delete-sale-dialog',\n  templateUrl: './delete-sale.component.html'\n})\nexport class DeleteSaleDialog {\n  constructor(private ref:MatDialogRef<DeleteSaleDialog>) {}\n\n  onNoClick():void {\n    this.ref.close();\n  }\n}\n","\n<h5>Delete this sale?</h5>\n<p>Deleting a sale cannot be undone.</p>\n\n<div class=\"row justify-content-between\">\n  <button mat-button (click)=\"onNoClick()\">No</button>\n  <button mat-button color=\"primary\" [mat-dialog-close]=\"true\">Delete</button>\n</div>\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n@Directive({\n    selector: 'chart-js-content, [chartJsContent], [chart-js-content]'\n})\nexport class ChartJsContent {\n    constructor(public _template: TemplateRef<any>) { }\n}","import { ChartJsContent } from './chart-js-content';\n\nimport {Component, OnInit, ViewChild, ViewContainerRef, ContentChild, Renderer2, AfterContentInit, TemplateRef} from '@angular/core';\nimport {Moment} from '../shared/moment-extensions';\n\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport {Observable, of, Subject} from 'rxjs';\nimport {User, IAgent, ICampaign, SaleStatus, DailySale, PaidStatusType} from '@app/models';\nimport {SessionService} from '@app/session.service';\nimport {AgentsService} from '@app/core/agents/agents.service';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectChange } from '@angular/material/select';\nimport {AgentAddSaleDialogComponent} from '@app/dashboard/dialogs/add-sale-dialog.component';\nimport {CampaignService} from '@app/campaigns/campaign.service';\nimport {ClientService} from '@app/client-information/client.service';\nimport {DailySaleTrackerService} from '@app/daily-sale-tracker/daily-sale-tracker.service';\nimport {Chart} from 'chart.js';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport { MessageService } from '@app/message.service';\nimport { PortalOutlet, TemplatePortal } from '@angular/cdk/portal';\nimport { CdkAccordionItem } from '@angular/cdk/accordion';\nimport { map } from 'rxjs/operators';\nimport { AgentService } from '@app/agent/agent.service';\n\ninterface DataStore {\n    user: User,\n    users:User[],\n    agents: IAgent[],\n    statuses: SaleStatus[],\n    sales: DailySale[],\n    campaigns: ICampaign[]\n}\n\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit, AfterContentInit {\n    selectedFilter:PaidStatusType | string = '-1';\n    roleType = {\n        systemAdmin: 7,\n        companyAdmin: 6,\n        humanResources: 5,\n        regManager: 4,\n        manager: 3,\n        supervisor: 2,\n        user: 1\n    };\n    user: Observable<User>;\n    startDate: Moment;\n    endDate: Moment;\n    selectedAgent: IAgent;\n    agents: Observable<IAgent[]>;\n    campaigns: Observable<ICampaign[]>;\n    store: DataStore = {} as DataStore;\n    sales$:Subject<DailySale[]> = new Subject<DailySale[]>();\n    sales: Observable<DailySale[]>;\n\n    messages: any[];\n    chartData:any;\n    @ViewChild('chart', { static: false }) chartRef:any;\n    @ViewChild('chartTemplate', { static: false }) private chartTemplate:TemplateRef<any>;\n    @ViewChild('chartContainer', { read: 'ViewContainerRef', static: false }) private vc:ViewContainerRef;\n    isMobileLayout: boolean;\n    portal:TemplatePortal;\n\n    constructor(\n        private session: SessionService,\n        private agentsService: AgentsService, /** we are going to deprecate this soon... 10/22/18 */\n        private dialog: MatDialog,\n        private campaignService: CampaignService,\n        private clientService: ClientService,\n        private dailySaleService: DailySaleTrackerService,\n        public breakpoints: BreakpointObserver,\n        private msg:MessageService,\n        private rend:Renderer2,\n        private agentService:AgentService\n    ) {\n        breakpoints.observe([\n            Breakpoints.HandsetLandscape, \n            Breakpoints.HandsetPortrait\n        ]).subscribe(result => {\n            this.isMobileLayout = result.matches;\n        });\n\n        this.sales = this.sales$.asObservable();\n    }\n\n    ngOnInit() {\n        // we must set the time to 0:00 in order to correctly do calculations, because momentjs \n        // will calculate and round the hours & minutes to the closest day otherwise. \n        const today = moment().hours(0).minutes(0).seconds(0);\n        this.startDate = today.clone().subtract(1, 'week');\n        this.endDate = today.clone().hours(11);\n\n        this.selectedAgent = {};\n        this.session.getUserItem().subscribe(u => {\n            this.store.user = u;\n            this.user = of(u);\n\n            if (u.role && u.role.role >= this.roleType.companyAdmin) {\n                this.agentsService.getAgentsByClient(u.sessionUser.sessionClient)\n                    .subscribe((users:User[]) => {\n                        this.store.users = users;\n                        this.store.agents = this.mapUserToAgent(users);\n                        this.agents = of(this.store.agents);\n                        this.selectedAgent = this.store.agents[0];\n                        \n                        this.loadSales();\n                    });\n            } else if (u.role.role == this.roleType.manager || u.role.role == this.roleType.supervisor) {\n\n                /** TODO: FIGURE OUT WHAT NEEDS TO HAPPEN HERE... HOW DO I GET JUST AGENTS FOR THIS USER */\n\n            } else {\n\n                if(this.store.user.agent == null) {\n                    this.agentService.getAgentByUser(this.store.user.sessionUser.sessionClient, this.store.user.id)\n                        .subscribe(agent => {\n                            this.selectedAgent = agent;\n                            \n                            /** After we've gotten a selected agent, let's load the sales */\n                            this.loadSales();\n                        });\n                } else {\n                    this.loadSales();\n                }\n\n            }\n\n        });\n\n        \n    }\n\n    /**\n     * This is our beef cake, work horse method right here that does all the heavy lifting.\n     * \n     * Make sure the user is set and selected agent is set before calling this. \n     */\n    private loadSales():void {\n        this.campaignService.getCampaignsByAgent(this.store.user.sessionUser.sessionClient, this.selectedAgent.agentId)\n            .subscribe(campaigns => {\n                this.store.campaigns = campaigns;\n                this.campaigns = of(campaigns);\n            });\n\n        this.dailySaleService.getDailySalesByAgent(\n            this.store.user.sessionUser.sessionClient,\n            this.selectedAgent.agentId,\n            this.startDate.toDateString(),\n            this.endDate.toDateString()\n        ).subscribe(sales => {\n            this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n            this.sales$.next(this.store.sales);\n\n            this.clientService.getSaleStatuses(this.store.user.sessionUser.sessionClient).subscribe(statuses => {\n                this.store.statuses = statuses;\n                this.createChart(sales);\n            });\n        })\n    }\n\n    ngAfterContentInit() {\n        let chart = this.rend.createElement('canvas');\n        chart.innerHTML = chart;\n\n        // this.portal = new TemplatePortal(this.chartRef.nativeElement, this.viewContainerRef, chart);\n    }\n\n    addChartElement() {\n        \n    }\n\n    mapUserToAgent(users:User[]):IAgent[] {\n        let result:IAgent[] = [];\n        for(let i = 0; i < users.length; i++) {\n            if(users[i].agent == null) continue;\n            result.push(users[i].agent);\n        }\n        return result;\n    }\n\n    getStatus(statusId: number): SaleStatus {\n        if (statusId == null) return {name: null, clientId: null, saleStatusId: null, isActive: null};\n        return (\n            _.find(this.store.statuses, {saleStatusId: statusId}) || {\n                name: null,\n                clientId: null,\n                saleStatusId: null,\n                isActive: null\n            }\n        );\n    }\n\n    getPaidStatus(paidStatusId: number): string {\n        if (paidStatusId == null) return null;\n        var result: string;\n        switch (paidStatusId) {\n            case PaidStatusType.paid:\n                result = 'Paid';\n                break;\n            case PaidStatusType.repaid:\n                result = 'Repaid';\n                break;\n            case PaidStatusType.chargeback:\n                result = 'Chargeback';\n                break;\n            case PaidStatusType.unpaid:\n            default:\n                result = 'Unpaid';\n                break;\n        }\n        return result;\n    }\n\n    isSalePaid(paidStatus: number): boolean {\n        if (paidStatus == null) return false;\n        return paidStatus == PaidStatusType.paid || paidStatus == PaidStatusType.repaid;\n    }\n\n    getBadgeColorFromPaidStatus(payStatus:PaidStatusType):string {\n        if(payStatus == PaidStatusType.unpaid) {\n            return 'badge-warning';\n        } else if(payStatus == PaidStatusType.paid) {\n            return 'badge-success';\n        } else if(payStatus == PaidStatusType.chargeback) {\n            return 'badge-danger';\n        } else if(payStatus == PaidStatusType.repaid) {\n            return 'badge-success';\n        }\n    }\n\n    private createChart(sales: DailySale[]): void {\n        let chartDate = this.startDate.clone();\n        let labels = [],\n            suggestedMax: number = 0;\n\n        const numDays = this.calculateDuration();\n\n        for (let i = 0; i <= numDays; i++) {\n            let checkDate = chartDate.clone().add(i, 'days');\n            labels.push(checkDate.format('l'));\n\n            let salesCount: number = _.filter(sales, (s: DailySale) => {\n                return moment(s.saleDate).isSame(checkDate, 'day');\n            }).length;\n            if (salesCount > suggestedMax) suggestedMax = salesCount + 3;\n        }\n\n        this.createNewChart(suggestedMax, labels, sales);\n    }\n\n    private createNewChart(suggestedMax: number, labels: string[], sales: DailySale[]): void {\n        this.chartData = new Chart(this.chartRef.nativeElement, {\n            type: 'bar',\n            data: {\n                labels: labels,\n                datasets: this.createSaleDataArray(sales)\n            },\n            options: {\n                scales: {\n                    xAxes: [{stacked: true}],\n                    yAxes: [\n                        {\n                            stacked: true,\n                            beginAtZero: true,\n                            ticks: {\n                                suggestedMax: suggestedMax,\n                                min: 0,\n                                stepSize: 1\n                            }\n                        }\n                    ]\n                }\n            }\n        });\n    }\n\n    private updateAngularChartView() {\n        this.vc.detach();\n        this.vc.insert(this.chartTemplate.createEmbeddedView(null));\n    }\n\n    private updateChartDatasets(sales: DailySale[]): void {\n        // TODO: Chart.js Angular bug where the dom element doesn't actually get removed and unable to properly update \n        // the chart.\n        this.chartData.clear();\n        this.chartData.destroy();\n\n        const chartDate = this.startDate.clone();\n        let labels = [];\n        let suggestedMax = 0;\n\n        const numDays = this.calculateDuration();\n\n        for (let i = 0; i <= numDays; i++) {\n            let checkDate = chartDate.clone().add(i, 'days');\n            labels.push(checkDate.format('l'));\n\n            let salesCount: number = _.filter(sales, (s: DailySale) => {\n                return moment(s.saleDate).isSame(checkDate, 'day');\n            }).length;\n            if (salesCount > suggestedMax) suggestedMax = salesCount + 3;\n        }\n\n        this.createNewChart(suggestedMax, labels, sales);\n    }\n\n    private createSaleDataArray(sales: DailySale[]): any[] {\n        let chartDate = this.startDate.clone();\n        let salesData = [];\n\n        this.store.statuses.forEach((s: SaleStatus) => {\n            let columnData = {\n                label: s.name,\n                data: [],\n                backgroundColor: this.randomColor()\n            };\n\n            const numDays = this.calculateDuration();\n\n            // loop through seven days\n            for (let i = 0; i <= numDays; i++) {\n                let checkDate = chartDate.clone().add(i, 'days');\n                let filteredSales = _.filter(sales, (sale: DailySale) => {\n                    return sale.status == s.saleStatusId && moment(sale.saleDate).isSame(checkDate, 'day');\n                });\n                columnData.data.push({\n                    x: checkDate.format('l'),\n                    y: filteredSales.length || 0\n                });\n            }\n\n            salesData.push(columnData);\n        });\n\n        return salesData;\n    }\n\n    /**\n     * Custom method to find the duration including the start/end dates to display on the chart.\n     * \n     */\n    private calculateDuration():number {\n        let start:Moment = this.startDate.clone();\n        let end:Moment = this.endDate.clone();\n        return end.diff(start, 'days');\n    }\n\n    private randomColor(): string {\n        const r = Math.floor(Math.random() * 255);\n        const g = Math.floor(Math.random() * 255);\n        const b = Math.floor(Math.random() * 255);\n        return `rgba(${r}, ${g}, ${b}, 0.5)`;\n    }\n\n    updateDashboard(event: MatDatepickerInputEvent<Moment> = null, isStart: boolean = true): void {\n        \n        if(event != null && event.value != null) {\n            if (isStart) {\n                this.startDate = moment(event.value).hours(0).minutes(0).seconds(0);\n            } else {\n                this.endDate = moment(event.value).hours(11).minutes(0).seconds(0);\n            }\n        }\n\n        const startDate:string = (<Moment>this.startDate.clone()).toDateString();\n        const endDate:string = (<Moment>this.endDate.clone()).toDateString()\n\n        this.dailySaleService\n            .getDailySalesByAgent(\n                this.store.user.id,\n                this.selectedAgent.agentId,\n                startDate,\n                endDate\n            )\n            .subscribe(sales => {\n                this.store.sales = _.orderBy(sales, ['saleDate'], ['desc']);\n                this.handleFilter();\n            });\n    }\n\n    handleAgentChange(event: MatSelectChange): void {\n        this.selectedAgent = _.find(this.store.agents, {agentId: event.value}) as IAgent;\n        this.updateDashboard();\n    }\n\n    showAddSaleDialog(): void {\n        this.dialog\n            .open(AgentAddSaleDialogComponent, {\n                width: '600px',\n                data: {\n                    user: this.store.user,\n                    agent: this.selectedAgent,\n                    campaigns: this.store.campaigns,\n                    statuses: this.store.statuses\n                }\n            })\n            .afterClosed()\n            .subscribe((result:DailySale) => {\n                if (result == null) return;\n\n                const newSale:boolean = result.dailySaleId == null || result.dailySaleId < 1;\n                \n                this.dailySaleService\n                    .createDailySale(this.store.user.sessionUser.sessionClient, result)\n                    .subscribe(sale => {\n                        let existing = _.findIndex(this.store.sales, {dailySaleId: sale.dailySaleId});\n\n                        if (newSale) {\n                            /** If the array in the store isn't instaniated */\n                            if(this.store.sales == null) this.store.sales = [];\n\n                            this.store.sales.push(sale);\n                            this.store.sales = _.orderBy(this.store.sales, ['saleDate'], ['desc']);\n                        } else {\n                            this.store.sales[existing] = sale;\n                        }\n\n                        this.handleFilter();\n                    });\n            });\n    }\n\n    handleFilter(event:MatButtonToggleChange = null) {\n        if(event != null) this.selectedFilter = event.value;\n\n        if(this.selectedFilter == -1) {\n            this.updateChartDatasets(this.store.sales);\n            this.sales$.next(this.store.sales);\n        } else {\n            let filteredSales = _.filter(this.store.sales, (sale:DailySale) => {\n                return sale.paidStatus == this.selectedFilter;\n            });\n\n            this.updateChartDatasets(filteredSales);\n            this.sales$.next(this.store.sales);\n        }\n    }\n\n}\n\n\n","<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content *ngIf=\"!isMobileLayout\">\n                    <div class=\"d-flex justify-content-between\">\n                        <h3 class=\"m-0\">Sales Analysis</h3>\n                        <div class=\"d-flex\">\n                            <ng-container *ngIf=\"(user|async).role.role >= roleType.companyAdmin && !isMobileLayout\">\n                                <mat-form-field class=\"mr-2\">\n                                    <mat-label>Viewing:</mat-label>\n                                    <mat-select [value]=\"selectedAgent.agentId\" (selectionChange)=\"handleAgentChange($event)\">\n                                        <mat-option *ngFor=\"let a of (agents|async)\" [value]=\"a.agentId\">\n                                            {{a.firstName}} {{a.lastName}}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </ng-container>\n                            <button mat-button type=\"button\" color=\"primary\" (click)=\"showAddSaleDialog()\">\n                                <mat-icon inline=\"true\">add_circle</mat-icon> SALE\n                            </button>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-content [class.justify-content-between]=\"isMobileLayout\" *ngIf=\"isMobileLayout\">\n                    <ng-container *ngIf=\"(user|async).role.role >= roleType.companyAdmin\">\n                        <mat-form-field>\n                            <mat-select [value]=\"selectedAgent.agentId\" (selectionChange)=\"handleAgentChange($event)\" placeholder=\"Currently Viewing:\">\n                                <mat-option *ngFor=\"let a of (agents|async)\" [value]=\"a.agentId\">\n                                    {{a.firstName}} {{a.lastName}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </ng-container>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-md-8\">\n            <mat-card>\n                <mat-card-content>\n                    <canvas #chart>{{chartData}}</canvas>\n                </mat-card-content>\n                <mat-card-actions>\n                    <div class=\"row px-4\">\n                        <div class=\"col-md-6\" [ngClass]=\"{'d-flex justify-content-center': isMobileLayout}\">\n                            <mat-form-field>\n                                <input matInput [matDatepicker]=\"startDatepicker\" placeholder=\"Start Date\" [value]=\"startDate\"\n                                    (dateInput)=\"updateDashboard($event)\" [max]=\"endDate\" />\n                                <mat-datepicker-toggle matSuffix [for]=\"startDatepicker\"></mat-datepicker-toggle>\n                                <mat-datepicker #startDatepicker></mat-datepicker>\n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"col-md-6\" [ngClass]=\"{'d-flex justify-content-center': isMobileLayout}\">\n                            <mat-form-field [class.float-right]=\"!isMobileLayout\">\n                                <input matInput [matDatepicker]=\"endDatepicker\" placeholder=\"End Date\" [value]=\"endDate\"\n                                    (dateInput)=\"updateDashboard($event, false)\" [min]=\"startDate\" />\n                                <mat-datepicker-toggle matSuffix [for]=\"endDatepicker\"></mat-datepicker-toggle>\n                                <mat-datepicker #endDatepicker></mat-datepicker>\n                            </mat-form-field>\n                        </div>\n\n                    </div>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n        <div class=\"col-md-4 sale-stream-container\">\n            <h5 class=\"mb-0\">Filter: </h5>\n            <div class=\"card mb-2\">\n                <mat-button-toggle-group #filterBy=\"matButtonToggleGroup\" (change)=\"handleFilter($event)\" [value]=\"selectedFilter\">\n                    <mat-button-toggle value=\"-1\">\n                        None\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"0\">\n                        Unpaid\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"1\">\n                        Paid\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"2\">\n                        Chargeback\n                    </mat-button-toggle>\n                    <mat-button-toggle value=\"3\">\n                        Repaid\n                    </mat-button-toggle>\n                </mat-button-toggle-group>\n            </div>\n            <div [class.sale-stream]=\"!isMobileLayout\">\n                <div class=\"card my-1\" *ngFor=\"let s of (sales|async)\">\n                    <div class=\"d-flex m-2\">\n                        <div class=\"mx-2\">\n                            <div><mat-icon>person</mat-icon></div>\n                            <div *ngIf=\"isSalePaid(s.paidStatus)\" class=\"text-success\"><mat-icon>monetization_on</mat-icon></div>\n                        </div>\n                        <div class=\"flex-grow-1\">\n                            <h5 class=\"card-title\">{{s.firstName}} {{s.lastName}}</h5>\n                            <div class=\"card-text\">\n                                <div>\n                                    <span class=\"font-weight-bold\">Status:</span><br />\n                                    {{getStatus(s.status).name}}\n                                </div>\n                                <div *ngIf=\"isSalePaid(s.paidStatus)\" class=\"text-muted font-italic\">\n                                    <span>Paid:</span>\n                                    <ng-container *ngIf=\"s.paidDate != null; else noPaidDate\">{{s.paidDate | date:'shortDate'}}</ng-container>\n                                    <ng-template #noPaidDate>[No Paid Date]</ng-template>\n                                </div>\n                                <address class=\"mt-3\">\n                                    {{s.street}} {{s.street2}} <br />\n                                    {{s.city}}, {{s.state}} {{s.zip}}\n                                </address>\n                            </div>\n                        </div>\n                        <div>\n                            <span class=\"badge badge-pill\" [ngClass]=\"getBadgeColorFromPaidStatus(s.paidStatus)\">{{getPaidStatus(s.paidStatus)}}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { IAgent, ICampaign, DailySale, User, SaleStatus, PaidStatusType } from '@app/models';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport * as _ from 'lodash';\nimport { IState, States } from '@app/shared/models/state.model';\nimport { DailySaleTrackerService } from '@app/daily-sale-tracker/daily-sale-tracker.service';\n\ninterface DialogData {\n    user:User,\n    agent:IAgent,\n    campaigns:ICampaign[],\n    statuses:SaleStatus[]\n}\n\n@Component({\n    selector: 'vs-agent-sale-dialog',\n    templateUrl: './add-sale-dialog.component.html',\n    styleUrls: ['./add-sale-dialog.component.scss']\n})\nexport class AgentAddSaleDialogComponent implements OnInit {\n    user:User;\n    form:FormGroup;\n    agent:IAgent;\n    campaigns:ICampaign[];\n    statuses:SaleStatus[];\n    submitted:boolean;\n    states:IState[] = States.$get();\n\n    constructor(\n        public ref:MatDialogRef<AgentAddSaleDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        private fb:FormBuilder,\n        private dailySaleService:DailySaleTrackerService\n    ) {}\n\n    ngOnInit() {\n        this.agent = this.data.agent || {} as IAgent;\n        this.campaigns = this.data.campaigns || [];\n        this.user = this.data.user || {} as User;\n        this.statuses = this.data.statuses || [];\n\n        this.createForm();\n    }\n\n    saveAgentSale():void {\n        this.submitted = true;\n\n        if (this.form.invalid) return;\n\n        this.ref.close(this.prepareModel());\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    checkUniqueAccount():void { \n        const account = this.form.value.podAccount;\n        if(account == null || account.length < 1) return;\n        this.dailySaleService.checkUniquePodAccount(account)\n            .subscribe((unique:boolean) => {\n                if (!unique)\n                    this.form.controls.podAccount.setErrors({ 'notUnique': true });\n            }); \n    }\n\n    private createForm():void { \n        this.form = new FormGroup({\n            saleDate: this.fb.control(moment().format('YYYY-MM-DD'), [Validators.required]),\n            agentId: this.fb.control(this.agent.agentId, [Validators.required]),\n            campaignId: this.fb.control({value:this.campaigns[0].campaignId, disabled: this.campaigns.length < 2}, [Validators.required]),\n            podAccount: this.fb.control('', [Validators.required]),\n            firstName: this.fb.control('', [Validators.required]),\n            lastName: this.fb.control('', [Validators.required]),\n            street: this.fb.control('', [Validators.required]),\n            street2: this.fb.control(''),\n            city: this.fb.control('', [Validators.required]),\n            state: this.fb.control('', [Validators.required]),\n            zip: this.fb.control('', [Validators.required])\n        });\n    }\n\n    private prepareModel():DailySale {\n        let pendingStatusQuery = _.find(this.statuses, (s:SaleStatus) => {\n            return s.name.toLowerCase() == 'pending';\n        }).saleStatusId;\n        return {\n            dailySaleId: null,\n            agentId: this.form.value.agentId,\n            campaignId: this.form.value.campaignId,\n            clientId: this.user.sessionUser.sessionClient,\n            firstName: this.form.value.firstName,\n            lastName: this.form.value.lastName,\n            street: this.form.value.street,\n            street2: this.form.value.street2,\n            city: this.form.value.city,\n            state: this.form.value.state,\n            zip: this.form.value.zip,\n            status: pendingStatusQuery || -1,\n            paidStatus: PaidStatusType.unpaid,\n            podAccount: this.form.value.podAccount,\n            remarks: [],\n            saleDate: this.form.value.saleDate\n        }\n    }\n}","\n<h3 mat-dialog-title>\n    Add Sale\n    <button type=\"button\" class=\"float-right\" mat-icon-button (click)=\"onNoClick()\" tabindex=\"-1\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</h3>\n<p class=\"text-muted\">\n    All fields denoted with * are required.\n</p>\n<mat-dialog-content class=\"add-daily-sale-form\">\n    <form [formGroup]=\"form\">\n\n        <!-- CAMPAIGN AND SALE DATE -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-select placeholder=\"Campaign\" formControlName=\"campaignId\" required>\n                        <mat-option *ngFor=\"let c of campaigns\" [value]=\"c.campaignId\">\n                            {{c.name}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('campaignId').hasError('required') && (form.get('campaignId').touched || submitted)\">\n                        Please select a campaign\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input \n                        matInput\n                        [matDatepicker]=\"saleDatepicker\"\n                        placeholder=\"Sale Date\"\n                        formControlName=\"saleDate\"\n                        required\n                    />\n                    <mat-datepicker-toggle matSuffix [for]=\"saleDatepicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #saleDatepicker></mat-datepicker>\n                    <mat-error *ngIf=\"form.get('saleDate').hasError('required') && (form.get('saleDate').touched || submitted)\">\n                        Please select a sale date\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row my-4\">\n            <div class=\"col-md-12\">\n                <span>Customer Information</span>\n                <mat-divider></mat-divider>\n            </div>\n        </div>\n\n        <!-- POD/ACCOUNT -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput placeholder=\"POD/Account\" formControlName=\"podAccount\" (blur)=\"checkUniqueAccount()\" required />\n                    <mat-error *ngIf=\"form.get('podAccount').hasError('required') && (form.get('podAccount').touched || submitted)\">\n                        Please enter a POD or Account No\n                    </mat-error>\n                    <mat-error *ngIf=\"form.get('podAccount').hasError('notUnique') && (form.get('podAccount').touched || submitted)\">\n                        Please enter a unique Account No\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <!-- CUSTOMER NAME  -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput placeholder=\"First Name\" formControlName=\"firstName\" required />\n                    <mat-error *ngIf=\"form.get('firstName').hasError('required') && (form.get('firstName').touched || submitted)\">\n                        Please enter a first name\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Last Name\" formControlName=\"lastName\" required />\n                    <mat-error *ngIf=\"form.get('lastName').hasError('required') && (form.get('lastName').touched || submitted)\">\n                        Please enter a last name\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <!-- CUSTOMER ADDRESS -->\n        <div class=\"row\">\n            <div class=\"col-md-8\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Address\" formControlName=\"street\" required />\n                    <mat-error *ngIf=\"form.get('street').hasError('required') && (form.get('street').touched || submitted)\">\n                        Please enter a street address\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-4\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Apt/Suite/Unit\" formControlName=\"street2\" />\n                    <mat-hint>Optional</mat-hint>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <!-- CUSTOMER ADDRESS CON'T -->\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input matInput placeholder=\"City\" formControlName=\"city\" required />\n                    <mat-error *ngIf=\"form.get('city').hasError('required') && (form.get('city').touched || submitted)\">\n                        Please enter a city\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-3\">\n                <mat-form-field>\n                    <mat-select formControlName=\"state\" placeholder=\"State\" required>\n                        <mat-option *ngFor=\"let s of states\" [value]=\"s.abbreviation\">\n                            {{s.name}}\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"form.get('state').hasError('required') && (form.get('state').touched || submitted)\">\n                        Please select a state\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-3\">\n                <mat-form-field>\n                    <input matInput placeholder=\"Postal Code\" formControlName=\"zip\" required />\n                    <mat-error *ngIf=\"form.get('zip').hasError('required') && (form.get('zip').touched || submitted)\">\n                        Please enter a zip code\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n    </form>\n</mat-dialog-content>\n<mat-dialog-actions class=\"d-flex justify-content-between\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button\n        mat-raised-button\n        (click)=\"saveAgentSale()\"\n        color=\"primary\"\n        [disabled]=\"form.invalid\"\n    >Save</button>\n</mat-dialog-actions>","import {Directive, OnInit, Output, EventEmitter, HostListener} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Directive({\n    selector: '[debounceKeyup]'\n})\nexport class DebounceKeyupDirective implements OnInit {\n    \n    @Output() debounceKeyup = new EventEmitter();\n    private keyups = new Subject();\n    constructor() {}\n\n    ngOnInit(): void {\n        this.keyups.pipe(\n            debounceTime(250)\n        ).subscribe(e => this.debounceKeyup.emit(e));\n    }\n\n    @HostListener('keyup', ['$event'])\n    keyup(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.keyups.next(event);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DebounceKeyupDirective} from './debounce-keyup.directive';\nimport { LetDirective } from './let.directive';\nimport { ScrollLockDirective } from './scroll-lock.directive';\n\n@NgModule({\n    declarations: [\n        DebounceKeyupDirective,\n        LetDirective,\n        ScrollLockDirective\n    ],\n    imports: [CommonModule],\n    exports: [\n        DebounceKeyupDirective,\n        LetDirective,\n        ScrollLockDirective\n    ]\n})\nexport class DirectivesModule {}\n","import {Directive, ViewContainerRef, TemplateRef, Input} from '@angular/core';\n\ninterface LetContext<T> {\n    ngLet: T;\n}\n\n@Directive({\n    selector: '[ngLet]'\n})\nexport class LetDirective<T> {\n    private context:LetContext<T> = { ngLet: null };\n    constructor(viewContainer:ViewContainerRef, templateRef:TemplateRef<LetContext<T>>) {\n        viewContainer.createEmbeddedView(templateRef, this.context);\n    }\n\n    @Input()\n    set ngLet(value:T) {\n        this.context.ngLet = value;\n    }\n}\n","import {\n  Directive,\n  ElementRef,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ChangeDetectorRef\n} from '@angular/core';\n\n@Directive({\n  selector: '[scrollLock]',\n  inputs: ['trapScroll']\n})\nexport class ScrollLockDirective implements OnInit, OnChanges, OnDestroy {\n\n  trapScroll:boolean | string;\n\n  private element:HTMLElement;\n\n  constructor(elementRef:ElementRef, private zone:NgZone, private cd:ChangeDetectorRef) {\n    this.element = elementRef.nativeElement;\n  }\n\n  ngOnChanges():void {\n    this.trapScroll = this.parseBoolean(this.trapScroll);\n\n    if(this.element.tabIndex >= -1) {\n      this.element.tabIndex = -1;\n    } else {\n      this.element.removeAttribute('tabIndex');\n    }\n\n    this.cd.detectChanges();\n  }\n\n  ngOnDestroy():void {\n    this.element.removeEventListener('wheel', this.handleEvent, false);\n  }\n\n  ngOnInit():void {\n    this.zone.runOutsideAngular(\n      ():void => {\n        // NOTE: All modern browsers support \"wheel\". As such, we'll apply this\n        // as a progressive enhancement and not worry about older browsers.\n        this.element.addEventListener(\"wheel\", this.handleEvent, false);\n        this.element.addEventListener(\"keydown\", this.handleEvent, false);\n      }\n    )\n  }\n\n  // private methods\n\n  private handleEvent = (event: WheelEvent | KeyboardEvent):void => {\n    if(!this.isTrappingEvent(event)) return;\n\n    // Regardless of whether or not we're going to allow this event to be applied\n    // locally, we want to stop the event from propagating above this container. This way,\n    // we make sure that an acestor instance higher up in the DOM, doesn't accidentally interfere\n    // with the default behavior being applied locally.\n    event.stopPropagation();\n\n    if(this.eventShouldBePrevented(event)) event.preventDefault();\n  }\n\n  private eventShouldBePrevented(event:WheelEvent | KeyboardEvent):boolean {\n    let target = <HTMLElement>event.target;\n\n    // check for embedded scrolling opportunities\n    while(target !== this.element) {\n      // if the event will cause scrolling in an embedded event, then we do not\n      // want to prevent the default behavior of the event.\n      if(this.isScrollableElement(target)) return false;\n      target = <HTMLElement>target.parentNode;\n    }\n\n    // if we've made it this far, there weren't any embedded scrollable elements to\n    // inspect. As such, we can now examine the container. If the event will cause\n    // scrolling in container element, then we DO NOT want to prevent\n    return true;\n  }\n\n  private isScrollableElement(element:HTMLElement):boolean {\n    if(getComputedStyle(element).overflowY === 'hidden') return false;\n    return element.scrollHeight !== element.clientHeight;\n  }\n\n  private isTrappingEvent(event:WheelEvent | KeyboardEvent):boolean {\n    if(!this.trapScroll) return false;\n    return true;\n  }\n\n  private parseBoolean(value:boolean | string):boolean {\n    return value == true;\n  }\n\n}\n","import { Component, OnInit, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { FloatBtnService } from './float-btn.service';\n\n@Component({\n  selector: 'vs-float-button',\n  templateUrl: './fab-float-btn.component.html',\n  styleUrls: ['./fab-float-btn.component.scss'],\n  providers: [\n    FloatBtnService\n  ]\n})\nexport class FabFloatBtnComponent implements OnInit {\n  @Output() callback:EventEmitter<any> = new EventEmitter();\n  @Input() isOpen:Observable<boolean>;\n\n  @Input('aria-label') ariaLabel:string;\n  @Input('mat-icon') matIcon:string;\n  @Input('is-mini') isMini:boolean;\n  @Input() disabled = 'false';\n  private _position:string;\n  @Input() \n  set position(value:string) {\n    if (typeof value !== 'string') {\n      value = '';\n    } \n    this._position = value.toLowerCase();\n  }\n  get position():string {\n    return this._position;\n  }\n  @Input('color') colorType = 'accent';\n  get positionClass() {\n    return this.position === 'tl' \n      ? 'top-left'\n      : this.position === 'tr'\n      ? 'top-right'\n      : this.position === 'bl'\n      ? 'bottom-left'\n      : 'bottom-right';\n  }\n\n  buttonType:string;\n\n  constructor(private svc:FloatBtnService) {}\n\n  ngOnInit() {\n    this.svc.opened$.subscribe(o => of(this.isOpen));\n    this.buttonType = this.isMini ? 'mat-mini-fab' : 'mat-fab';\n  }\n\n  onClick():void {\n    // call the callback!\n    this.callback.emit();\n  }\n\n}\n","\n<button\n  mat-fab\n  [class]=\"positionClass + ' ' + buttonType\"\n  [class.vfb-resting]=\"!(isOpen|async)\"\n  [class.vfb-open]=\"isOpen|async\"\n  [color]=\"colorType\"\n  [disabled]=\"disabled\"\n  (click)=\"onClick()\"\n>\n  <mat-icon [attr.aria-label]=\"ariaLabel\">{{matIcon}}</mat-icon>\n</button>\n","import { NgModule } from '@angular/core';\nimport { FabFloatBtnComponent } from '@app/fab-float-btn/fab-float-btn.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from '@app/material/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n    imports: [\n        CommonModule, \n        // BrowserModule, \n        // BrowserAnimationsModule, \n        MaterialModule\n    ],\n    declarations: [FabFloatBtnComponent],\n    exports: [FabFloatBtnComponent]\n})\nexport class FabFloatBtnModule {\n    constructor() { }\n}\n","import {Injectable} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class FloatBtnService {\n    private _opened:boolean;\n    opened$:Subject<boolean> = new Subject<boolean>();\n\n    constructor() {}\n\n    toggle(opened?:boolean):void {\n        let value = opened || !this._opened;\n        this._opened = value;\n        this.opened$.next(this._opened);\n    }\n\n    open():void {\n        this._opened = true;\n        this.opened$.next(true);\n    }\n\n    close():void {\n        this._opened = false;\n        this.opened$.next(false);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ForgotPasswordService } from './forgot-password.service';\n\n@Component({\n    selector: 'vs-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n    email = new FormControl('', [Validators.required, Validators.email]);\n\n    formSent = false;\n\n    constructor(private service:ForgotPasswordService) { }\n\n    ngOnInit() {\n    }\n\n    nextStep() {\n        this.formSent = true;\n        this.service.sendPasswordResetLink(this.email.value)\n            .subscribe((result) => {\n                console.dir(result);\n            });\n    }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row d-flex justify-content-center align-content-center pt-5\">\n        <div class=\"col-md-8 flex-fill\">\n            <mat-card>\n                <mat-card-content>\n                    <div class=\"row p-5\">\n                        <div class=\"col-md-7 d-flex justify-content-center align-content-center\">\n                            <div class=\"border-radius-circular\">\n                                <img src=\"dist/assets/images/forgot_password.svg\" class=\"img\" *ngIf=\"!formSent\" />\n                                <img src=\"dist/assets/images/message_sent.svg\" class=\"img\" *ngIf=\"formSent\" />\n                            </div>\n                        </div>\n                        <div class=\"col-md-5\">\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <h1 class=\"forgot display-4\" *ngIf=\"!formSent\">Forgot Password?</h1>\n                                    <h1 class=\"forgot display-4\" *ngIf=\"formSent\">Message Sent!</h1>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <p *ngIf=\"!formSent\">\n                                        Enter the email address associated with your account.\n                                    </p>\n                                    <p *ngIf=\"formSent\">\n                                        An email with instructions to reset your password has been sent to: {{ email.value }}\n                                    </p>\n                                </div>\n                            </div>\n                            <div class=\"row\" *ngIf=\"!formSent\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field floatLabel=\"true\" hideRequiredMarker=\"true\" class=\"wp-100\">\n                                        <input matInput name=\"email\" type=\"text\" [formControl]=\"email\" placeholder=\"Email Address\" required />\n                                        <mat-error *ngIf=\"email.invalid\">\n                                            Please enter an email address\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row pt-2\" *ngIf=\"!formSent\">\n                                <div class=\"col-md-12\">\n                                    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"nextStep()\">\n                                        Next\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ForgotPasswordService {\n\n    api = `${environment.apiUrl}api`;\n\n    constructor(private http:HttpClient) {}\n\n    sendPasswordResetLink(email: string):Observable<any> {\n        const url = `${this.api}/reset-password`;\n        const params = new HttpParams().set('email', email);\n        return this.http.get(url, {params: params});\n    }\n\n}","import {Component, OnInit, AfterViewInit, ViewChild} from '@angular/core';\nimport { Location } from '@angular/common';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {AuthService} from '../auth.service';\nimport {SessionService} from '../session.service';\nimport {User} from '../models/user.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatToolbar } from '@angular/material/toolbar';\nimport {ClientSelectorComponent} from '../client-selector/client-selector.component';\nimport {Router, NavigationEnd} from '@angular/router';\nimport {UserService} from '../user-features/user.service';\nimport { SidenavService } from '@app/sidenav/sidenav.service';\nimport { UserType } from '@app/models';\nimport { filter } from 'rxjs/operators';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, AfterViewInit {\n    private defaultTitle = 'Payment Dynamics';\n\n    isLoggedIn: boolean;\n    user: User;\n    isAdmin: boolean;\n    menuTitle = new BehaviorSubject<string>(this.defaultTitle);\n    showClientSelector: boolean;\n    loggedInStatus:Observable<boolean>;\n    navOpen:Observable<boolean>;\n\n    @ViewChild('toolbar', { static: false }) toolbar:MatToolbar;\n\n    isMobile = false;\n\n    constructor(\n        private authService: AuthService,\n        private userService: UserService,\n        private session: SessionService,\n        private dialog: MatDialog,\n        private location:Location,\n        private router: Router,\n        private sidenavService:SidenavService,\n        private breakpointObserver:BreakpointObserver\n    ) {\n        this.breakpointObserver.observe([\n            Breakpoints.Handset\n        ]).subscribe(result => {\n            this.isMobile = result.matches;\n        });\n    }\n\n    ngOnInit() {\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd)\n        ).subscribe(() => {\n            // we are on the contacts page if this is true\n            if (this.location.path(true).includes('contacts')) {\n                this.toolbar._elementRef.nativeElement.classList.add('bg-dark');\n            } else {\n                this.toolbar._elementRef.nativeElement.classList.remove('bg-dark');\n            }\n        });\n\n        this.session.getUserItem().subscribe(user => {\n            if (user == null) return;\n            this.user = user;\n            const client = this.user.sessionUser.client;\n\n            if (client && client.name) {\n                this.session.setNavigationTitle(client.name);\n            }\n            \n            this.menuTitle = this.session.navigationTitle$;\n\n            this.showClientSelector = this.user.clients.length > 1 && this.user.role.role > UserType.HumanResources;\n            this.isAdmin = this.user.role.role > UserType.HumanResources;\n        });\n\n        this.session.isLoginSubject.subscribe(isAuthenticated => {\n            this.loggedInStatus = of(isAuthenticated);\n        });\n\n        this.navOpen = this.sidenavService.opened$.asObservable();\n    }\n\n    ngAfterViewInit() {\n        // this.sidenav.\n    }\n\n    onLogout() {\n        this.authService.logout().then((url: string) => {\n            this.session.navigateByUrl(url);\n        });\n    }\n\n    /**\n     * Uses session service to toggle side nav\n     */\n    toggleSidenav(): void {\n        this.sidenavService.toggle();\n    }\n\n    openDialog(): void {\n        const dialogRef = this.dialog.open(ClientSelectorComponent, {\n            width: '400px',\n            data: this.user\n        });\n\n        dialogRef.afterClosed().subscribe(() => {\n            // console.log('dialog was closed');\n        });\n    }\n}\n","<mat-toolbar color=\"primary\" class=\"app-header-bar\" #toolbar>\n  <mat-toolbar-row>\n    <span *ngIf=\"(loggedInStatus | async)\">\n      <button mat-icon-button (click)=\"toggleSidenav()\">\n        <mat-icon>{{(navOpen|async) ? 'arrow_back_ios' : 'menu'}}</mat-icon>\n      </button>\n    </span>\n    \n    <span routerLink=\"/\" [class.h1]=\"!isMobile\" [class.h5]=\"isMobile\" \n        class=\"font-weight-light mb-0 d-flex align-items-center clickable\">\n        <img src=\"dist/assets/images/logo-notext.svg\" class=\"mr-2\" width=\"40\" height=\"40\" />\n        {{menuTitle | async}}\n    </span>\n    <span class=\"toolbar-spacer\"></span>\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\" *ngIf=\"(loggedInStatus | async); else loggedOut\">\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\" class=\"mat-menu\">\n      <button mat-menu-item *ngIf=\"(loggedInStatus | async) && showClientSelector\" (click)=\"openDialog()\">Change Client</button>\n      <!-- <button mat-menu-item *ngIf=\"isAdmin\"></button> -->\n      <button mat-menu-item (click)=\"onLogout()\" *ngIf=\"(loggedInStatus | async)\">Logout</button>\n      <!-- <ng-template #loggedOut><button mat-menu-item routerLink=\"/login\"> Login </button></ng-template> -->\n    </mat-menu>\n    <ng-template #loggedOut>\n        <button type=\"button\" mat-icon-button [routerLink]=\"['/login']\">\n            <mat-icon>exit_to_app</mat-icon>\n        </button>\n    </ng-template>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { SessionService } from '@app/session.service';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n    constructor(private session: SessionService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request)\n            .pipe(\n                retry(1),\n                catchError((error: HttpErrorResponse) => {\n                    let errorMessage = '';\n                    if (error.error instanceof ErrorEvent) {\n                        errorMessage = `Error: ${error.error.message}`;\n                    } else {\n                        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n                    }\n\n                    window.alert(errorMessage);\n\n                    // This means the user is no longer authenticated with the API and we should \n                    // log them out, revoke any tokens and send them to the login page. \n                    if (error.status == 401) {\n                        this.session.logout();\n                    }\n\n                    return throwError(error);\n                })\n            );\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { LoadingSpinnerService } from './loading-spinner.service';\nimport { SessionService } from '@app/session.service';\n\n@Component({\n    selector: 'vero-loading-spinner',\n    templateUrl: './loading-spinner.component.html',\n    styleUrls: ['./loading-spinner.component.scss']\n})\nexport class LoadingSpinnerComponent implements OnInit {\n    showSpinner: boolean;\n\n    constructor(private session: SessionService) {}\n\n    ngOnInit() {\n        this.session.loading$.subscribe(n => (this.showSpinner = n));\n    }\n    \n}\n","\n<div\n    [ngClass]=\"{'visible': showSpinner, 'hidden': !showSpinner, 'spinner': true, 'center': true}\"\n    class=\"d-flex justify-content-center align-items-center\"\n>\n    <div class=\"lds-dual-ring\"></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoadingSpinnerService {\n\n  showSpinner: Observable<boolean>;\n  private showSpinner$ = new BehaviorSubject<boolean>(false);\n\n  constructor() {\n    this.showSpinner = this.showSpinner$.asObservable();\n  }\n\n  show(): void {\n    this.showSpinner$.next(true);\n  }\n\n  hide(): void {\n    this.showSpinner$.next(false);\n  }\n\n}\n","import {Component, OnInit, AfterViewChecked, OnDestroy} from '@angular/core';\nimport {FormControl, Validators, NgForm} from '@angular/forms';\nimport {AuthService} from '../auth.service';\nimport {SessionService} from '../session.service';\n\nimport * as moment from 'moment';\n\nimport {User, IToken, ILocalStorage} from '../models/index';\nimport {UserService} from '../user-features/user.service';\nimport { MessageService } from '@app/message.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Role } from '@app/models/role.model';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, AfterViewChecked, OnDestroy {\n    pageLoading: boolean;\n    lockLoginInputs = false;\n    redirectQueue: string[] = [];\n    formSubmitted = false;\n\n    user: User;\n\n    username = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required]);\n\n    constructor(\n        public authService: AuthService,\n        private session: SessionService,\n        private userService: UserService,\n        private msg: MessageService,\n        private router:Router\n    ) {}\n\n    ngOnInit() {\n        this.session.getUserItem().subscribe(u => {\n            this.user = u;\n            this.session.hideLoader();\n        });\n    }\n\n    ngAfterViewChecked() {}\n\n    ngOnDestroy() {\n        this.lockLoginInputs = false;\n    }\n\n    onSubmit(f: NgForm) {\n        this.session.showLoader();\n        this.formSubmitted = true;\n\n        const loginData: any = {\n            username: f.value.username,\n            password: f.value.password\n        };\n\n        if (f.form.valid) {\n            this.lockLoginInputs = true;\n            this.pageLoading = true;\n\n            this.authService.ngLogin(loginData).subscribe(response => {\n                this.pageLoading = false;\n                this.lockLoginInputs = false;\n\n                const sessionToken: ILocalStorage<IToken> = {\n                    data: { access_token: response.token } as IToken,\n                    expires: moment().valueOf() + 1000 * (60 * 24 * 3)\n                };\n\n                this.session.login(sessionToken);\n                this.userService.storeNgUser(response.user);      \n                \n                if (response.user.role.role < Role.companyAdmin) {\n                    this.router.navigate(['users', 'payroll', 'list']);\n                } else {\n                    this.router.navigate(['daily-tracker']);\n                }\n\n            }, (err: HttpErrorResponse) => this.httpErrorHandler(err));\n        }\n    }\n\n    loginHandler() {\n        this.pageLoading = false;\n    }\n\n    httpErrorHandler(e: HttpErrorResponse) {\n        this.pageLoading = false;\n        this.lockLoginInputs = false;\n        this.password.setValue(null);\n        this.msg.showWebApiError(e);\n    }\n\n    getErrorMessage() {\n        return this.username.hasError('required')\n            ? 'You must enter a value'\n            : this.password.hasError('required')\n                ? 'You must enter a value'\n                : '';\n    }\n}\n","<div class=\"row justify-content-center pt-5\">\n    <div class=\"col-md-4\" [ngClass]=\"{'text-center': pageLoading}\">\n        <div class=\"card\">\n            <!-- <img class=\"card-img-top\" src=\"dist/assets/images/login.png\" alt=\"Login image\"> -->\n            <img class=\"card-img-top\" src=\"dist/assets/images/authentication.svg\" alt=\"Login image\" />\n            <div class=\"card-body\">\n                <form #f=\"ngForm\" (ngSubmit)=\"onSubmit(f)\" novalidate class=\"login-container\">\n                    <mat-form-field floatLabel=\"true\" hintLabel=\"We'll never share your login credentials.\">\n                        <input matInput name=\"username\" ngModel #username=\"ngModel\" placeholder=\"username\" required\n                            [disabled]=lockLoginInputs />\n                        <mat-error *ngIf=\"username.invalid && (username.touched || formSubmitted)\">{{getErrorMessage()}}\n                        </mat-error>\n                    </mat-form-field>\n                    <mat-form-field floatLabel=\"password\">\n                        <input matInput name=\"password\" ngModel #password=\"ngModel\" placeholder=\"password\" required\n                            type=\"password\" [disabled]=lockLoginInputs />\n                        <mat-error *ngIf=\"password.invalid && (password.touched || formSubmitted)\">{{getErrorMessage()}}\n                        </mat-error>\n                    </mat-form-field>\n                    <button mat-flat-button color=\"primary\" [disabled]=lockLoginInputs>Login</button>\n                    <div class=\"pt-3 d-flex justify-content-center\">\n                        <a [routerLink]=\"['..', 'forgot-password']\" class=\"text-decoration-none font-sm text-muted\">Trouble signing in?</a>\n                    </div>\n                </form>\n                <mat-progress-bar *ngIf=\"lockLoginInputs\" mode=\"indeterminate\"></mat-progress-bar>\n            </div>\n        </div>\n    </div>\n</div>","import { Directive, OnInit } from '@angular/core';\nimport { NgControl, NgModel } from '@angular/forms';\n\n/**\n * https://stackoverflow.com/questions/37800841/input-mask-fields-in-angular2-forms\n * This isn't working yet, need to better understand how directives interact with input fields.\n *\n*/\n@Directive({\n  selector: '[ngModel][maskssn]',\n  host: {\n    '(ngModelChange)': 'onInputChange($event)',\n    '(keydown.baskspace)': 'onInputChange($event.target.value, true)'\n  }\n})\nexport class MaskSsn implements OnInit {\n  ssn: string;\n\n  constructor(public model: NgModel) {}\n\n  ngOnInit() {\n    if(this.model.model.length > 0 && this.model.model.length < 12) {\n      this.ssn = this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9);\n      this.model.valueAccessor.writeValue(this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9));\n    }\n  }\n\n  onInputChange(event, backspace) {\n    // remove all casting characters and set ssn value to new value\n    for(var i = 0; i < event.length; i++) {\n      let pos = event.charAt(i);\n      if(isNaN(parseInt(pos, 10))) {\n        event = event.replaceAt(pos, this.model.value.charAt(i));\n      }\n      this.ssn = event;\n    }\n\n    this.model.valueAccessor.writeValue(this.model.model.slice(0, 3) + '-' + this.model.model.slice(3, 5) + '-' + this.model.model.slice(5, 9));\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport {MatMomentDateModule} from '@angular/material-moment-adapter';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\n\nconst modules = [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n    MatMomentDateModule,\n    DragDropModule,\n    MatBottomSheetModule\n];\n\n@NgModule({\n    imports: [],\n    exports: modules\n})\nexport class MaterialModule {}\n","import {Injectable} from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef, SimpleSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport {HttpErrorResponse} from '@angular/common/http';\nimport {SessionService} from '@app/session.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MessageService {\n    messages: string[] = [];\n    openBar: MatSnackBarRef<SimpleSnackBar> = null;\n\n    constructor(private bar: MatSnackBar, private session: SessionService) {}\n\n    /**\n     * @param message string\n     * @param action string @default 'dismiss'\n     * @param duration number @default null Results in message that will not disappear until\n     * explicitly closed by the user.\n     */\n    addMessage(message:string, action:string = 'dismiss', duration:number = null): void {\n        let options = duration > 0 ? {duration: duration} : {};\n        this.openBar = this.bar.open(message, action, options);\n        this.session.hideLoader();\n    }\n\n    dismissSnackBar = () => this.openBar.dismiss();\n\n    showWebApiError = (e:HttpErrorResponse, duration:number = 6500): void => {\n        let msg = e != null ? e.error.message : e.statusText != null ? e.statusText : e.message;\n        this.openBar = this.bar.open(msg, 'dismiss', { duration: duration });\n        this.session.hideLoader();\n    };\n\n    showObserverError<T>(e: any, caught: T): T {\n        let msg = e != null ? e.error.message : e.statusText != null ? e.statusText : e.message;\n        this.openBar = this.bar.open(msg, 'dismiss');\n        this.session.hideLoader();\n        return caught;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  messages: string[];\n\n  constructor(public messageService: MessageService, public bar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.messages = this.messageService.messages;\n  }\n\n}\n","import * as moment from 'moment';\n\nexport interface IAgentSale {\n  agentSalesId: number,\n  agentName?: string,\n  invoiceId: number,\n  agentId: number,\n  saleDate: string,\n  firstName: string,\n  lastName: string,\n  address: string,\n  city: string,\n  state: string,\n  postalCode: string,\n  statusType: number,\n  amount: number,\n  note: string,\n  createdAt?: Date,\n  updatedAt?: Date\n}\n\nexport class AgentSale implements IAgentSale {\n  agentSalesId = null;\n  agentName = null;\n  invoiceId = null;\n  agentId = null;\n  saleDate = null;\n  firstName = null;\n  lastName = null;\n  address = null;\n  city = null;\n  state = null;\n  postalCode = null;\n  statusType = null;\n  amount = null;\n  note = null;\n  createdAt = null;\n  updatedAt = null;\n\n  constructor(values:string[] = null) {\n\n    if(Array.isArray(values) && values.length > 7) {\n      this.saleDate = moment(values[0], 'MM-DD-YYYY').format('YYYY-MM-DD');\n      this.firstName = values[1];\n      this.lastName = values[2];\n      this.address = values[3];\n      this.city = values[4];\n      this.state = values[5] != null ? values[5].toUpperCase() : values[5];\n      this.postalCode = values[6];\n      this.statusType = (values[7].toLowerCase().replace(' ', '').indexOf('accept') > -1).toString();\n      this.amount = this.statusType == 'true' ? values[8] : 0;\n    }\n    return this;\n\n  }\n}\n","import { IState } from '@app/shared/models/state.model';\n\nexport type CampaignFilterActiveStatus = 'active' | 'inactive' | 'all';\n\nexport enum CompOperator {\n    Equals, LessThan, GreaterThan, LessThanEqualTo, GreaterThanEqualTo\n}\n\nexport interface CampaignFilters {\n    activeStatus: CampaignFilterActiveStatus,\n    compensation:number,\n    compOperator:CompOperator,\n    location:IState\n}","import { Moment } from \"moment\";\nimport { Remark, IAgent, ICampaign } from \"@app/models\";\nimport { Contact } from './contact.model';\nimport { SaleStatus } from './sale-status.model';\n\nexport enum PaidStatusType {\n  unpaid,\n  paid,\n  chargeback,\n  repaid\n}\n\nexport interface DailySale {\n  dailySaleId?:number,\n  agentId:number,\n  clientId:number,\n  campaignId:number,\n  utilityId?:number,\n  contactId?:number,\n  podAccount:number,\n  firstName?:string, // remove when contact is fully implemented\n  lastName?:string, // remove when contact is fully implemented\n  street?:string, // remove when contact is fully implemented\n  street2?:string, // remove when contact is fully implemented\n  city?:string, // remove when contact is fully implemented\n  state?:string, // remove when contact is fully implemented\n  zip?:number, // remove when contact is fully implemented\n  status:number,\n  paidStatus:number,\n  payCycleId?:number,\n  saleDate:Date | string | Moment,\n  paidDate?:Date | string | Moment,\n  chargeDate?:Date | string | Moment,\n  repaidDate?:Date | string | Moment,\n  lastTouchDate?:Date | string | Moment,\n  notes?:string\n  remarks:Remark[],\n  agent?:IAgent,\n  contact?:Contact,\n  saleStatus?:SaleStatus,\n  campaign?:ICampaign,\n\n  // UI ONLY PROPERTIES \n  readonly?:boolean\n}\n\nexport interface DailySaleRequest {\n    daily_sale_id?: number,\n    agent_id?: number,\n    client_id?: number,\n    campaign_id?: number,\n    utility_id?: number,\n    contact_id?: number,\n    pod_account?: number,\n    first_name?: string,\n    last_name?: string,\n    street?: string,\n    street2?: string,\n    city?: string,\n    state?: string,\n    zip?: string,\n    status?: number,\n    paid_status?: number,\n    pay_cycle_id?: number,\n    has_geo?: Boolean,\n    sale_date?: Date | string | Moment,\n    paid_date?: Date | string | Moment,\n    charge_date?: Date | string | Moment,\n    repaid_date?: Date | string | Moment,\n    last_touch_date?: Date | string | Moment,\n    notes?: string\n}\n","\n\nexport enum ContactType {\n    residential = 1,\n    business\n}","\nexport interface GeocodingResponse {\n    results: GeocodingResult[],\n    status: GeocodingResponseStatus,\n}\n\ninterface GeocodingResult {\n    address_components: GeocodingAddressComponent[],\n    formatted_address: string,\n    geometry: GeocodingGeometry,\n    place_id: string,\n    types: GeocodingAddressType[]\n}\n\ninterface GeocodingGeometry {\n    location: GeocodingGeometryLocation,\n    location_type: GeocodingLocationType,\n    viewport: {\n        northeast: GeocodingGeometryLocation,\n        southwest: GeocodingGeometryLocation\n    }\n}\n\ninterface GeocodingGeometryLocation {\n    lat: number,\n    lng: number,\n}\n\nexport enum GeocodingLocationType {\n    rooftop = 'ROOFTOP',\n    rangeInterpolated = 'RANGE_INTERPOLATED',\n    geometricCenter = 'GEOMETRIC_CENTER',\n    approximate = 'APPROXIMATE',\n}\n\ninterface GeocodingAddressComponent {\n    long_name: string,\n    short_name: string,\n    types: GeocodingAddressType[],\n}\n\n/**\n * Non-exhaustive and subject to changes by Google Cloud Platform.\n * https://developers.google.com/maps/documentation/geocoding/intro#Types\n */\nexport enum GeocodingAddressType {\n    streetAddress = 'street_address',\n    route = 'route',\n    intersection = 'intersection',\n    political = 'political',\n    country = 'country',\n    administrativeAreaLevel1 = 'administrative_area_level_1',\n    administrativeAreaLevel2 = 'administrative_area_level_2',\n    administrativeAreaLevel3 = 'administrative_area_level_3',\n    administrativeAreaLevel4 = 'administrative_area_level_4',\n    administrativeAreaLevel5 = 'administrative_area_level_5',\n    colloquialArea = 'colloquial_area',\n    locality = 'locality',\n    sublocality = 'sublocality',\n    neighborhood = 'neighborhood',\n    premise = 'premise',\n    subpremise = 'subpremise',\n    postalCode = 'postal_code',\n    naturalFeature = 'natural_feature',\n    airport = 'airport',\n    park = 'park',\n    pointOfInterest = 'point_of_interest',\n    floor = 'floor',\n    establishment = 'establishment',\n    parking = 'parking',\n    postBox = 'post_box',\n    postalTown = 'postal_town',\n}\n\nexport enum GeocodingResponseStatus {\n    Ok = 'OK',\n    ZeroResults = 'ZERO_RESULTS',\n    OverDailyLimit = 'OVER_DAILY_LIMIT',\n    OverQueryLimit = 'OVER_QUERY_LIMIT',\n    RequestDenied = 'REQUEST_DENIED',\n    InvalidRequest = 'INVALID_REQUEST',\n    UnknownError = 'UNKNOWN_ERROR',\n}","import { Moment } from 'moment';\nimport { User } from './user.model';\nimport { ICampaign } from './campaign.model';\n\nexport interface ImportModel {\n    importModelId: number,\n    clientId: number,\n    shortDesc: string,\n    fullDesc: string,\n    map: any,\n    userId: number,\n    campaignId: number,\n    matchByAgentCode: boolean,\n    splitCustomerName: boolean,\n    createdAt?:Date|string|Moment,\n    updatedAt?:Date|string|Moment,\n    deletedAt?:Date|string|Moment,\n\n    // relationship\n    user?:User\n    campaign?: ICampaign\n}\n\nexport interface ImportModelMap {\n    key: string,\n    value: string,\n    fieldType: DailySaleMapType, \n}\n\nexport enum DailySaleMapType {\n    salesAgentId, // this is the sales ID that the client uses... NOT SQL agentId\n    salesAgentName,\n    podAccount,\n    utilityName,\n    saleDate,\n    contactFullName,\n    contactFirstName,\n    contactMiddleName,\n    contactLastName,\n    contactBusinessName,\n    contactPrefix,\n    contactSuffix,\n    contactSsn,\n    contactDob,\n    contactStreet,\n    contactStreet2,\n    contactCity,\n    contactState,\n    contactZip,\n    contactPhone,\n    contactEmail\n}\n\nexport const DailySaleFields = [\n    'Sales Agent ID',\n    'Sales Agent Name',\n    'Account No',\n    'Utility Name',\n    'Sale Date',\n    'Customer Full Name',\n    'Customer First Name',\n    'Customer Middle Name',\n    'Customer Last Name',\n    'Business Name',\n    'Customer Prefix',\n    'Customer Suffix',\n    'Customer SSN',\n    'Date of Birth',\n    'Address',\n    'Apt/Unit/#',\n    'City',\n    'State',\n    'Zip',\n    'Phone',\n    'Email'\n];\n","\nexport * from './client.model';\nexport * from './sessionuser.model';\nexport * from './http-error.model';\nexport * from './token.model';\nexport * from './user.model';\nexport * from './weather.model';\nexport * from './onboarding.model';\nexport * from './user-details.model';\nexport * from './campaign.model';\nexport * from './payroll-map.model';\nexport * from './override.model';\nexport * from './agent.model';\nexport * from './expense.model';\nexport * from './override.model';\nexport { IAgentSale, AgentSale } from './agent-sales.model';\nexport * from './invoice.model';\nexport * from './local-storage.model';\nexport * from './daily-sale.model';\nexport * from './sale-status.model';\nexport * from './remark.model';\nexport * from './auth-response.model';\nexport * from './utility.model';\nexport * from './payroll.model';\nexport * from './payroll-detail.model';\nexport * from './payroll-filter.model';\nexport * from './paginator.model';\nexport * from './user-type.enum';\nexport * from './enums/contact-type.enum';\nexport * from './update-agent-meta.model';\nexport * from './dnc-contact.model';\nexport * from './import-model.model';\nexport * from './excel-2-json.model';\nexport * from './gql.model';\nexport * from './geocoding-request.model';\nexport * from './geocoding-response.model';\n","import { Moment } from '@app/shared/moment-extensions';\n\nexport interface PayrollFilter {\n    activeFilters:PayrollFilterType[]\n    startDate:Date|Moment|string,\n    endDate:Date|Moment|string,\n    agentId?:number,\n    campaignId?:number,\n    weekEnding?:Date|Moment|string,\n    isAutomated?:boolean,\n    isReleased?:boolean,\n    automatedRelease?:Date|Moment|string\n    clientId?:number\n}\n\nexport enum PayrollFilterType {\n    startDate,\n    endDate,\n    agent,\n    campaign,\n    client,\n    weekEnding,\n    isAutomated,\n    isReleased,\n    automatedRelease\n}","import {Moment} from '@app/shared/moment-extensions';\n\nexport interface IUserRole {\n    id: number;\n    type: string;\n    active: boolean;\n}\n\nexport interface IRole {\n    userId:number;\n    // role:number|RoleType;\n    role:number,\n    isSalesAdmin:boolean,\n    createdAt?:number;\n    updatedAt?:number;\n}\n\nexport interface RoleType {\n    id: number;\n    type: string;\n    active: boolean;\n    createdAt?: Date | Moment | string;\n    updatedAt?: Date | Moment | string;\n}\n\nexport enum UserRole {\n    USER = 1,\n    SUPERVISOR,\n    MANAGER,\n    REGIONAL_MANAGER,\n    HUMAN_RESOURCES,\n    COMPANY_ADMIN,\n    SYSTEM_ADMIN\n}\n\nexport interface IRoleType {\n    user:UserRole,\n    supervisor:UserRole,\n    manager:UserRole,\n    regionalManager:UserRole,\n    humanResources:UserRole,\n    companyAdmin:UserRole,\n    systemAdmin:UserRole\n}\n\nexport const Role:IRoleType = {\n    user: UserRole.USER,\n    supervisor: UserRole.SUPERVISOR,\n    manager: UserRole.MANAGER,\n    regionalManager: UserRole.REGIONAL_MANAGER, \n    humanResources: UserRole.HUMAN_RESOURCES,\n    companyAdmin: UserRole.COMPANY_ADMIN,\n    systemAdmin: UserRole.SYSTEM_ADMIN\n}\n","\nexport enum UserType {\n    User = 1,\n    Supervisor,\n    Manager,\n    RegionalManager,\n    HumanResources,\n    CompanyAdmin,\n    SystemAdmin\n}","import {Component, OnInit, OnChanges, ChangeDetectorRef, AfterViewInit, AfterViewChecked} from '@angular/core';\nimport {NgForm} from '@angular/forms';\n\nimport {User, IUserDetail, IWeather, IOnboarding, IClient, ICampaign} from '../models';\n\nimport * as moment from 'moment';\n\nimport {WeatherService} from '../weather.service';\nimport {UserService} from '../user-features/user.service';\nimport {MessageService} from '../message.service';\n\nimport {LoadingSpinnerService} from '../loading-spinner/loading-spinner.service';\nimport {CampaignService} from '../campaigns/campaign.service';\nimport {SessionService} from '../session.service';\nimport {Observable, of} from 'rxjs';\nimport {UserRole} from '@app/models/role.model';\n\n@Component({\n    selector: 'my-information',\n    templateUrl: './my-information.component.html',\n    styleUrls: ['./my-information.component.scss']\n})\nexport class MyInformationComponent implements OnInit, AfterViewChecked {\n    user: User;\n    user$: Observable<User>;\n    detail$: Observable<IUserDetail>;\n    detail: IUserDetail = <IUserDetail>{};\n    weather: IWeather;\n    minTemp: string;\n    maxTemp: string;\n    editProfile = false;\n    editDetails:boolean;\n    joinDate: string;\n    welcome: string;\n    hasOnboarding = false;\n    onboarding: IOnboarding;\n\n    client: IClient = <IClient>{};\n\n    ssn = '123456789';\n\n    campaigns: ICampaign[] = [];\n    allCampaigns: ICampaign[] = [];\n\n    constructor(\n        private weatherApi: WeatherService,\n        private userService: UserService,\n        private msg: MessageService,\n        private spinner: LoadingSpinnerService,\n        private campaignService: CampaignService,\n        private session: SessionService,\n        private cd:ChangeDetectorRef\n    ) {\n        this.detail$ = this.userService.userDetail$.asObservable();\n    }\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.getUserItem().subscribe(user => {\n            if (user == null) return;\n            this.user$ = of(user);\n            this.user = user;\n\n            /** set onboarding options */\n            this.hasOnboarding =\n                user.sessionUser.client.options != null && user.role.role >= UserRole.COMPANY_ADMIN\n                    ? user.sessionUser.client.options.hasOnboarding\n                    : false;\n\n            this.client = user.sessionUser.client;\n            this.welcome = user.firstName;\n            this.joinDate = moment(user.createdAt.date).format('MMMM Do, YYYY');\n\n            this.campaignService\n                .getCampaigns(this.user.sessionUser.sessionClient)\n                .then((campaigns: ICampaign[]) => {\n                    this.allCampaigns = campaigns;\n                    this.session.hideLoader();\n                })\n                .catch(this.msg.showWebApiError);\n        });\n    }\n\n    ngAfterViewChecked() {\n        \n        // ExpressionChangedAfterItHasBeenCheckedError\n        this.cd.detectChanges();\n    }\n\n    changeEditMode(f: NgForm): void {\n        if (!f.dirty) {\n            this.editProfile = !this.editProfile;\n        } else {\n            f.reset();\n        }\n    }\n\n    changeOnboardingEditMode(f: NgForm): void {\n        if (!f.dirty) {\n            this.editDetails = !this.editDetails;\n        } else {\n            f.reset();\n        }\n    }\n\n    save(f: NgForm) {\n        this.spinner.show();\n        // if account numbers are null, make them zeros to be inserted into db\n        this.formatBankAccountNumbers();\n\n        this.userService.updateUser(this.user, this.detail).subscribe();\n        f.reset();\n        this.editProfile = !this.editProfile;\n        this.msg.addMessage('Saved successfully.', 'dismiss', 6000);\n    }\n\n    // need to finish this\n    cancel(f: NgForm): void {\n        this.userService.reloadUser();\n        this.editProfile = !this.editProfile;\n    }\n\n    cancelDetails(f: NgForm): void {\n        this.userService.reloadUserDetail();\n        this.editDetails = !this.editDetails;\n    }\n\n    saveOnboarding(f: NgForm) {\n        console.dir(f);\n    }\n\n    clearId(saleIdName: string, campaignName: string): void {\n        this.detail[saleIdName] = null;\n        this.detail[campaignName] = null;\n    }\n\n    private resetUserFormFields(f: NgForm, user: any) {\n        for (var key in f.value) {\n            if (!f.value.hasOwnProperty(key)) continue;\n            var obj = f.form.controls[key];\n            if (!obj.dirty) continue;\n            this.user[key] = user[key];\n            obj.markAsUntouched();\n        }\n    }\n\n    private formatBankAccountNumbers(pageLoad: boolean = false) {\n        if (pageLoad) {\n            this.detail.bankRouting = this.detail.bankRouting === 0 ? null : this.detail.bankRouting;\n            this.detail.bankAccount = this.detail.bankAccount === 0 ? null : this.detail.bankAccount;\n        } else {\n            this.detail.bankRouting = this.detail.bankRouting ? this.detail.bankRouting : 0;\n            this.detail.bankAccount = this.detail.bankAccount ? this.detail.bankAccount : 0;\n        }\n    }\n\n    private setEmptyUserDetail(): IUserDetail {\n        return {\n            userDetailId: null,\n            userId: null,\n            street: null,\n            street2: null,\n            city: null,\n            state: null,\n            zip: null,\n            phone: null,\n            ssn: null,\n            birthDate: null,\n            bankRouting: null,\n            bankAccount: null,\n            saleOneId: null,\n            saleTwoId: null,\n            saleThreeId: null,\n            createdAt: null,\n            updatedAt: null\n        };\n    }\n}\n","<mat-card class=\"page-header-accent\">\n    <form #f=\"ngForm\" (ngSubmit)=\"save(f)\" *ngIf=\"user$|async\">\n        <h2 mat-card-title>Welcome, {{welcome}}.</h2>\n        <mat-card-header class=\"justify-content-between\">\n            <mat-slide-toggle [ngClass]=\"{'float-right': true, 'text-muted': !editProfile, 'text-light': editProfile}\"\n                [checked]=\"editProfile\" (change)=\"changeEditMode(f)\" [disabled]=\"f.touched\" color=\"primary\"\n                *ngIf=\"user?.role.role > 5\"></mat-slide-toggle>\n        </mat-card-header>\n        <mat-card-content class=\"flex-column\">\n            <h5 class=\"mb-2\">User Details</h5>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-label>First Name</mat-label>\n                                <input type=\"text\" name=\"firstName\" [ngModel]=\"(user$ | async).firstName\"\n                                    (ngModelChange)=\"user.firstName=$event\" matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Last Name</mat-label>\n                                <input type=\"text\" name=\"lastName\" [ngModel]=\"(user$ | async).lastName\" (ngModelChange)=\"user.lastName=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Username</mat-label>\n                                <input type=\"text\" name=\"username\" matInput [ngModel]=\"(user$ | async).username\"\n                                    disabled />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Email</mat-label>\n                                <input type=\"text\" name=\"email\" [(ngModel)]=\"user.email\" [ngModel]=\"(user$ | async).email\"\n                                    (ngModelChange)=\"user.email=$event\" matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-label>Street Address</mat-label>\n                                <input type=\"text\" name=\"street\" [ngModel]=\"(detail$ | async).street\" (ngModelChange)=\"detail.street=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Apt/Suite</mat-label>\n                                <input type=\"text\" name=\"street2\" [ngModel]=\"(detail$ | async).street2\" (ngModelChange)=\"detail.street2=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>City</mat-label>\n                                <input type=\"text\" name=\"city\" [ngModel]=\"(detail$ | async).city\" (ngModelChange)=\"detail.city=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>State</mat-label>\n                                <input type=\"text\" name=\"state\" [ngModel]=\"(detail$ | async).state\" (ngModelChange)=\"detail.state=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Zip Code</mat-label>\n                                <input type=\"text\" name=\"zip\" [ngModel]=\"(detail$ | async).zip\" (ngModelChange)=\"detail.zip=$event\"\n                                    matInput [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Phone Number</mat-label>\n                                <input type=\"text\" name=\"phone\" matInput [ngModel]=\"(detail$ | async).phone\"\n                                    (ngModelChange)=\"detail.phone=$event\" [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Date of Birth</mat-label>\n                                <input type=\"text\" name=\"birthDate\" matInput [ngModel]=\"(detail$ | async).birthDate | date:'shortDate'\"\n                                    (ngModelChange)=\"detail.birthDate=$event\" [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Social Security Number</mat-label>\n                                <input type=\"text\" name=\"ssn\" matInput [ngModel]=\"(detail$ | async).ssn\"\n                                    (ngModelChange)=\"detail.ssn=$event\" [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <div class=\"row mb-3\">\n                        <div class=\"col-12\">\n                            <mat-form-field>\n                                <mat-label>Routing Number</mat-label>\n                                <input type=\"text\" name=\"routingNo\" matInput [ngModel]=\"(detail$ | async).bankRouting\"\n                                    (ngModelChange)=\"detail.bankRouting=$event\" [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                            <mat-form-field>\n                                <mat-label>Account Number</mat-label>\n                                <input type=\"text\" name=\"accountNo\" matInput [ngModel]=\"(detail$ | async).bankAccount\"\n                                    (ngModelChange)=\"detail.bankAccount=$event\" [disabled]=\"!editProfile\" />\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </mat-card-content>\n        <mat-card-actions class=\"d-flex justify-content-between\">\n            <button mat-button type=\"button\" *ngIf=\"editProfile\" (click)=\"cancel(f)\">Cancel</button>\n            <button mat-raised-button type=\"submit\" color=\"primary\" *ngIf=\"editProfile\">Save</button>\n        </mat-card-actions>\n    </form>\n</mat-card>\n<mat-card *ngIf=\"client.clientId !== null && client.clientId > 0 && hasOnboarding\">\n    <form #onboardingForm=\"ngForm\" (ngSubmit)=\"saveOnboarding(onboardingForm)\">\n        <mat-card-header class=\"justify-content-between\">\n            <mat-card-title>\n                <h3>Onboarding <small class=\"text-muted\">(coming soon)</small></h3>\n            </mat-card-title>\n            <!-- uncomment when onboarding stuff is ready -->\n            <!-- <mat-slide-toggle class=\"float-right\" [checked]=\"editDetails\" (change)=\"changeOnboardingEditMode(onboardingForm)\" [disabled]=\"onboardingForm.touched\">Edit Mode</mat-slide-toggle> -->\n        </mat-card-header>\n        <mat-card-content class=\"flex-column\">\n            <mat-form-field>\n                <mat-label>Driver's License</mat-label>\n                <input type=\"text\" name=\"license\" matInput [disabled]=\"!editDetails\" />\n            </mat-form-field>\n            <mat-checkbox disabled=\"true\">Direct Deposit Info</mat-checkbox>\n            <mat-checkbox disabled=\"true\">ID Badge Image (headshot)</mat-checkbox>\n            <mat-checkbox disabled=\"true\">Full Profile Image (full body)</mat-checkbox>\n        </mat-card-content>\n        <mat-card-actions class=\"d-flex justify-content-between\">\n            <button mat-button type=\"button\" *ngIf=\"editDetails\" (click)=\"cancelDetails(onboardingForm)\">Cancel</button>\n            <button mat-raised-button type=\"submit\" color=\"primary\" *ngIf=\"editDetails\">Save</button>\n        </mat-card-actions>\n    </form>\n</mat-card>","import { Component, OnInit } from '@angular/core';\nimport { PayrollService } from '../payroll.service';\nimport { SessionService } from '@app/session.service';\nimport { User, Payroll, Paginator, PayrollDetails } from '@app/models';\nimport { BehaviorSubject } from 'rxjs';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport { Role } from '@app/models/role.model';\nimport { PaycheckService } from '../paycheck-list/paycheck.service';\nimport { map, tap } from 'rxjs/operators';\nimport { coerceNumberProperty } from '@app/utils';\nimport { PaycheckDetailService } from '../paycheck-detail/paycheck-detail.service';\n\n@Component({\n    selector: 'vs-agent-payroll-view',\n    templateUrl: './agent-payroll-view.component.html',\n    styleUrls: ['./agent-payroll-view.component.scss']\n})\nexport class AgentPayrollViewComponent implements OnInit {\n\n    isMobile = false;\n    user:User;\n    paychecks = new BehaviorSubject<PayrollDetails[]>(null);\n    paginator:Paginator<PayrollDetails>;\n    hasPaychecks = false;\n\n    constructor(\n        private breakpoint:BreakpointObserver,\n        private session:SessionService, \n        private paycheckService:PaycheckService,\n        private router:Router,\n        private paycheckDetailService:PaycheckDetailService\n    ) {\n        this.breakpoint.observe([\n            Breakpoints.Handset\n        ]).subscribe(result => {\n            this.isMobile = result.matches;\n        });\n    }\n\n    ngOnInit() {\n        this.paychecks.subscribe(value => this.hasPaychecks = value != null && value.length > 0);\n\n        this.session.getUserItem().subscribe(u => {\n            if (u == null) return;\n            this.user = u;\n\n            if (this.user.role.role > Role.humanResources) {\n                this.router.navigate(['/admin/pay/paycheck-list']);\n            }\n\n            this.paycheckService.getAgentPaycheckList(this.user.sessionUser.sessionClient, this.user.agent.agentId)\n                .pipe(\n                    map(res => {\n                        res.data.forEach(d => {\n                            d.grossTotal = this.calculateGrossTotal(d);\n                        });\n                        res.data = res.data.sort((a, b) => {\n                            const dateA = <any>new Date(<any>a.releaseDate);\n                            const dateB = <any>new Date(<any>b.releaseDate);\n                            return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\n                        });\n                        this.paginator = res;\n                        return res.data;\n                    })\n                )\n                .subscribe(paychecks => this.paychecks.next(paychecks));\n        });\n    }\n\n    viewPaycheck(detail:PayrollDetails) {\n        this.paycheckDetailService.navigateToDetail(detail);\n    }\n\n\n\n    private calculateGrossTotal(detail:PayrollDetails):number {\n        \n        let amount = coerceNumberProperty(detail.grossTotal);\n\n        // if the user has a commission set on their pairing record, let's override the campaign amount. \n        const pairing = detail.agent.pairings.find(p => p.campaignId == detail.payroll.campaignId);\n        if (pairing.commission) {\n            amount = coerceNumberProperty(pairing.commission);\n            detail.grossTotal = amount;\n        }\n\n        let expensesTotal = 0;\n        let overridesTotal = 0;\n\n        detail.expenses.forEach(e => expensesTotal += coerceNumberProperty(e.amount));\n        detail.overrides.forEach(o => overridesTotal += (coerceNumberProperty(o.amount) * coerceNumberProperty(o.units)));\n\n        return amount + expensesTotal + overridesTotal;\n    }\n}\n","\n\n<div class=\"container\">\n    <div class=\"row mb-2\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <h2 mat-card-title>My Earnings</h2>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"row mb-2\" *ngIf=\"!isMobile; else mobileView\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"border-top-primary\">\n                <mat-card-content *ngIf=\"hasPaychecks; else noPayrolls\">\n                    <mat-table [dataSource]=\"paychecks\">\n                        <ng-container matColumnDef=\"date\">\n                            <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                {{ item?.releaseDate | date:'shortDate' }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"gross\">\n                            <mat-header-cell *matHeaderCellDef>Gross Pay</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                {{ item?.grossTotal | currency }}\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"['date', 'gross']\"></mat-header-row>\n                        <mat-row *matRowDef=\"let item; columns: ['date', 'gross']\" (click)=\"viewPaycheck(item)\"></mat-row>\n                    </mat-table>\n                </mat-card-content>\n                <ng-template #noPayrolls>\n                    <div class=\"row d-flex justify-content-center py-5\">\n                        <div class=\"col-md-6\">\n                            <h4 class=\"text-center display-4 pb-4\">\n                                Paychecks will show up here as soon as they're available!\n                            </h4>\n                            <img src=\"dist/assets/images/printing_invoices.svg\" class=\"img-fluid\" />\n                        </div>\n                    </div>\n                </ng-template>\n            </mat-card>\n        </div>\n    </div>\n\n    <ng-template #mobileView>\n                        \n        <div class=\"row mb-2\">\n            <div class=\"col-md-12\">\n                <ng-container *ngIf=\"(paychecks|async) != null; noMobilePayrolls\">\n\n                    <mat-card *ngFor=\"let p of paychecks|async\">\n                        <h4 mat-card-title>{{p?.grossTotal | currency}}</h4>\n                        <mat-card-content>\n                            {{ p?.releaseDate | date:'shortDate' }}\n                        </mat-card-content>\n                    </mat-card>\n        \n                </ng-container>\n                <ng-template #noMobilePayrolls>\n                    <h4>No payrolls currently.</h4>\n                </ng-template>\n            </div>\n        </div>\n\n    </ng-template>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Moment } from 'moment';\n\ninterface DialogData {\n    date:Moment|Date|string\n}\n\n@Component({\n    selector: 'vs-confirm-autorelease-date-dialog',\n    templateUrl: './confirm-autorelease-date-dialog.component.html',\n    styleUrls: ['./confirm-autorelease-date-dialog.component.scss']\n})\nexport class ConfirmAutoreleaseDateDialogComponent implements OnInit {\n\n    date:Moment|Date|string;\n\n    constructor(\n        private ref:MatDialogRef<ConfirmAutoreleaseDateDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n    ) {\n        this.date = this.data.date;\n    }\n\n    ngOnInit() {}\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    confirmDate() {\n        this.ref.close(this.date);\n    }\n}\n","\n<div mat-dialog-title>\n    <h4>Confirm Auto-Release Date</h4>\n</div>\n<mat-dialog-content>\n    <p>\n        Please confirm your selection of date:\n    </p>\n    <p class=\"font-weight-bold text-center\">{{date | date:'fullDate'}}</p>\n</mat-dialog-content>\n<mat-dialog-actions class=\"d-flex justify-content-between\">\n    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"onNoClick()\">Go Back</button>\n    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"confirmDate()\">Confirm</button>\n</mat-dialog-actions>","import {Component, OnInit, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Payroll } from '@app/models';\nimport * as _ from 'lodash';\n\ninterface DialogData {\n    payrolls:Payroll[]\n}\n\n@Component({\n    selector: 'vs-confirm-release-dialog',\n    templateUrl: './confirm-release-dialog.component.html',\n    styleUrls: ['./confirm-release-dialog.component.scss']\n})\nexport class ConfirmReleaseDialogComponent implements OnInit {\n\n    payrolls:Payroll[];\n    grossTotalReleaseAmount:number = 0;\n\n    constructor(\n        private ref:MatDialogRef<ConfirmReleaseDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n    ) {}\n\n    ngOnInit() {\n        this.payrolls = this.data.payrolls || [];\n        this.grossTotalReleaseAmount = this.grossTotalReleaseAmount + (_.sumBy(this.payrolls, p => _.sumBy(p.details, d => +d.grossTotal)));\n    }\n\n    confirmRelease() {\n        this.ref.close(true);\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n}\n","\n<ng-template #detailTemplate let-details=\"details\">\n    <ng-container *ngFor=\"let detail of details; let ii = index\">\n        <div class=\"row my-3\">\n            <div class=\"col-md-11 offset-md-1 d-flex justify-content-between\">\n                <div>{{detail.agent.firstName}} {{detail.agent.lastName}}</div>\n                <div class=\"text-muted font-italic\">{{detail.sales}} {{detail.sales > 1 ? 'sales' : 'sale'}}</div>\n                <div class=\"text-muted\">{{detail | payrollDetailTotals:'netTotal' | currency}}</div>\n            </div>\n        </div>\n    </ng-container>\n</ng-template>\n\n<div mat-dialog-title class=\"d-flex justify-content-between\">\n    <h4 class=\"font-weight-bold\">Confirm to release {{payrolls.length}} {{payrolls.length > 1 ? 'pay runs.' : 'pay run.'}}</h4>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <p class=\"text-muted font-italic\">\n        Once confirmed, the respective pay checks will be locked for release and can no longer be edited. Please ensure\n        that you are confirming the proper pay checks to be released. \n    </p>\n    <ng-container *ngFor=\"let p of payrolls; let i = index\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <span class=\"font-weight-bold mb-4\">{{(i + 1)+'.'}} </span>\n                <span class=\"font-weight-bold mb-4\">{{p.payCycle.startDate | date:'mediumDate'}} - {{p.payCycle.endDate | date:'mediumDate'}}</span>\n                <ng-container *ngTemplateOutlet=\"detailTemplate;context:{details:p.details}\"></ng-container>\n            </div>\n        </div>\n    </ng-container>\n\n    <ng-container *ngIf=\"payrolls.length\">\n        <div class=\"row border-top pt-2 mt-2\">\n            <div class=\"col-md-12 d-flex justify-content-between font-weight-bold\">\n                <span>Gross Total projected in this release</span>\n                <span>{{payrolls | grossTotalReleaseAmount | currency}}</span>\n            </div>\n        </div>\n    </ng-container>\n</mat-dialog-content>\n<mat-dialog-actions class=\"mt-3 d-flex justify-content-between\">\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Go Back</button>\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"confirmRelease()\">Confirm</button>\n</mat-dialog-actions>","import {Pipe, PipeTransform} from '@angular/core';\nimport { Payroll } from '@app/models';\n\n@Pipe({\n    name: 'grossTotalReleaseAmount'\n})\nexport class GrossTotalReleaseAmountPipe implements PipeTransform {\n\n    /**\n     * Iterates through all payrolls, details and calculates the totals of the sales, expenses and overrides.\n     * \n     * @param payrolls \n     * @param args \n     */\n    transform(payrolls:Payroll[], args?: any): any {\n        let total = 0;\n        \n        payrolls.forEach(p => {\n\n            p.details.forEach(d => {\n                const salesGross = d.grossTotal;\n                const expenses = d.expenses.map(e => e.amount).reduce((t, n) => t + n, 0);\n                const overrides = d.overrides.map(o => (o.amount * o.units)).reduce((t, n) => t + n, 0);\n                total += (+salesGross + +expenses + +overrides);\n            });\n\n        });\n        \n        return total;\n    }\n\n}\n","import {Component, OnInit, Inject, ViewChild, AfterViewInit} from '@angular/core';\nimport { PayrollDetails, IAgent, IOverride, IExpense } from '@app/models';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTab } from '@angular/material/tabs';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { coerceNumberProperty } from '@app/utils';\nimport { CurrencyPipe } from '@angular/common';\nimport { PayCycle } from '@app/models/pay-cycle.model';\n\ninterface DialogData {\n    payCycle:PayCycle,\n    detail:PayrollDetails,\n    agents:IAgent[]\n}\n\n@Component({\n    selector: 'vs-override-expense-dialog',\n    templateUrl: './override-expense-dialog.component.html',\n    styleUrls: ['./override-expense-dialog.component.scss'],\n    animations: [\n        trigger(\n            'enter', [\n                transition(':enter', [\n                    style({transform: 'translateX(100%)', opacity: 0}),\n                    animate('500ms', style({transform: 'translateX(0)', opacity: 1}))\n                ]),\n                transition(':leave', [\n                    style({transform: 'translateX(0)', opacity: 1}),\n                    animate('500ms', style({transform: 'translateX(100%)', opacity: 0}))\n                ])\n            ]\n        )\n    ],\n    providers: [CurrencyPipe]\n})\nexport class OverrideExpenseDialogComponent implements OnInit, AfterViewInit {\n\n    payCycle:PayCycle;\n    detail:PayrollDetails;\n    agents:IAgent[];\n    f:FormGroup = this.createForm();\n\n    @ViewChild('overrideTab', { static: true }) overrideTab:MatTab;\n    @ViewChild('expenseTab', { static: true }) expenseTab:MatTab;\n\n    constructor(\n        private ref:MatDialogRef<OverrideExpenseDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        private fb:FormBuilder,\n        private currencyPipe:CurrencyPipe\n    ) {\n        this.payCycle = this.data.payCycle;\n        this.detail = this.data.detail || {} as PayrollDetails;\n        this.agents = this.data.agents || [];\n    }\n\n    ngOnInit() {\n        if (this.detail != null) this.buildFormArrays();\n    }\n\n    ngAfterViewInit() {\n        // this.f.valueChanges.subscribe(value => {\n        //     this.updateOverrideAmount(value);\n        // });\n    }\n\n    addAdjustment() {\n        if (this.overrideTab.isActive) \n            this.addOverrideFormItem();\n        else\n            this.addExpenseFormItem();\n    }\n\n    getActiveTabTitle() {\n        if (this.overrideTab.isActive) {\n            return 'Override';\n        } else if (this.expenseTab.isActive) {\n            return 'Expense';\n        }\n        return 'Adjustment';\n    }\n\n    get overrides():FormArray {\n        return this.f.controls.overrides.value;\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    removeUnsavedOverride(index:number) {\n        if (this.detail.overrides[index].overrideId == null || this.detail.overrides[index].overrideId == 0) {\n            this.detail.overrides.splice(index, 1);\n            (<FormArray>this.f.get('overrides')).removeAt(index);\n        }\n    }\n\n    removeUnsavedExpense(index:number) {\n        if (this.detail.expenses[index].expenseId == null || this.detail.expenses[index].expenseId == 0) {\n            this.detail.expenses.splice(index, 1);\n            (<FormArray>this.f.get('expenses')).removeAt(index);\n        }\n    }\n\n    updateOverrideAmount(value:string, index:number) {\n        const control = this.f.get(['overrides', index, 'amount']) as FormControl;\n\n        if (isNaN(<any>value.charAt(0))) {\n            const val = coerceNumberProperty(value.slice(1, value.length));\n            control.setValue(this.currencyPipe.transform(val), { emitEvent: false, emitViewToModelChange: false });\n        } else {\n            control.setValue(this.currencyPipe.transform(value), { emitEvent: false, emitViewToModelChange: false });\n        }\n    }\n\n    updateExpenseAmount(value:string, index:number) {\n        const control = this.f.get(['expenses', index, 'amount']) as FormControl;\n\n        if (isNaN(<any>value.charAt(0))) {\n            const val = coerceNumberProperty(value.slice(1, value.length));\n            control.setValue(this.currencyPipe.transform(val), { emitEvent: false, emitViewToModelChange: false });\n        } else {\n            control.setValue(this.currencyPipe.transform(value), { emitEvent: false, emitViewToModelChange: false });\n        }\n    }\n\n    saveForm() {\n        if (!this.f.valid) return;\n        const model = this.prepareModel();\n        this.ref.close(model);\n    }\n\n    private prepareModel() {\n        const overridesForm = this.f.get('overrides') as FormArray;\n        const expensesForm = this.f.get('expenses') as FormArray;\n        const overrides = [] as IOverride[];\n        const expenses = [] as IExpense[];\n\n        overridesForm.value.forEach((o:IOverride) => {\n            overrides.push({\n                overrideId: o.overrideId,\n                payrollDetailsId: o.payrollDetailsId,\n                agentId: o.agentId,\n                amount: o.amount,\n                units: o.units\n            });\n        });\n\n        expensesForm.value.forEach((e:IExpense) => {\n            expenses.push({\n                expenseId: e.expenseId,\n                payrollDetailsId: e.payrollDetailsId,\n                agentId: e.agentId,\n                amount: e.amount,\n                description: e.description,\n                expenseDate: e.expenseDate,\n                title: e.title\n            });\n        });\n\n        this.detail.overrides = overrides;\n        this.detail.expenses = expenses;\n\n        return this.detail;\n    }\n\n    private isNumericKeyPress(key) {\n        const numericKeys = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n        return numericKeys.includes(key);\n    }\n\n    private isNumeric(value:any):boolean {\n        return !isNaN(value - parseFloat(value));\n    }\n\n    private addOverrideFormItem() {\n        const control = this.fb.group({\n            overrideId: this.fb.control(''),\n            payrollDetailsId: this.fb.control(this.detail.payrollDetailsId),\n            agentId: this.fb.control('', [Validators.required]),\n            units: this.fb.control('', [Validators.required]),\n            amount: this.fb.control('', { validators: Validators.required, updateOn: 'blur' })\n        });\n\n        (<FormArray>this.f.get('overrides')).push(control);\n\n        this.detail.overrides.push({\n            overrideId: null,\n            payrollDetailsId: this.detail.payrollDetailsId,\n            agentId: this.detail.agentId,\n            units: null,\n            amount: null\n        });\n    }\n\n    private addExpenseFormItem() {\n        (<FormArray>this.f.get('expenses')).push(this.fb.group({\n            expenseId: this.fb.control(''),\n            payrollDetailsId: this.fb.control(this.detail.payrollDetailsId),\n            agentId: this.fb.control(this.detail.agentId),\n            title: this.fb.control(''),\n            description: this.fb.control(''),\n            amount: this.fb.control('', { validators: Validators.required, updateOn: 'blur' }),\n            expenseDate: this.fb.control('', [Validators.required])\n        }));\n        this.detail.expenses.push({\n            expenseId: null,\n            payrollDetailsId: this.detail.payrollDetailsId,\n            agentId: this.detail.agentId,\n            title: null,\n            description: null,\n            amount: null,\n            expenseDate: null\n        });\n    }\n\n    private buildFormArrays() {\n        this.createOverridesFormArray();\n        this.createExpensesFormArray();\n    }\n\n    private createForm():FormGroup {\n        return this.fb.group({\n            overrides: this.fb.array([]),\n            expenses: this.fb.array([])\n        });\n    }\n\n    private createOverridesFormArray() {\n        if (this.detail.overrides == null || this.detail.overrides.length == 0) return;\n        this.detail.overrides.forEach(o => {\n            (<FormArray>this.f.get('overrides')).push(this.fb.group({\n                overrideId: this.fb.control(o.overrideId),\n                payrollDetailsId: this.fb.control(o.payrollDetailsId),\n                agentId: this.fb.control(o.agentId, [Validators.required]),\n                units: this.fb.control(o.units, [Validators.required]),\n                amount: this.fb.control(o.amount, { validators: Validators.required, updateOn: 'blur' })\n            }));\n        });\n    }\n\n    private createExpensesFormArray() {\n        if (this.detail.expenses == null || this.detail.expenses.length == 0) return;\n        this.detail.expenses.forEach(e => {\n            const control = this.fb.group({\n                expenseId: this.fb.control(e.expenseId),\n                payrollDetailsId: this.fb.control(e.payrollDetailsId),\n                agentId: this.fb.control(e.agentId),\n                title: this.fb.control(e.title),\n                description: this.fb.control(e.description),\n                amount: this.fb.control(e.amount, { validators: Validators.required, updateOn: 'blur' }),\n                expenseDate: this.fb.control(e.expenseDate, [Validators.required])\n            });\n\n            (<FormArray>this.f.get('expenses')).push(control);\n        });\n    }\n\n}\n","\n<div mat-dialog-title class=\"d-flex justify-content-between\">\n    <h3>Paycheck Adjustments</h3>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <mat-tab-group [formGroup]=\"f\">\n\n        <!-- OVERRIDES TAB -->\n        <mat-tab label=\"Overrides\" formArrayName=\"overrides\" #overrideTab>\n            \n            <ng-container *ngFor=\"let o of detail.overrides; let i = index\">\n                <div class=\"row mt-4 mb-2\" [formGroupName]=\"i\">\n                    <div class=\"col-md-4\">\n                        <mat-form-field class=\"w-100\">\n                            <mat-select placeholder=\"Agent\" formControlName=\"agentId\" required>\n                                <mat-option *ngFor=\"let a of agents\" [value]=\"a.agentId\">\n                                    {{a.firstName}} {{a.lastName}}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"f.get(['overrides', i, 'agentId']).hasError('required')\">\n                                Please select an agent\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field class=\"w-100\">\n                            <input type=\"text\" matInput\n                                placeholder=\"No. of Units\"\n                                formControlName=\"units\" \n                                required />\n                            <mat-error *ngIf=\"f.get(['overrides', i, 'units']).hasError('required')\">\n                                Please enter a number of units\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-4 d-flex\">\n                        <div>\n                            <mat-form-field class=\"w-100\">\n                                <input type=\"text\" matInput\n                                    placeholder=\"Amount per Unit\"        \n                                    [value]=\"f.get(['overrides', i, 'amount']).value | currency\"                      \n                                    formControlName=\"amount\"\n                                    required />\n                                <mat-error *ngIf=\"f.get(['overrides', i, 'amount']).hasError('required')\">\n                                    Please enter an amount per unit\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <button type=\"button\"\n                            mat-icon-button\n                            *ngIf=\"detail.overrides[i].overrideId == null || detail.overrides[i].overrideId == 0\"\n                            (click)=\"removeUnsavedOverride(i)\"\n                        >\n                            <mat-icon>remove_circle_outline</mat-icon>\n                        </button>\n                    </div>\n                </div>\n                <mat-divider></mat-divider>\n            </ng-container>\n            <ng-container *ngIf=\"detail.overrides == null || detail.overrides.length == 0\">\n                <div class=\"row my-4\">\n                    <div class=\"col-md-12\">\n                        <h5 class=\"text-muted font-italic\">\n                            No overrides for this paycheck. Click the add button below if you'd like to add one.\n                        </h5>\n                    </div>\n                </div>\n            </ng-container>\n            \n        </mat-tab>\n\n        <!-- EXPENSES TAB -->\n        <mat-tab label=\"Expenses\" formArrayName=\"expenses\" #expenseTab>\n            \n            <ng-container *ngFor=\"let e of detail.expenses; let i = index\">\n                <ng-container [formGroupName]=\"i\">\n                    <div class=\"row mt-4\">\n                        <div class=\"col-md-5\">\n                            <mat-form-field class=\"w-100\">\n                                <input type=\"text\" matInput\n                                    placeholder=\"Title\"\n                                    formControlName=\"title\"\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-3\">\n                            <mat-form-field class=\"w-100\">\n                                <input type=\"text\" matInput\n                                    placeholder=\"Amount\"\n                                    [value]=\"f.get(['expenses', i, 'amount']).value | currency\"\n                                    formControlName=\"amount\"\n                                    required\n                                />\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-4 d-flex\">\n                            <div>\n                                <mat-form-field class=\"w-100\">\n                                    <input matInput\n                                        [matDatepicker]=\"expenseDatepicker\"\n                                        [max]=\"payCycle.endDate\"\n                                        placeholder=\"Date\"\n                                        formControlName=\"expenseDate\"\n                                        required\n                                    />\n                                    <mat-datepicker-toggle matSuffix [for]=\"expenseDatepicker\"></mat-datepicker-toggle>\n                                    <mat-datepicker #expenseDatepicker></mat-datepicker>\n                                </mat-form-field>\n                            </div>\n                            <button type=\"button\"\n                                mat-icon-button\n                                *ngIf=\"detail.expenses[i].expenseId == null || detail.expenses[i].expenseId == 0\"\n                                (click)=\"removeUnsavedExpense(i)\"\n                            >\n                                <mat-icon>remove_circle_outline</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"row mb-2\">\n                        <div class=\"col-md-12\">\n                            <mat-form-field class=\"w-100\">\n                                <textarea matInput \n                                    placeholder=\"Description\" \n                                    formControlName=\"description\"\n                                    rows=\"2\"\n                                ></textarea>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </ng-container>\n                <mat-divider></mat-divider>\n            </ng-container>\n            <ng-container *ngIf=\"detail.expenses == null || detail.expenses.length == 0\">\n                <div class=\"row my-4\">\n                    <div class=\"col-md-12\">\n                        <h5 class=\"text-muted font-italic\">\n                            No expenses for this paycheck. Click the add button below if you'd like to add one.\n                        </h5>\n                    </div>\n                </div>\n            </ng-container>\n\n        </mat-tab>\n\n    </mat-tab-group>\n</mat-dialog-content>\n<mat-dialog-actions class=\"d-flex justify-content-end\">\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"addAdjustment()\">\n        Add {{ getActiveTabTitle() }}\n    </button>\n    <ng-container *ngIf=\"f.dirty && f.touched\">\n        <div class=\"d-flex\" [@enter]>\n            <mat-divider inset=\"true\"></mat-divider>\n            <button type=\"button\" mat-button\n                color=\"warn\"\n                (click)=\"onNoClick()\"\n            >Cancel</button>\n            <button type=\"button\" mat-button\n                color=\"primary\"\n                (click)=\"saveForm()\"\n            >Save</button>\n        </div>\n    </ng-container>\n</mat-dialog-actions>","import {Component, OnInit, Input, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n    selector: 'vs-confirm-unpaid-selection-dialog',\n    templateUrl: './confirm-unpaid-selection-dialog.component.html',\n    styleUrls: ['./confirm-unpaid-selection-dialog.component.scss']\n})\nexport class ConfirmUnpaidSelectionDialogComponent implements OnInit {\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        public dialog: MatDialogRef<ConfirmUnpaidSelectionDialogComponent>\n    ) {}\n\n    ngOnInit() {}\n\n    confirmSales() {\n        this.dialog.close(this.data.sales);\n    }\n\n    cancelDialog() {\n        this.dialog.close();\n    }\n}\n","\n\n<h4 mat-dialog-title class=\"d-flex justify-content-between\">\n    <span>Are you sure?</span>\n    <button type=\"button\" mat-icon-button (click)=\"cancelDialog()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</h4>\n<mat-dialog-content>\n    You have selected sales with a status of \"unpaid\". Are you sure this is correct? \n</mat-dialog-content>\n<mat-dialog-actions class=\"justify-content-between\">\n    <button type=\"button\" mat-button (click)=\"cancelDialog()\">\n        <mat-icon>thumb_down</mat-icon> NO\n    </button>\n    <button type=\"button\" mat-stroked-button color=\"primary\" (click)=\"confirmSales()\">\n        <mat-icon>thumb_up</mat-icon> YES\n    </button>\n</mat-dialog-actions>\n","import {Component, OnInit, AfterViewInit, AfterContentInit, TemplateRef, ViewChild, ComponentRef} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PayCycle} from '@app/models/pay-cycle.model';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport { SessionService } from '@app/session.service';\nimport { User, DailySale, IAgent, PaidStatusType } from '@app/models';\nimport { Subject, Observable } from 'rxjs';\nimport { Moment } from 'moment';\nimport * as moment from 'moment';\nimport { MatButtonToggleChange } from '@angular/material/button-toggle';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSelectionList, MatListOption, MatSelectionListChange } from '@angular/material/list';\nimport { MatSelectChange } from '@angular/material/select';\nimport * as _ from 'lodash';\nimport { MessageService } from '@app/message.service';\nimport { PayCycleService } from '../../pay-cycle.service';\nimport { ConfirmUnpaidSelectionDialogComponent } from '../confirm-unpaid-selection-dialog/confirm-unpaid-selection-dialog.component';\n\n@Component({\n    selector: 'vs-edit-pay-cycle',\n    templateUrl: './edit-pay-cycle.component.html',\n    styleUrls: ['./edit-pay-cycle.component.scss']\n})\nexport class EditPayCycleComponent implements OnInit {\n    user:User;\n    form: FormGroup;\n    _cycle:PayCycle;\n    salesLoaded:boolean = false;\n    private _sales:DailySale[];\n    sales$:Subject<DailySale[]> = new Subject<DailySale[]>();\n    @ViewChild('sales', { static: true }) public salesList:MatSelectionList;\n    selectedSales:DailySale[];\n    agentsFilter:IAgent[];\n    hideSelectedOptions:boolean = false;\n\n\n    constructor(\n        private session:SessionService, \n        private service: PayCycleService, \n        private fb: FormBuilder,\n        private router:Router,\n        private dialog:MatDialog,\n        private msg:MessageService\n    ) {}\n\n    ngOnInit() {\n        this._cycle = this.service.cycle;\n        this.initPage();\n    }\n\n    isSelectedSale(sale:DailySale):boolean {\n        if(sale == null) return false;\n        const saleDate:Moment = moment(sale.saleDate);\n        return saleDate.isBetween(this._cycle.startDate, this._cycle.endDate, null, '[]');\n    }\n\n    toggleSelectAll(event:MatButtonToggleChange) {\n        this.salesList.options.forEach((item, i, a) => {\n            item.selected = event.source.checked;\n        });\n    }\n\n    private initPage():void {\n        if (this.salesLoaded) return;\n\n        if (this._cycle == null) {\n            this.router.navigate(['admin/pay']);\n            return;\n        }\n\n        this.session.getUserItem().subscribe(u => {\n            this.user = u;\n            this.service.getPayCycleSales(\n                this.user.sessionUser.sessionClient, \n                <string>this._cycle.startDate, \n                <string>this._cycle.endDate,\n                this._cycle.payCycleId\n            ).subscribe(sales => {\n                this._sales = sales;\n                this.sales$.next(sales);\n                this.salesLoaded = true;\n\n                this.handleSelectionChanges();\n                this.buildAgentFilter();\n            });\n        })\n    }\n\n    private createForm(): void {\n        this.form = this.fb.group({});\n    }\n\n    private handleSelectionChanges() {\n        this.salesList.selectionChange.subscribe((changes:MatSelectionListChange) => {\n            this.selectedSales = changes.source.selectedOptions.selected.map((option:MatListOption) => {\n                return option.value as DailySale;\n            });\n        });\n    }\n\n    private confirmUnpaidSelection(sales:DailySale[]):void {\n        this.dialog.open(ConfirmUnpaidSelectionDialogComponent, {\n            autoFocus: false,\n            width: '30vw',\n            data: {\n                sales: sales\n            }\n        })\n        .afterClosed()\n        .subscribe((confirmed:boolean) => {\n            if(confirmed)\n                this.handleConfirmedSave(sales);\n        });\n    }\n\n    private buildAgentFilter() {\n        let agents:IAgent[] = [];\n        this._sales.forEach((s, i, a) => {\n            if(_.includes(_.map(agents, a => a.agentId), s.agent.agentId)) return;\n            agents.push(s.agent);\n        });\n        this.agentsFilter = agents;\n    }\n\n    filterSalesByAgent(event:MatSelectChange):void {\n        if(event == null || event.value == null || event.value == \"\") {\n            this.sales$.next(this._sales);\n            return;\n        }\n        const filteredSales:DailySale[] = this._sales.filter(s => {\n            return s.agentId == (<IAgent>event.value).agentId;\n        });\n        this.sales$.next(filteredSales);\n    }\n\n    salePaidStatusDisplayText(sale:DailySale):string {\n        if(sale.paidStatus == PaidStatusType.unpaid)\n            return 'Sale is unpaid.';\n        if(sale.paidStatus == PaidStatusType.paid)\n            return 'Sale has been paid.';\n        if(sale.paidStatus == PaidStatusType.chargeback)\n            return 'Sale has been reversed and charged back.';\n        if(sale.paidStatus == PaidStatusType.repaid)\n            return 'Sale has been repaid.';\n    }\n\n    saveSalesList() {\n        this.filterSalesByAgent(null);\n\n        const sales = this.salesList.selectedOptions.selected.map(val => val.value);\n        const needsConfirmation:DailySale[] = sales.filter((s:DailySale) => s.paidStatus == PaidStatusType.unpaid || s.paidStatus == PaidStatusType.chargeback);\n\n        if(needsConfirmation.length)\n            this.confirmUnpaidSelection(sales);\n        else \n            this.handleConfirmedSave(sales);\n    }\n\n    handleConfirmedSave(sales:DailySale[]) {\n        const salesIds = sales.map(s => s.dailySaleId);\n\n        this._sales.forEach((s, i, a) => {\n            if(salesIds.includes(s.dailySaleId))\n                a[i].payCycleId = this._cycle.payCycleId;\n        });\n\n        this.service.updateDailySaleWithPayCycle(this.user.sessionUser.sessionClient, this._cycle.payCycleId, this._sales)\n            .subscribe(sales => {\n                this.msg.addMessage('Saved successfully!', 'dismiss', 1500);\n                setTimeout(() => this.router.navigate(['admin/pay/pay-cycles']), 1500);\n            });\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-header>\n                    <div mat-card-avatar>\n                        <mat-icon class=\"md-36\">assignment</mat-icon>\n                    </div>\n                    <mat-card-title class=\"d-flex justify-content-between\">\n                        <h4>\n                            Edit Open Payroll Cycle\n                            <ng-container *ngIf=\"salesLoaded\">\n                                [{{_cycle.startDate | date:'shortDate'}} - {{_cycle.endDate | date:'shortDate'}}]\n                            </ng-container>\n                        </h4>\n                        <!-- <button type=\"button\" mat-icon-button>\n                            <mat-icon>clear</mat-icon>\n                        </button> -->\n                    </mat-card-title>\n                    <mat-card-subtitle>\n                        Select sales that you would like included in this payroll cycle. We have pre-selected all sales by sale date that \n                        qualify and are within the payroll cycle's start and end dates. You may de-select sales you would like to exclude. \n                        If a sale is missing, you may want to ensure it hasn't been paid and is on the <a [routerLink]=\"['/daily-tracker']\">Sales Tracker</a>.\n                    </mat-card-subtitle>\n                </mat-card-header>\n                <mat-card-content>\n                    <div class=\"row\">\n                        <h5 class=\"col-md-4\">\n                            Select Sales\n                        </h5>\n                        <div class=\"col-md-8 d-flex justify-content-end align-items-baseline\">\n                            <div class=\"mr-2\">\n                                <mat-button-toggle #toggle (change)=\"toggleSelectAll($event)\">\n                                    {{toggle.checked ? 'Deselect All' : 'Select All'}}\n                                </mat-button-toggle>\n                            </div>\n                            <mat-form-field>\n                                <mat-label>Filter by Agent</mat-label>\n                                <mat-select (selectionChange)=\"filterSalesByAgent($event)\">\n                                    <mat-option value=\"\" class=\"text-muted\">Show All</mat-option>\n                                    <mat-option *ngFor=\"let a of agentsFilter\" [value]=\"a\">\n                                        {{a.firstName}} {{a.lastName}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <button type=\"button\" mat-button color=\"primary\" (click)=\"saveSalesList()\">\n                                <mat-icon>save</mat-icon> Save\n                            </button>\n                        </div>\n                    </div>\n                    <mat-selection-list #sales> \n                        <mat-list-option \n                            #option\n                            *ngFor=\"let asale of sales$|async\"\n                            [selected]=\"asale.payCycleId != null\"\n                            [value]=\"asale\"\n                            [class.hide]=\"hideSelectedOptions && option.selected\"\n                        >\n                            <div matLine class=\"d-flex justify-content-between\">\n                                <div class=\"font-weight-bold\" *ngIf=\"asale.contact != null; else noContact\">\n                                    {{asale?.contact.firstName}} {{asale?.contact.lastName}}\n                                </div>\n                                <ng-template #noContact>\n                                    <div class=\"text-muted\">\n                                        Looks like this sale might be missing some contact info.\n                                    </div>\n                                </ng-template>\n                                <span class=\"font-italic text-muted\">{{salePaidStatusDisplayText(asale)}}</span>\n                            </div>\n                            <div matLine class=\"text-muted\">\n                                <address>\n                                    {{asale.street}} {{asale.street2}}\n                                    {{asale.city}} {{asale.state}} {{asale.zip}}\n                                </address>\n                            </div>\n                            <div matLine class=\"font-italic\">\n                                Date: {{asale.saleDate | date:'shortDate'}}\n                            </div>\n                            <div matLine class=\"text-muted\">\n                                Agent: {{asale.agent.firstName}} {{asale.agent.lastName}}\n                            </div>\n                        </mat-list-option>\n                    </mat-selection-list>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n</div>","import {Component, OnInit, Inject} from '@angular/core';\nimport { PayCycle } from '@app/models/pay-cycle.model';\nimport { SessionService } from '@app/session.service';\nimport { User } from '@app/models';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { Moment } from 'moment';\nimport { PayCycleService } from '../../pay-cycle.service';\n\ninterface DialogData {\n    payCycle:PayCycle;\n}\n\n@Component({\n    selector: 'vs-pay-cycle-dialog',\n    templateUrl: './pay-cycle-dialog.component.html',\n    styleUrls: ['./pay-cycle-dialog.component.scss']\n})\nexport class PayCycleDialogComponent implements OnInit {\n    user:User;\n    isNewDialog = false;\n\n    form:FormGroup = this.createForm();\n\n    /** Used only to figure out the last date to blackout */\n    lastPayCycle:PayCycle;\n    payCycle:PayCycle;\n\n    minimumDate:Moment|string;\n\n    constructor(\n        public ref: MatDialogRef<PayCycleDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData,\n        private session:SessionService, \n        private service:PayCycleService,\n        private fb:FormBuilder\n    ) {\n        this.payCycle = this.data ? this.data.payCycle || null : null;\n        this.isNewDialog = this.payCycle == null;\n        this.patchForm(this.payCycle || {} as PayCycle);\n    }\n\n    ngOnInit() {\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n\n            this.service.getLastPayCycle(user.sessionUser.sessionClient)\n                .subscribe(lastCycle => {\n                    this.lastPayCycle = lastCycle;\n                    if (this.lastPayCycle == null) return;\n                    const endDate = moment(this.lastPayCycle.endDate);\n                    if (endDate.isValid())\n                        this.minimumDate = endDate.add(1, 'd');\n                });\n        });\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    /** save the form */\n    saveForm() {\n        if (this.form.invalid) return;\n\n        const model = this.prepareModel();\n\n        this.ref.close(model);\n    }\n\n    private createForm() {\n        const cycle = this.payCycle || {} as PayCycle;\n        return this.fb.group({\n            startDate: this.fb.control(cycle.startDate || '', [Validators.required]),\n            endDate: this.fb.control(cycle.endDate || '', [Validators.required])\n        });\n    }\n\n    private patchForm(patch:PayCycle) {\n        this.form.patchValue({\n            startDate: patch.startDate,\n            endDate: patch.endDate\n        });\n    }\n\n    private prepareModel():PayCycle {\n        return {\n            payCycleId: null,\n            startDate: this.form.value.startDate.format('YYYY-MM-DD'),\n            endDate: this.form.value.endDate.format('YYYY-MM-DD'),\n            isPending: false,\n            isClosed: false,\n            isLocked: false\n        }\n    }\n\n}\n","\n<h2 mat-dialog-title>Create Payroll Cycle</h2>\n<div mat-dialog-content [formGroup]=\"form\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <mat-form-field>\n                <input type=\"text\" \n                    matInput \n                    [matDatepicker]=\"startDatepicker\" \n                    formControlName=\"startDate\" \n                    placeholder=\"Start Date\"\n                    required\n                />\n                <mat-datepicker-toggle [for]=\"startDatepicker\" matSuffix></mat-datepicker-toggle>\n                <mat-datepicker #startDatepicker></mat-datepicker>\n                <mat-error *ngIf=\"form.get('startDate').hasError('required')\">\n                    Please select a start date.\n                </mat-error>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-6\">\n            <mat-form-field>\n                <input type=\"text\" \n                    matInput \n                    [matDatepicker]=\"endDatepicker\" \n                    formControlName=\"endDate\"\n                    placeholder=\"End Date\"\n                    required\n                />\n                <mat-datepicker-toggle [for]=\"endDatepicker\" matSuffix></mat-datepicker-toggle>\n                <mat-datepicker #endDatepicker></mat-datepicker>\n                <mat-error *ngIf=\"form.get('endDate').hasError('required')\">\n                    Please select an end date.\n                </mat-error>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n<div mat-dialog-actions class=\"d-flex justify-content-between\">\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"saveForm()\">\n        <mat-icon inline=\"true\">save</mat-icon>\n        <span>Save</span>\n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n\n\n@Component({\n    selector: 'vs-pay-cycle-tutorial-dialog',\n    templateUrl: './pay-cycle-tutorial-dialog.component.html',\n    styleUrls: ['./pay-cycle-tutorial-dialog.component.scss']\n})\nexport class PayCycleTutorialDialogComponent implements OnInit {\n\n    constructor(\n        public ref: MatDialogRef<PayCycleTutorialDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any\n    ) {}\n\n    ngOnInit() {}\n\n    onNoClick = () => this.ref.close();\n\n}\n","<h2 mat-dialog-title>How to Use Pay Runs</h2>\n\n<div mat-dialog-content>\n    <p>\n        Glad to see you've made it here! Now, you have to tackle creating a Pay Run. \n        Don't worry, it's much easier than it seems and you'll be a professional in no time.  \n    </p>\n    <p>\n        You start by clicking the \"+ Payroll\" button on the Pay Runs header bar of this page. \n        <br />\n        Enter your start and end dates of the entire time period for which you want any current paychecks to be included. \n    </p>\n    <p>\n        The app allows you to designate the timeframe and doesn't restrict you. \n        It is totally up to you to how you would like those dates to work.\n    </p>\n</div>\n\n<div mat-dialog-actions class=\"d-flex justify-content-end\">\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Close</button>\n</div>","import {Component, OnInit, AfterViewInit, OnDestroy} from '@angular/core';\nimport { User, ICampaign, PayrollDetails, Payroll } from '@app/models';\nimport { SessionService } from '@app/session.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { MessageService } from '@app/message.service';\nimport { PayCycle } from '@app/models/pay-cycle.model';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, forkJoin, Subscription } from 'rxjs';\nimport { PayCycleDialogComponent } from './components/pay-cycle-dialog/pay-cycle-dialog.component';\nimport { Moment } from 'moment';\nimport * as moment from 'moment';\nimport { map, share, shareReplay } from 'rxjs/operators';\nimport { PayrollService } from '@app/payroll/payroll.service';\nimport { PayCycleService } from './pay-cycle.service';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { AgentService } from '@app/agent/agent.service';\nimport { ISalesPairing } from '@app/models/sales-pairings.model';\nimport { PayCycleTutorialDialogComponent } from './components/pay-cycle-tutorial-dialog/pay-cycle-tutorial-dialog.component';\n\nenum DropListType {\n    Todo,\n    Locked,\n    Closed\n}\n\n@Component({\n    selector: 'vs-pay-cycle',\n    templateUrl: './pay-cycle.component.html',\n    styleUrls: ['./pay-cycle.component.scss']\n})\nexport class PayCycleComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    today:Moment = moment();\n    user:User;\n    campaigns:ICampaign[];\n    private _cycles:PayCycle[];\n    displayCycles:BehaviorSubject<PayCycle[]> = new BehaviorSubject<PayCycle[]>([]);\n    showClosed = false;\n\n    todoCycles:PayCycle[];\n    lockedCycles:PayCycle[];\n    closedCycles:PayCycle[];\n\n    salesPairings:ISalesPairing[];\n\n    private pageLoadSubscription:Subscription;\n\n    constructor(\n        private session:SessionService,\n        private agentService:AgentService,\n        private payCycleService:PayCycleService,\n        private payrollService:PayrollService,\n        private dialog:MatDialog,\n        private campaignService:CampaignService,\n        private msg:MessageService,\n        private router:Router\n    ) {}\n\n    ngOnInit() {\n        this.session.showLoader();\n    }\n\n    ngAfterViewInit() {\n        this.session.getUserItem()\n            .pipe(share())\n            .subscribe(u => {\n                if (u == null) return;\n                this.user = u;\n                const clientId = this.user.sessionUser.sessionClient;\n\n                this.pageLoadSubscription = forkJoin(\n                    this.campaignService.getCampaignsByClient(clientId).pipe(share()),\n                    this.payCycleService.getPayCycles(clientId).pipe(share()),\n                    this.agentService.getSalesPairingsByClient(clientId).pipe(share())\n                )\n                .subscribe(([campaigns, cycles, pairings]) => {\n                    this.campaigns = campaigns;\n                    this._cycles = cycles;\n                    this.salesPairings = pairings;\n\n                    this._filterCycles();\n                    this.session.hideLoader();\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.pageLoadSubscription.unsubscribe();\n    }\n\n    drop(event:CdkDragDrop<PayCycle[]>, type:DropListType) {\n\n        /** Simply reorganizing the list... we don't support manual ordering right now */\n        if (event.previousContainer === event.container) {\n            moveItemInArray<PayCycle>(event.container.data, event.previousIndex, event.currentIndex);\n        } else {\n            this.session.showLoader();\n\n            transferArrayItem<PayCycle>(event.previousContainer.data,\n                event.container.data,\n                event.previousIndex,\n                event.currentIndex);\n\n            const cycle = event.container.data[event.currentIndex];\n\n            if (type == DropListType.Todo) {\n                cycle.isPending = true;\n                cycle.isLocked = false;\n                cycle.isClosed = false;\n            } else if (type == DropListType.Locked) {\n                cycle.isLocked = true;\n                cycle.isClosed = false;\n            } else if (type == DropListType.Closed) {\n                cycle.isPending = false;\n                cycle.isLocked = false;\n                cycle.isClosed = true;\n            }\n\n            this.payCycleService.updatePayCycle(this.user.sessionUser.sessionClient, cycle.payCycleId, cycle)\n                .subscribe(result => {\n                    this._cycles.forEach((c, i, a) => {\n                        if (c.payCycleId != result.payCycleId) return;\n                        a[i] = result;\n                    });\n\n                    this.session.hideLoader();\n\n                    /** This will run logic to make available in paycheck list */\n                    // if (type == DropListType.Locked) this.processPayroll(result); // commented for now, changed to manual process button\n                });\n        }\n    }\n\n    private _filterCycles() {\n        this.todoCycles = this._cycles.filter(c => !c.isClosed && !c.isLocked)\n            .sort((a, b) => <any>new Date(<any>b.startDate) - <any>new Date(<any>a.startDate));\n        this.lockedCycles = this._cycles.filter(c => !c.isClosed && c.isLocked)\n            .sort((a, b) => <any>new Date(<any>b.startDate) - <any>new Date(<any>a.startDate));\n        this.closedCycles = this._cycles.filter(c => c.isClosed)\n            .sort((a, b) => <any>new Date(<any>b.startDate) - <any>new Date(<any>a.startDate));\n\n        if (!this.todoCycles.length && !this.lockedCycles.length && !this.closedCycles.length) {\n            this.dialog.open(PayCycleTutorialDialogComponent, {\n                width: '50vw'\n            })\n            .afterClosed()\n            .subscribe((result) => {\n\n            });\n        }\n    }\n\n    getHumanReadableDuration(cycle:PayCycle):string {\n        return this.today.to(cycle.createdAt);\n    }\n\n    addPayCycle() {\n        this.dialog.open(PayCycleDialogComponent, {\n            width: '50vw'\n        })\n        .afterClosed()\n        .subscribe((result:PayCycle) => {\n            if (result == null) return;\n\n            this.payCycleService.savePayCycle(this.user.sessionUser.sessionClient, result)\n                .subscribe(cycle => {\n                    this.msg.addMessage('Successfully created pay cycle!', 'dismiss', 5000);\n                    this._cycles.push(cycle);\n                    this.displayCycles.next(this._cycles);\n\n                    this._filterCycles();\n                });\n        });\n    }\n\n    getPayrollEditDate(cycle:PayCycle) {\n        return cycle.payrolls[0].updatedAt;\n    }\n\n    getBorderColor(cycle:PayCycle, borderDirection:string = 'left') {\n        if(this.isPayCycleDue(cycle))\n            return `${borderDirection}-border-danger`;\n        return cycle != null && cycle.payrolls != null && cycle.payrolls.length > 0 \n            ? `${borderDirection}-border-success`\n            : `${borderDirection}-border-primary`;\n    }\n\n    getButtonColor(cycle:PayCycle) {\n        return !(cycle != null && cycle.payrolls != null && cycle.payrolls.length > 0 )\n            ? 'primary'\n            : '';\n    }\n\n    getEditButtonColor(cycle:PayCycle) {\n        return cycle != null && cycle.payrolls != null && cycle.payrolls.length > 0\n            ? ''\n            : 'primary';\n    }\n\n    private getActive():void {\n        // this.displayCycles.next(this._cycles.filter(c => !c.isClosed));\n    }\n\n    private getArchived():void {\n        this.displayCycles.next(this._cycles.filter(c => c.isClosed));\n    }\n\n    getCycleStatus(cycle:PayCycle):string {\n        let message = '';\n\n        if (cycle.payrolls != null && cycle.payrolls.length > 0)\n            return 'Complete. Ready to release.';\n\n        if (moment(cycle.endDate).isSameOrBefore(moment(), 'day'))\n            return 'Due for release.';\n\n        if (!cycle.isPending && !cycle.isClosed) {\n            message = 'Get started.';\n        } else if (cycle.isPending && !cycle.isClosed) {\n            message = 'Pending.';\n        } else if (cycle.isClosed) {\n            message = 'Closed with no sales.';\n        }\n        return message;\n    }\n\n    isPayCycleDue(cycle:PayCycle):boolean {\n        return moment(cycle.endDate).isSameOrBefore(moment(), 'days')\n            && (cycle.payrolls == null || cycle.payrolls.length == 0);\n    }\n\n    editPayCycle(cycle:PayCycle):void {\n        this.payCycleService.cycle = cycle;\n        this.router.navigate(['admin/pay/pay-cycles/edit', cycle.payCycleId]);\n    }\n\n    closePayCycle(cycle:PayCycle):void {\n        this.session.showLoader();\n\n        cycle.isPending = false;\n        cycle.isClosed = true;\n\n        this.updatePayCycle(cycle);\n    }\n\n    openPayCycle(cycle:PayCycle):void {\n        this.session.showLoader();\n\n        cycle.isPending = true;\n        cycle.isClosed = false;\n\n        this.updatePayCycle(cycle);\n    }\n\n    isBeforeEndDate(cycle:PayCycle):boolean {\n        return moment(cycle.endDate).isBefore(this.today);\n    }\n\n    reopenPayroll(cycle:PayCycle):void {\n        cycle.isClosed = false;\n\n        const payrollIds = cycle.payrolls == null ? [] : cycle.payrolls.map(p => p.payrollId.toString());\n        this.payCycleService.deletePayCyclePayrolls(this.user.sessionUser.sessionClient, cycle.payCycleId, payrollIds)\n            .subscribe(result => {\n                if (!result) {\n                    this.msg.addMessage(`\n                        Sorry, we were unable to remove the payrolls. You need to delete payrolls associated with \n                        PayCycleId --> ${cycle.payCycleId}\n                    `, 'dismiss');\n                }\n\n                this.updatePayCycle(cycle);\n            });\n    }\n\n    /**\n     * Begins the workflow of processing payroll. Opens the dialog to allow user to select a \"pay date\" \n     * and then creates the relationship to the this cycle, calculates total information for users, \n     * and finally closes the cycle.\n     * \n     * @param cycle \n     */\n    processPayroll(cycle:PayCycle) {\n\n        /** CHECK FOR SOFT DELETED PAYROLL AND PAYROLL DETAILS */\n        this.payCycleService.checkAndOpenSoftDeletedPayCycleAffiliates(\n            this.user.sessionUser.sessionClient,\n            cycle.payCycleId\n        ).subscribe(result => {\n\n            if (result) {\n                cycle.isClosed = true;\n                this.updatePayCycle(cycle);\n            } else {\n                this.createPayrollsByCampaign(cycle);\n            }\n        });\n    }\n\n    private createPayrollsByCampaign(cycle:PayCycle) {\n        this.payCycleService.getPayCycleSales(\n            this.user.sessionUser.sessionClient, \n            cycle.startDate as string, \n            cycle.endDate as string, \n            cycle.payCycleId\n            ).pipe(\n                map(sales => {\n                    const campaigns = sales.map(s => s.campaignId).filter((s, i, a) => a.indexOf(s) === i);\n                    const payrollResults:Payroll[] = [];\n\n                    campaigns.forEach(c => {\n                        const campaign = this.campaigns.find(camp => camp.campaignId === c);\n                        const filteredSales = sales.filter(s => s.campaignId == c);\n                        const payroll:Payroll = {\n                            payrollId: null,\n                            payCycleId: cycle.payCycleId,\n                            campaignId: c,\n                            utilityId: 0,\n                            weekEnding: cycle.endDate,\n                            isAutomated: false,\n                            isReleased: false,\n                            details: <PayrollDetails[]>[]\n                        };\n                        \n                        const uniqueAgents = filteredSales.map(fs => fs.agentId).filter((fs, i, a) => a.indexOf(fs) === i);\n                        \n                        uniqueAgents.forEach(ua => {\n                            const pairing = this.salesPairings.find(sp => sp.campaignId == c && sp.agentId == ua);\n                            const commission = pairing != null ? pairing.commission : null;\n                            const agentSales = filteredSales.filter(fs => fs.agentId == ua && fs.payCycleId == cycle.payCycleId);\n                            const grossTotal = agentSales.length * (commission || campaign.compensation || 0);\n\n                            /** \n                             * TODO:\n                             * how do we figure this out? this might need to be a server side calc if \n                             * the company has \"taxes\" turned on? \n                             */\n                            const taxes = 0;\n                            const netTotal = grossTotal - taxes;\n\n                            /** push our payroll detail to the details property on the current payroll we're creating */\n                            payroll.details.push({\n                                payrollDetailsId: null,\n                                payrollId: null,\n                                agentId: ua,\n                                sales: agentSales.length,\n                                grossTotal: grossTotal,\n                                taxes: taxes,\n                                netTotal: netTotal,\n                                modifiedBy: this.user.id,\n                                createdAt: moment(),\n                                updatedAt: moment()\n                            });\n                        });\n\n                        payrollResults.push(payroll);\n                    });\n\n                    return payrollResults;\n                })\n            )\n            .subscribe(sales => {\n                this.payrollService.savePayrollList(this.user.sessionUser.sessionClient, sales)\n                    .subscribe(payrolls => {\n                        this.msg.addMessage('Successfully processed payroll.', 'dismiss', 2500);\n                        \n                        if (cycle.payrolls != null && cycle.payrolls.length)\n                            cycle.payrolls.concat(payrolls);\n                        else \n                            cycle.payrolls = payrolls;\n\n                        // if we get here, we've successfully process payroll,\n                        // now we are going to close the pay cycle\n                        cycle.isClosed = true;\n                        this.updatePayCycle(cycle);\n                    });\n            });\n    }\n\n    private updatePayCycle(cycle:PayCycle):void {\n        this.payCycleService.updatePayCycle(this.user.sessionUser.sessionClient, cycle.payCycleId, cycle)\n            .subscribe(payCycle => {\n                this.session.hideLoader();\n                this._cycles.forEach((c, i, a) => {\n                    if (payCycle.payCycleId != c.payCycleId) return;\n                    a[i] = payCycle;\n                });\n\n                this._filterCycles();\n            });\n    }\n\n    switchDisplay():void {\n        this.showClosed = !this.showClosed;\n        if (this.showClosed)\n            this.getArchived();\n        else\n            this.getActive();\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row mb-4\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content class=\"d-flex justify-content-between\">\n                    <h3>\n                        <span>Pay Runs</span>\n                    </h3>\n                    <div>\n                        <button type=\"button\" mat-stroked-button color=\"primary\" (click)=\"addPayCycle()\">\n                            <mat-icon inline=\"true\">add</mat-icon>\n                            <span>Payroll</span>\n                        </button>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n\n    <!-- DUE FOR RELEASE -->\n    <div class=\"row\" cdkDropListGroup>\n        <div class=\"col-md-4\" *ngIf=\"todoCycles\">\n            <mat-card class=\"border-top-primary\">\n                <mat-card-title class=\"d-flex justify-content-center mb-3 pb-2 border-bottom\">\n                    <mat-icon class=\"mr-2\">autorenew</mat-icon>\n                    <span>In Progress</span>\n                </mat-card-title>\n                <mat-card-content>\n                    <div class=\"list-group\" cdkDropList #todoList=\"cdkDropList\" [cdkDropListData]=\"todoCycles\"\n                        (cdkDropListDropped)=\"drop($event, 0)\">\n                        <div *ngFor=\"let cycle of todoCycles as cycles\" class=\"list-group-item list-group-item-action\" cdkDrag>\n                            <!-- list group item heading -->\n                            <div class=\"d-flex w-100 justify-content-between align-items-center\">\n                                <h5 class=\"mb-1\">\n                                    {{ cycle.isPending ? 'Pending' : 'Not Started' }}\n                                    <small class=\"text-muted font-weight-normal\"> Run #: {{ cycle.payCycleId }}</small>\n                                </h5>\n                                <button type=\"button\" mat-icon-button (click)=\"editPayCycle(cycle)\">\n                                    <mat-icon>launch</mat-icon>\n                                </button>\n                            </div>\n                            <p class=\"mb-1\">From: {{ cycle.startDate | date:'shortDate' }}</p>\n                            <p class=\"mb-1\">To: {{ cycle.endDate | date:'shortDate' }}</p>\n                            <div class=\"d-flex w-100\" [class.justify-content-between]=\"cycle.payrolls?.length\"\n                                [class.justify-content-end]=\"!cycle.payrolls?.length\">\n                                <small *ngIf=\"cycle?.payrolls?.length\">\n                                    {{ cycle.payrolls.length }} Paychecks\n                                </small>\n                                <small>{{ getHumanReadableDuration(cycle) }}</small>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <ng-template #noTodoCycles>\n                        <h5 class=\"text-muted font-italic\">Click \"+ Payroll\" to Start.</h5>\n                    </ng-template> -->\n                </mat-card-content>\n            </mat-card>\n        </div>\n\n        <div class=\"col-md-4\" *ngIf=\"lockedCycles\">\n            <mat-card class=\"border-top-secondary\">\n                <mat-card-title class=\"d-flex justify-content-center pb-2 mb-3 border-bottom\">\n                    <mat-icon class=\"mr-2\">lock</mat-icon>\n                    <span>Locked</span>\n                </mat-card-title>\n                <mat-card-content>\n                    <div class=\"list-group\" cdkDropList #lockedList=\"cdkDropList\" [cdkDropListData]=\"lockedCycles\"\n                        (cdkDropListDropped)=\"drop($event, 1)\">\n                        <a *ngFor=\"let cycle of lockedCycles as cycles\" [routerLink]=\"\" \n                            class=\"list-group-item list-group-item-action\" cdkDrag>\n                            <!-- list group item heading -->\n                            <div class=\"d-flex justify-content-between align-items-center\">\n                                <h5 class=\"mb-1\">\n                                    Locked\n                                    <small class=\"text-muted font-weight-normal\"> Run #: {{ cycle.payCycleId }}</small>\n                                </h5>\n                                <button type=\"button\" mat-icon-button>\n                                    <mat-icon>locked</mat-icon>\n                                </button>\n                            </div>\n                            <div class=\"d-flex justify-content-between\">\n                                <div>\n                                    <p class=\"mb-1\">From: {{ cycle.startDate | date:'shortDate' }}</p>\n                                    <p class=\"mb-1\">To: {{ cycle.endDate | date:'shortDate' }}</p>\n                                    <small *ngIf=\"cycle.payrolls?.length\">\n                                        {{ cycle.payrolls.length }} Paychecks\n                                    </small>\n                                </div>\n                                <div class=\"d-flex flex-column justify-content-end\">\n                                    <button type=\"button\" mat-stroked-button color=\"primary\" class=\"p-0\" \n                                        (click)=\"processPayroll(cycle)\" *ngIf=\"user?.role.role > 5\">\n                                        Process\n                                    </button>\n                                    <small>{{ getHumanReadableDuration(cycle) }}</small>\n                                </div>\n                            </div>\n                        </a>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n\n        <div class=\"col-md-4\" *ngIf=\"closedCycles\">\n            <mat-card class=\"border-top-dark\">\n                <mat-card-title class=\"d-flex justify-content-center mb-3 pb-2 border-bottom\">\n                    <mat-icon class=\"mr-2\">done_all</mat-icon>\n                    <span>Completed</span>\n                </mat-card-title>\n                <mat-card-content>\n                    <div class=\"list-group\">\n                        <ng-container *ngFor=\"let cycle of closedCycles as cycles\">\n                            <div class=\"list-group-item list-group-item-action\">\n                                <!-- list group item heading -->\n                                <div class=\"d-flex w-100 justify-content-between\">\n                                    <h5 class=\"mb-1\">\n                                        Closed\n                                        <small class=\"text-muted font-weight-normal\"> Run #: {{ cycle.payCycleId }}</small>\n                                    </h5>\n                                    <mat-icon>check_circle</mat-icon>\n                                </div>\n                                <div class=\"d-flex justify-content-between\">\n                                    <div>\n                                        <p class=\"mb-1\">From: {{ cycle.startDate | date:'shortDate' }}</p>\n                                        <p class=\"mb-1\">To: {{ cycle.endDate | date:'shortDate' }}</p>\n                                        <small *ngIf=\"cycle.payrolls?.length\">\n                                            {{ cycle.payrolls.length }} Paychecks\n                                        </small>\n                                    </div>\n                                    <div class=\"d-flex flex-column justify-content-end\">\n                                        <button type=\"button\" mat-button color=\"warn\" class=\"p-0\" \n                                            (click)=\"reopenPayroll(cycle)\" *ngIf=\"user?.role.role > 6\">\n                                            Open\n                                        </button>\n                                        <small>{{ getHumanReadableDuration(cycle) }}</small>\n                                    </div>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    \n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport { Observable, Subject, ReplaySubject } from 'rxjs';\nimport { PayCycle } from '@app/models/pay-cycle.model';\nimport { environment } from '@env/environment';\nimport { DailySale } from '@app/models';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PayCycleService {\n\n    private readonly api = environment.apiUrl;\n\n    private _cycle:PayCycle;\n    cycle$:Subject<PayCycle> = new Subject<PayCycle>();\n\n    constructor(private http: HttpClient) {}\n\n    /** HTTP CALLS */\n\n    getPayCycles(clientId:number, includeClosed = false):Observable<PayCycle[]> {\n        return this.http.get<PayCycle[]>(`${this.api}api/clients/${clientId}/pay-cycles/include-closed/${includeClosed}`);\n    }\n\n    // clients/{clientId}/pay-cycles/{payCycleId}/existing-pay-cycle-affiliates\n    checkAndOpenSoftDeletedPayCycleAffiliates(clientId:number, payCycleId:number):Observable<boolean> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/${payCycleId}/existing-pay-cycle-affiliates`;\n        return this.http.get<boolean>(url);\n    }\n\n    getSalesByDateRange(clientId:number, start:string, end:string, includeClosed = false):Observable<DailySale[]> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/daily-sales`;\n        return this.http.get<DailySale[]>(url, { \n            params: new HttpParams({\n                fromObject: {\n                    start: start,\n                    end: end,\n                    includeClosed: includeClosed.toString()\n                }\n            })\n        });\n    }\n\n    getPayCycleSales(clientId:number, start:string, end:string, payCycleId:number = null):Observable<DailySale[]> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/${payCycleId}`;\n        return this.http.get<DailySale[]>(url, {\n            params: new HttpParams({\n                fromObject: {\n                    start: start,\n                    end: end\n                }\n            })\n        });\n    }\n\n    /**\n     * System admin action only, this removes payrolls if someone processed payroll when they shouldn't have.\n     * \n     * @param client \n     * @param payCycleId \n     */\n    deletePayCyclePayrolls(clientId:number, payCycleId:number, payrollIds:string[]):Observable<boolean> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/${payCycleId}/payrolls`;\n        let params = new HttpParams();\n\n        payrollIds.forEach(p => {\n            params = params.append('ids[]', p);\n        });\n        \n        return this.http.delete<boolean>(url, { params: params });\n    }\n\n    updatePayCycle(clientId:number, payCycleId:number, dto:PayCycle):Observable<PayCycle> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/${payCycleId}`;\n        return this.http.post<PayCycle>(url, {\n            cycle: dto\n        });\n    }\n\n    updateDailySaleWithPayCycle(clientId:number, payCycleId:number, sales:DailySale[]):Observable<DailySale[]> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/${payCycleId}/sales`;\n        return this.http.post<DailySale[]>(url, {\n            sales: sales\n        });\n    }\n\n    getLastPayCycle(clientId:number):Observable<PayCycle> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles/last`;\n        return this.http.get<PayCycle>(url);\n    }\n\n    savePayCycle(clientId:number, dto:PayCycle):Observable<PayCycle> {\n        const url = `${this.api}api/clients/${clientId}/pay-cycles`;\n        return this.http.post<PayCycle>(url, dto);\n    }\n\n    /** INTERNAL API CALLS */\n\n    /** GETTER & SETTERS */\n\n    get cycle():PayCycle {\n        return this._cycle;\n    }\n    set cycle(value:PayCycle) {\n        this._cycle = value;\n        this.cycle$.next(this._cycle);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable, Observer } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport { ILocalStorage, User } from '@app/models';\nimport * as moment from 'moment';\nimport { environment } from '@env/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaycheckDetailGuard implements CanActivate {\n\n    constructor(private session:SessionService, private router:Router) {}\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        return Observable.create((observer:Observer<boolean>) => \n            this.session.isUserAuthenticated()\n                .subscribe((store:ILocalStorage<User>) => {\n                    const matchesEnvHeadless = next.queryParams.headless == environment.headless;\n\n                    if (store != null && store.expires > moment().valueOf()) {\n                        observer.next(true);\n                        observer.complete();\n                    } else if (matchesEnvHeadless) {\n                        // we allow user to pass if the headless param matches environment, because we know \n                        // that it is coming from our embedded code \n                        observer.next(true);\n                        observer.complete();\n                    } else {\n                        this.session.navigateQueue.push(state.url);\n                        this.router.navigate(['login']);\n                        observer.next(false);\n                        observer.complete();\n                    }\n                }));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRouteSnapshot, ActivatedRoute } from '@angular/router';\nimport { PayrollDetails, User, IClient, DailySale, IOverride, IExpense, Payroll } from '@app/models';\nimport { BehaviorSubject, forkJoin } from 'rxjs';\nimport { SessionService } from '@app/session.service';\nimport { DailySaleTrackerService } from '@app/daily-sale-tracker/daily-sale-tracker.service';\nimport { AgentService } from '@app/agent/agent.service';\nimport { PaycheckDetailService } from './paycheck-detail.service';\n\n@Component({\n    selector: 'vs-paycheck-detail',\n    templateUrl: './paycheck-detail.component.html',\n    styleUrls: ['./paycheck-detail.component.scss']\n})\nexport class PaycheckDetailComponent implements OnInit {\n\n    user:User;\n    client:IClient;\n    detail$ = new BehaviorSubject<PayrollDetails>(null);\n\n    sales:DailySale[];\n    saleColumns = ['no', 'saleDate', 'customerName', 'address', 'commissionable', 'amount'];\n\n    overrides:IOverride[];\n    overrideColumns = ['agentName', 'noSales', 'commission', 'total'];\n\n    expenses:IExpense[];\n    expenseColumns = ['date', 'title', 'description', 'amount'];\n\n    summary:PayrollDetails[];\n    summaryColumns = ['spacer', 'titleColumn', 'total'];\n\n    constructor(\n        private route:ActivatedRoute, \n        private session:SessionService, \n        private dailySaleService:DailySaleTrackerService,\n        private agentService:AgentService,\n        private paycheckDetailService:PaycheckDetailService\n    ) {}\n\n    ngOnInit() {\n        this.route.data.subscribe(data => {\n            const detailData:PayrollDetails = data.data;\n            this.detail$.next(data.data);\n            this.overrides = detailData.overrides;\n            this.expenses = detailData.expenses;\n            this.summary = [detailData];\n\n            this.initializeComponent(detailData);\n        });\n    }\n\n    getPrintablePDF() {\n        this.session.showLoader();\n        this.paycheckDetailService.generatePdf(this.user.sessionUser.sessionClient, this.detail$.getValue().payrollDetailsId)\n            .subscribe(result => {\n                this.session.hideLoader();\n                \n                const byteChars = atob(result.data);\n                const byteNumbers = [byteChars.length];\n                for (let i = 0; i < byteChars.length; i++) {\n                    byteNumbers[i] = byteChars.charCodeAt(i);\n                }\n\n                const byteArray = new Uint8Array(byteNumbers);\n                const file = new Blob([byteArray], { type: 'application/pdf;base64' });\n                const fileUrl = URL.createObjectURL(file);\n                window.open(fileUrl);\n            });\n    }\n\n    private initializeComponent(detailData:PayrollDetails) {\n        this.session.getUserItem().subscribe(u => {\n            this.user = u;\n\n            /** THIS IS THE HEADLESS PDF LOGIC, THIS IS ONLY GETS HIT FROM PUPPETEER API */\n            if (this.user == null) {\n                const payload = this.paycheckDetailService.headlessPayload;\n                this.user = payload.user;\n                this.client = <any>this.user.selectedClient;\n\n                payload.sales.forEach(s => {\n                    const pairing = payload.pairings.find(p => p.agentId == s.agentId && s.campaignId == p.campaignId);\n                    if (pairing == null || pairing.commission == null) return;\n                    s.campaign.compensation = pairing.commission;\n                });\n\n                this.sales = payload.sales;\n\n                (<any>document.getElementsByTagName('mat-toolbar')[0]).style.opacity = 0;\n                (<any>document.getElementsByClassName('print-button')[0]).style.opacity = 0;\n                (<any>document.getElementsByClassName('page-header-accent')[0]).style.borderStyle = 'unset';\n                (<any>document.getElementsByClassName('page-header-accent')[0]).style.marginBottom = 0;\n                (<any>document.getElementsByClassName('border-top-primary')[0]).style.borderStyle = 'unset';\n            } else {\n                this.client = this.user.clients.find(c => c.clientId == this.user.sessionUser.sessionClient);\n\n                forkJoin(\n                    this.dailySaleService.getPaycheckDetailSales(this.client.clientId, detailData.payroll.payCycleId),\n                    this.agentService.getSalesPairingsByClient(this.client.clientId)\n                ).subscribe(([sales, pairings]) => {\n                    \n                    sales.forEach(s => {\n                        const pairing = pairings.find(p => p.agentId == s.agentId && s.campaignId == p.campaignId);\n                        if (pairing == null || pairing.commission == null) return;\n                        s.campaign.compensation = pairing.commission;\n                    });\n    \n                    this.sales = sales;\n\n                    const detail = this.detail$.getValue();\n                    if (detail.payroll == null && this.sales.length) {\n                        detail.payroll = {\n                            campaign: this.sales[0].campaign\n                        } as Payroll;\n                        this.detail$.next(detail);\n                    }\n                });\n            }\n        });\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <div mat-card-title class=\"w-100 d-flex justify-content-between\">\n                    <h3>Income Statement</h3>\n                    <button type=\"button\" mat-button class=\"print-button\" (click)=\"getPrintablePDF()\">\n                        <mat-icon>print</mat-icon>\n                        <span>Print</span>\n                    </button>\n                </div>\n                <mat-card-content></mat-card-content>\n                <!-- <mat-card-content class=\"d-flex justify-content-between\">\n                    <h3>\n                        Income Statement\n                    </h3>\n                    <div>\n                        <mat-slide-toggle [checked]=\"showClosed\" (change)=\"switchDisplay()\" class=\"my-0 mr-2\">\n                            Show Closed\n                        </mat-slide-toggle>\n                        <button type=\"button\" mat-stroked-button color=\"primary\" (click)=\"addPayCycle()\">\n                            <mat-icon inline=\"true\">add</mat-icon>\n                            <span>Payroll</span>\n                        </button>\n                    </div>\n                </mat-card-content> -->\n            </mat-card>\n        </div>\n    </div>\n\n    <ng-container *ngLet=\"detail$|async as detail\">\n        <div class=\"row mx-2\">\n            <div class=\"col-md-12\">\n                <mat-card class=\"border-top-primary invoice-card\">\n                    <mat-card-subtitle class=\"px-4\">\n                        <h4 class=\"text-body pb-3 w-100 d-flex justify-content-between\">\n                            <span>{{client?.name}}</span>\n                            <small *ngIf=\"detail?.payroll; else agentView\">Campaign: {{detail?.payroll?.campaign?.name}}</small>\n                            <ng-template #agentView>\n                                <small>Campaign: {{detail?.campaign?.name}}</small>\n                            </ng-template>\n                        </h4>\n                        <div class=\"d-flex justify-content-between\">\n                            <address>\n                                {{client?.name}}<br />\n                                {{client?.street}}<br />\n                                {{client?.city}} {{client?.state}} {{client?.zip}}\n                            </address>\n                            <div>\n                                <div>\n                                    <strong>Weekending:</strong> \n                                    {{detail?.payroll?.weekEnding | date:'shortDate'}}\n                                </div>\n                                <div>\n                                    <strong>Invoice Date:</strong>\n                                    {{detail?.payroll?.payCycle?.endDate | date:'shortDate'}}\n                                </div>\n                                <br />\n                                <div>\n                                    <strong>Payable To:</strong>\n                                    {{detail?.agent?.firstName}} {{detail?.agent?.lastName}}\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card-subtitle>\n                    <mat-card-content>\n                        <!-- SALES DETAILS -->\n                        <mat-table [dataSource]=\"sales\">\n                            <ng-container matColumnDef=\"no\">\n                                <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n                                <mat-cell *matCellDef=\"let item; let i = index\">\n                                    {{ i + 1 }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"saleDate\">\n                                <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ item.saleDate | date:'shortDate' }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"customerName\">\n                                <mat-header-cell *matHeaderCellDef>Customer Name</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ item.contact?.firstName }} {{ item.contact?.lastName }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"address\">\n                                <mat-header-cell *matHeaderCellDef>Address</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ item.contact?.city }} {{ item.contact?.state }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"commissionable\">\n                                <mat-header-cell *matHeaderCellDef>Status</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ item.saleStatus.name }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"amount\">\n                                <mat-header-cell *matHeaderCellDef>Amount</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ (item.campaign?.compensation != null ? item.campaign?.compensation : 0) | currency }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\"saleColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: saleColumns;\"></mat-row>\n                        </mat-table>\n\n                        <div class=\"my-4\" *ngIf=\"overrides.length\">\n                            <p class=\"adjustment-titles\">Overrides</p>\n                            <mat-table [dataSource]=\"overrides\">\n                                <ng-container matColumnDef=\"agentName\">\n                                    <mat-header-cell *matHeaderCellDef>Agent</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ item.agent?.firstName }} {{ item.agent?.lastName }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"noSales\">\n                                    <mat-header-cell *matHeaderCellDef>No. Sales</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ item.units }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"commission\">\n                                    <mat-header-cell *matHeaderCellDef>Commission</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ item.amount | currency }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"total\">\n                                    <mat-header-cell *matHeaderCellDef>Total</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ (item.amount * item.units) | currency }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"overrideColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: overrideColumns\"></mat-row>\n                            </mat-table>\n                        </div>\n\n                        <div class=\"my-4\" *ngIf=\"expenses.length\">\n                            <p class=\"adjustment-titles\">Expenses</p>\n                            <mat-table [dataSource]=\"expenses\">\n                                <ng-container matColumnDef=\"date\">\n                                    <mat-header-cell *matHeaderCellDef>Date</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ item.expenseDate | date:'shortDate' }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"title\">\n                                    <mat-header-cell *matHeaderCellDef>Title</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\" class=\"text-truncate\">\n                                        {{ item.title }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"description\">\n                                    <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\" class=\"text-truncate\">\n                                        {{ item.description }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <ng-container matColumnDef=\"amount\">\n                                    <mat-header-cell *matHeaderCellDef>Amount</mat-header-cell>\n                                    <mat-cell *matCellDef=\"let item\">\n                                        {{ item.amount | currency }}\n                                    </mat-cell>\n                                </ng-container>\n\n                                <mat-header-row *matHeaderRowDef=\"expenseColumns\"></mat-header-row>\n                                <mat-row *matRowDef=\"let row; columns: expenseColumns\"></mat-row>\n                            </mat-table>\n                        </div>\n\n                        <mat-table [dataSource]=\"summary\" class=\"mt-4\">\n                            <ng-container matColumnDef=\"spacer\">\n                                <mat-header-cell *matHeaderCellDef>&nbsp;</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">&nbsp;</mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"titleColumn\">\n                                <mat-header-cell *matHeaderCellDef>&nbsp;</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\" class=\"text-muted\">Net Total</mat-cell>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"total\">\n                                <mat-header-cell *matHeaderCellDef>&nbsp;</mat-header-cell>\n                                <mat-cell *matCellDef=\"let item\">\n                                    {{ item.grossTotal | currency }}\n                                </mat-cell>\n                            </ng-container>\n\n                            <mat-header-row *matHeaderRowDef=\"summaryColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: summaryColumns\"></mat-row>\n                        </mat-table>\n                    </mat-card-content>\n                </mat-card>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { PayrollDetails, User } from '@app/models';\nimport { Observable, Observer } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { HeadlessPayload } from '@app/models/headless-payload.model';\nimport { map, tap } from 'rxjs/operators';\nimport { SessionService } from '@app/session.service';\nimport { Role } from '@app/models/role.model';\n\n@Injectable()\nexport class PaycheckDetailService implements Resolve<PayrollDetails> {\n\n    private api = environment.apiUrl + 'api';\n\n    private _payrollDetails:PayrollDetails;\n    get payrollDetails():PayrollDetails {\n        return this._payrollDetails;\n    }\n    set payrollDetails(value:PayrollDetails) {\n        if (value == null) return;\n        this._payrollDetails = value;\n    }\n\n    private _headlessPayload:HeadlessPayload;\n    get headlessPayload():HeadlessPayload {\n        return this._headlessPayload;\n    }\n\n    constructor(private router:Router, private http:HttpClient, private session:SessionService) {}\n\n    resolve(route:ActivatedRouteSnapshot, state:RouterStateSnapshot):Observable<PayrollDetails> {\n        return Observable.create((observer:Observer<PayrollDetails>) => {\n            if (this.payrollDetails == null) {\n                const params = route.queryParams;\n                const detailId = +params['detail'] || 0;\n                const userId = +params['user'] || 0;\n                const clientId = +params['client'] || 0;\n                const headless = params['headless'];\n\n                if (userId == 0 || clientId == 0 || detailId == 0 || headless == null) {\n                    this._noDetailsRedirect(observer);\n                } else {\n\n                    this.getPaycheck(clientId, userId, detailId, headless)\n                        .subscribe(payload => {\n                            this._headlessPayload = payload;\n                            this.payrollDetails = payload.detail;\n\n                            observer.next(this.payrollDetails);\n                            observer.complete();\n                        }, err => this._noDetailsRedirect(observer));\n                }\n            } else {\n                observer.next(this.payrollDetails);\n                observer.complete();\n            }\n        });\n    }\n\n    private _noDetailsRedirect(observer:Observer<PayrollDetails>):void {\n        console.error('No payroll details, please reload the page and try again.');\n\n        this.session.getUserItem().subscribe(user => {\n            if (user.role.role < Role.companyAdmin) {\n                this.router.navigate(['users', 'payroll', 'list']);\n            } else {\n                this.router.navigate(['admin', 'pay', 'paycheck-list']);\n            }\n\n            observer.next(null);\n            observer.complete(); \n        });\n    }\n\n    navigateToDetail(detail:PayrollDetails):void {\n        this.payrollDetails = detail;\n        this.router.navigate(['/admin/pay/paycheck-detail']);\n    }\n\n    getPaycheck(clientId:number, userId:number, payrollDetailId:number, headless:string):Observable<HeadlessPayload> {\n        const url = `${this.api}/clients/${clientId}/users/${userId}/payroll-details/${payrollDetailId}/${headless}`;\n        return this.http.get<HeadlessPayload>(url);\n    }\n\n    /**\n     * This method calls a secure endpoint that ensures the user has rights to the access the API, \n     * then executes a script with puppeteer to generate the PDF version of the paystub. Once generated, this call \n     * will download that PDF and return it, so we can open in the browser and display it to the user. \n     * \n     * @param clientId \n     * @param payrollDetailsId \n     */\n    generatePdf(clientId:number, payrollDetailsId:number):Observable<{ data:string }> {\n        const url = `${this.api}/clients/${clientId}/payroll-details/${payrollDetailsId}/generate-pdf`;\n        return this.http.get<{ data:string }>(url)\n            .pipe(\n                tap(res => console.dir(res))\n            );\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IAgent, PayrollDetails, User, Paginator, ICampaign } from '@app/models';\nimport { PaycheckService } from './paycheck.service';\nimport { SessionService } from '@app/session.service';\nimport { FormControl } from '@angular/forms';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SortDirection } from '@angular/material/sort';\nimport { MatTable } from '@angular/material/table';\nimport { BehaviorSubject, combineLatest } from 'rxjs';\nimport { Moment } from '@app/shared';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { PaycheckDetailService } from '../paycheck-detail/paycheck-detail.service';\nimport { coerceNumberProperty } from '@app/utils';\nimport * as moment from 'moment';\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { ActivatedRoute } from '@angular/router';\nimport { trigger, state, style, animate, transition, sequence, query, animateChild } from '@angular/animations';\n\n\n@Component({\n    selector: 'vs-paycheck-list',\n    templateUrl: './paycheck-list.component.html',\n    styleUrls: ['./paycheck-list.component.scss'],\n    animations: [\n        trigger('slideInOutControls', [\n            state('true', style({ transform: 'translateX(0)', opacity: 1 })),\n            state('false', style({ transform: 'translateX(100%)', display: 'none', opacity: 0 })),\n            transition('false => true', animate(500)),\n            transition('true => false', animate(500))\n        ]),\n        trigger('slideInOutTrigger', [\n            state('false', style({ transform: 'translateX(0)', opacity: 1 })),\n            state('true', style({ transform: 'translateX(100%)', display: 'none', opacity: 0 })),\n            transition('true => false', animate(500)),\n            transition('false => true', animate(500))\n        ]),\n        trigger('slideInOut', [\n            state('true', style({})),\n            state('false', style({})),\n            transition('false => true', [\n                sequence([\n                    query('@slideInOutTrigger', animateChild()),\n                    query('@slideInOutControls', animateChild())\n                ])\n            ]),\n            transition('true => false', [\n                sequence([\n                    query('@slideInOutControls', animateChild()),\n                    query('@slideInOutTrigger', animateChild())\n                ])\n            ]),\n        ])\n        \n    ]\n})\nexport class PaycheckListComponent implements OnInit {\n    user:User;\n    campaigns$ = new BehaviorSubject<ICampaign[]>(null);\n    paginator:Paginator<PayrollDetails>;\n    private _paychecks:PayrollDetails[];\n    paychecks$ = new BehaviorSubject<PayrollDetails[]>(null);\n    @ViewChild('paging', { static: false }) paging:MatPaginator;\n    startDate:Moment|Date|string;\n    endDate:Moment|Date|string;\n    searchInput = new FormControl('');\n    inputs:string[] = [];\n\n    startDateCtrl = new FormControl(moment());\n    endDateCtrl = new FormControl(moment());\n    pageLoadApiCallHappened = false;\n\n\n    constructor(\n        private route:ActivatedRoute,\n        private session:SessionService,\n        private service:PaycheckService,\n        private campaignService:CampaignService,\n        private paycheckDetailService:PaycheckDetailService\n    ) {}\n\n    ngOnInit() {\n        this.searchInput.valueChanges\n            .pipe(\n                debounceTime(250),\n                distinctUntilChanged()\n            ).subscribe(val => this.filterTable(val));\n\n        this.startDateCtrl.valueChanges\n            .pipe(tap((value:Moment) => {\n                this.service.startDate = value;\n            }))\n            .subscribe(() => this.getPaychecks());\n\n        this.endDateCtrl.valueChanges\n            .pipe(tap((value:Moment) => {\n                this.service.endDate = value;\n            }))\n            .subscribe(() => this.getPaychecks());\n\n        combineLatest(\n            this.route.queryParams,\n            this.session.getUserItem()\n        ).subscribe(([params, user]) => {\n            if (this.pageLoadApiCallHappened) return;\n\n            // if the URL has a date param in it, use that (for headless printable stuff), fallback to ng-memory or set to null\n            this.startDate = params['startDate'] || this.service.startDate || null;\n            this.endDate = params['endDate'] || this.service.endDate || null;\n\n            if (this.startDate) this.startDateCtrl.setValue(this.startDate, {emitEvent: false});\n            if (this.endDate) this.endDateCtrl.setValue(this.endDate, { emitEvent: false });\n\n            this.user = user;\n\n            this.campaignService.getCachedCampaigns(user.sessionUser.sessionClient)\n                .subscribe(campaigns => {\n                    this.campaigns$.next(campaigns);\n                    this.getPaychecks();\n                });\n\n            this.pageLoadApiCallHappened = true;\n        });\n    }\n\n    sortTable(sort:{ active:'agentName'|'releaseDate'|'campaign'|'amount', direction:SortDirection }) {\n        const result = this.sortPaychecksBy(sort.active, sort.direction);\n        this.paychecks$.next(result);\n    }\n\n    filterTable(filterValue:string):void {\n        if (filterValue == null) {\n            this.paychecks$.next(this._paychecks);\n            return;\n        }\n            \n        filterValue = filterValue.trim().toLowerCase();\n\n        const paychecks = this._paychecks;\n        const firstNameResults = paychecks.filter(p => p.agent.firstName.trim().toLowerCase().indexOf(filterValue) > -1);\n        const lastNameResults = paychecks.filter(p => p.agent.lastName.trim().toLowerCase().indexOf(filterValue) > -1);\n        const weekEndingResults = paychecks.filter(p => {\n            return moment(p.payroll.weekEnding).format('MMM d, YYYY').indexOf(filterValue) > -1;\n        });\n        const campaignResults = paychecks.filter(p => p.payroll.campaign.name.trim().toLowerCase().indexOf(filterValue) > -1);\n        const amountResults = paychecks.filter(p => p.grossTotal.toString().trim().toLowerCase().indexOf(filterValue) > -1);\n\n        let result:PayrollDetails[] = [];\n        result = result.concat(firstNameResults, lastNameResults, weekEndingResults, campaignResults, amountResults) as PayrollDetails[];\n        result = Array.from(new Set(result.map(r => r.payrollDetailsId)))\n            .map(id => {\n                return result.find(pd => pd.payrollDetailsId == id);\n            });\n            \n        this.paychecks$.next(result);\n    }\n\n    removeInput(input:string):void {\n        this.inputs.splice(this.inputs.indexOf(input), 1);\n    }\n\n    addInput(event:MatChipInputEvent):void {\n        const input = event.input;\n        const value = event.value;\n\n        // add our search input\n        if ((value || '').trim()) {\n            this.inputs.push(value.trim());\n            this.filterTable(value.trim());\n        }\n\n        // clear our input value\n        if (input) {\n            input.value = '';\n        }\n    }\n\n    goToPaycheckDetail(paycheck:PayrollDetails) {\n        this.paycheckDetailService.navigateToDetail(paycheck);\n    }\n\n    sortPaychecksBy(prop:string, direction:SortDirection):PayrollDetails[] {\n        const lessThanType = direction == 'asc' ? -1 : 1;\n        const greaterThanType = direction == 'asc' ? 1 : -1;\n\n        if (prop == 'agentName') {\n            return this.paychecks$.getValue().sort((a, b) => {\n                if (a.agent.lastName < b.agent.lastName)\n                    return lessThanType;\n                if (a.agent.lastName > b.agent.lastName)\n                    return greaterThanType;\n                return 0;\n            }).sort((a, b) => {\n                if (a.agent.firstName < b.agent.firstName)\n                    return lessThanType;\n                if (a.agent.firstName > b.agent.firstName)\n                    return greaterThanType;\n                return 0;\n            });\n        }\n        \n        if (prop == 'releaseDate') {\n            return this.paychecks$.getValue().sort((a, b) => {\n                if (Date.parse(<string>a.payroll.releaseDate) < Date.parse(<string>b.payroll.releaseDate))\n                    return lessThanType;\n                if (Date.parse(<string>a.payroll.releaseDate) > Date.parse(<string>b.payroll.releaseDate))\n                    return greaterThanType;\n                return 0;\n            });\n        }\n\n        if (prop == 'campaign') {\n            return this.paychecks$.getValue().sort((a, b) => {\n                if (a.payroll.campaign.name < b.payroll.campaign.name)\n                    return lessThanType;\n                if (a.payroll.campaign.name > b.payroll.campaign.name)\n                    return greaterThanType;\n                return 0;\n            });\n        }\n\n        if (prop == 'amount') {\n            return this.paychecks$.getValue().sort((a, b) => {\n                if (a.grossTotal < b.grossTotal) \n                    return lessThanType;\n                if (a.grossTotal > b.grossTotal)\n                    return greaterThanType;\n                return 0;\n            });\n        }\n    }\n\n    clickPaystub(detail:PayrollDetails) {\n        this.paycheckDetailService.navigateToDetail(detail);\n    }\n\n    getPaychecks(\n        page:number = this.paging.pageIndex, \n        pageSize:number = this.paging.pageSize,\n        startDate?:Moment|string,\n        endDate?:Moment|string\n    ):void {\n        page++; // we need to increment the value of \"page\" because matpaginator uses 0-based indexing and laravel pagination starts at 1\n\n        if (!startDate) startDate = this.startDateCtrl.value;\n        if (!endDate) endDate = this.endDateCtrl.value;\n\n        this.service.getPaychecks(this.user.sessionUser.sessionClient, page, pageSize, startDate, endDate)\n            .subscribe(paginator => {\n                this.paginator = paginator;\n                this.paging.length = this.paginator.total;\n\n                if (this.paginator.data == null) {\n                    this._paychecks = [];\n                    this.paychecks$.next(this._paychecks);\n                    return; \n                }\n\n                let paychecks = this.paginator.data.sort((a, b) => {\n                    if (a.agent.lastName < b.agent.lastName)\n                        return -1;\n                    if (a.agent.lastName > b.agent.lastName)\n                        return 1;\n                    return 0;\n                }).sort((a, b) => {\n                    if (a.agent.firstName < b.agent.firstName)\n                        return -1;\n                    if (a.agent.firstName > b.agent.firstName)\n                        return 1;\n                    return 0;\n                })\n                .sort((a, b) => {\n                    const dateA = <any>new Date(<any>a.releaseDate);\n                    const dateB = <any>new Date(<any>b.releaseDate);\n                    return dateA > dateB ? -1 : dateA < dateB ? 1 : 0;\n                });\n                \n                paychecks = paychecks.map(p => {\n                    p.payroll.campaign = this.campaigns$.value.find(c => c.campaignId == p.payroll.campaignId);\n                    p.grossTotal = this.calculateGrossTotal(p);\n                    return p;\n                });\n                \n                this._paychecks = paychecks;\n                this.paychecks$.next(paychecks);\n            });\n    }\n\n    private calculateGrossTotal(detail:PayrollDetails):number {\n        const amount = coerceNumberProperty(detail.grossTotal);\n        let expensesTotal = 0;\n        let overridesTotal = 0;\n\n        detail.expenses.forEach(e => expensesTotal += coerceNumberProperty(e.amount));\n        detail.overrides.forEach(o => overridesTotal += (coerceNumberProperty(o.amount) * coerceNumberProperty(o.units)));\n\n        return amount + expensesTotal + overridesTotal;\n    }\n}\n","\n<div class=\"container\">\n    <div class=\"row mb-2\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content class=\"d-flex justify-content-between\">\n                    <h3>Paychecks</h3>\n                    <ng-container *ngIf=\"startDate != null && endDate != null\">\n                        <p class=\"text-muted font-italic m-0 p-0\">Displaying paychecks from {{startDate | date:'shortDate'}} to {{endDate | date:'shortDate'}}</p>\n                    </ng-container>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12 d-flex justify-content-between\">\n            <mat-form-field class=\"search-input ml-2\">\n                <mat-icon matPrefix class=\"text-muted\">search</mat-icon>\n                <mat-chip-list #chipList>\n                    <mat-chip *ngFor=\"let input of inputs\" selectable=\"false\" removable=\"true\" (removed)=\"removeInput(input)\">\n                        {{input}}\n                        <mat-icon matChipRemove>cancel</mat-icon>\n                    </mat-chip>\n                    <input type=\"text\" \n                        matInput \n                        placeholder=\"Filter by Name or Campaign\"\n                        [formControl]=\"searchInput\"\n                        [matChipInputFor]=\"chipList\"\n                        [matChipInputAddOnBlur]=\"true\"\n                        (matChipInputTokenEnd)=\"addInput($event)\" />\n                </mat-chip-list>\n            </mat-form-field>\n            <div>\n                <mat-form-field class=\"px-2\">\n                    <input matInput [matDatepicker]=\"startPicker\" placeholder=\"Start\" [formControl]=\"startDateCtrl\" [value]=\"startDateCtrl.value\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"startPicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startPicker></mat-datepicker>\n                </mat-form-field>\n                <mat-form-field class=\"px-2\">\n                    <input matInput [matDatepicker]=\"endPicker\" placeholder=\"End\" [formControl]=\"endDateCtrl\" [value]=\"endDateCtrl.value\" />\n                    <mat-datepicker-toggle matSuffix [for]=\"endPicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #endPicker></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>  \n    </div>\n\n    <div class=\"row\">\n        <!-- <ng-container *ngLet=\"paychecks$|async as paychecks\"> -->\n            <div class=\"col-md-12\">\n                <div class=\"mat-elevation-z2\">\n                    <mat-table [dataSource]=\"paychecks$\" matSort (matSortChange)=\"sortTable($event)\" matSortActive=\"weekEnding\" matSortDirection=\"desc\">\n                        <ng-container matColumnDef=\"agentName\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Receivable</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.agent.firstName}} {{item.agent.lastName}}</mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"releaseDate\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header start=\"desc\">Advice Date</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.payroll.releaseDate | date:'mediumDate'}}</mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"campaign\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Campaign</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.payroll.campaign.name}}</mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"amount\">\n                            <mat-header-cell *matHeaderCellDef mat-sort-header>Total</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.grossTotal | currency}}</mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"['agentName', 'releaseDate', 'campaign', 'amount']\"></mat-header-row>\n                        <mat-row *matRowDef=\"let row; columns:['agentName', 'releaseDate', 'campaign', 'amount']\"\n                            class=\"clickable paycheck-detail-row\"\n                            (click)=\"goToPaycheckDetail(row)\"\n                        ></mat-row>\n                    </mat-table>\n                    <mat-paginator\n                        #paging\n                        [pageSize]=\"10\"\n                        [pageSizeOptions]=\"[5, 10, 25, 50]\"\n                        showFirstLastButtons=\"true\"\n                        (page)=\"getPaychecks()\"\n                    ></mat-paginator>\n                </div>\n            </div>\n        <!-- </ng-container> -->\n    </div>\n</div>","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable, Observer } from 'rxjs';\nimport { PayrollDetails, Paginator } from '@app/models';\nimport { Moment } from '@app/shared';\nimport * as moment from 'moment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PaycheckService {\n\n    api: string = environment.apiUrl + 'api';\n\n    private _startDate: Moment;\n    get startDate() { return this._startDate; }\n    set startDate(value:Moment) {\n        if (value == null) return;\n        this._startDate = moment(value);\n    }\n    private _endDate: Moment;\n    get endDate() { return this._endDate; }\n    set endDate(value: Moment) {\n        if (value == null) return;\n        this._endDate = moment(value);\n    }\n\n    constructor(private http: HttpClient) {}\n\n    getPaychecks(\n        clientId:number, \n        page:number = 1, \n        resultsPerPage?:number, \n        startDate?:Moment|string|Date, \n        endDate?:Moment|string|Date\n    ):Observable<Paginator<PayrollDetails>> {\n        const url = `${this.api}/clients/${clientId}/payroll-details`;\n        let params = new HttpParams().set('page', page.toString());\n        if (resultsPerPage) params = params.append('resultsPerPage', resultsPerPage.toString());\n        if (startDate && endDate) {\n            if (startDate == null || endDate == null) \n                throw new Error('Both start date and end date are required if you select one.');\n            params = params.append('startDate', moment(startDate).format('YYYY-MM-DD'));\n            params = params.append('endDate', moment(endDate).format('YYYY-MM-DD'));\n        } \n        return this.http.get<Paginator<PayrollDetails>>(url, { params: params });\n    }\n\n    getPaychecksByDetail(clientId:number, payrollDetailsId:number, page:number = 1):Observable<Paginator<PayrollDetails>> {\n        const url = `${this.api}/clients/${clientId}/payroll-details/${payrollDetailsId}`;\n        const params = new HttpParams().set('page', page.toString());\n        return this.http.get<any>(url, { params: params });\n    }\n\n    /**\n     * USER PAYCHECK API ENDPOINTS\n     * \n     * \n     */\n\n    getAgentPaycheckList(\n        clientId:number, \n        agentId:number, \n        page:number = 1, \n        resultsPerPage?:number,\n        startDateArgs?:any, \n        endDateArgs?:any\n    ):Observable<Paginator<PayrollDetails>> {\n        const url = `${this.api}/clients/${clientId}/agents/${agentId}/earnings`;\n        let params = new HttpParams().set('page', page.toString());\n        if (resultsPerPage) params = params.append('resultsPerPage', resultsPerPage.toString());\n        if (startDateArgs && endDateArgs) {\n            const startDate = moment(startDateArgs);\n            const endDate = moment(endDateArgs);\n            if (!startDate.isValid() || !endDate.isValid()) {\n                // throw new Error('Both start and end date are required!');\n                return Observable.create((observer:Observer<Paginator<PayrollDetails>>) => {\n                    observer.error(`Both start and end date are required.`);\n                    observer.complete();\n                });\n            }\n            params = params.append('startDate', startDate.format('YYYY-MM-DD'));\n            params = params.append('endDate', endDate.format('YYYY-MM-DD'));\n        }\n        return this.http.post<Paginator<PayrollDetails>>(url, { params: params });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'vs-payroll-dialog',\n    templateUrl: './payroll-dialog.component.html',\n    styleUrls: ['./payroll-dialog.component.scss']\n})\nexport class PayrollDialogComponent implements OnInit {\n    constructor() {}\n\n    ngOnInit() {}\n}\n","<p>\n  payroll-dialog works!\n</p>\n","import {Component, OnInit, Inject} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PayrollFilter, IAgent, PayrollFilterType, ICampaign } from '@app/models';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Moment } from '@app/shared/moment-extensions';\nimport * as moment from 'moment';\n\ninterface DialogData {\n    filters:PayrollFilter,\n    agents:IAgent[],\n    campaigns:ICampaign[]\n}\n\n@Component({\n    selector: 'vs-payroll-filter-dialog',\n    templateUrl: './payroll-filter-dialog.component.html',\n    styleUrls: ['./payroll-filter-dialog.component.scss']\n})\nexport class PayrollFilterDialogComponent implements OnInit {\n\n    f:FormGroup = this.createForm();\n    filters:PayrollFilter;\n    agents:IAgent[];\n    campaigns:ICampaign[];\n    showReleaseDateFormControl:boolean = false;\n\n    constructor(\n        private ref:MatDialogRef<PayrollFilterDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        private fb:FormBuilder\n    ) {\n        this.filters = this.data.filters || { activeFilters: [] } as PayrollFilter;\n        this.agents = this.data.agents || [];\n        this.campaigns = this.data.campaigns.sort((a, b) => {\n            if (a.active && !b.active) \n                return -1;\n            if (!a.active && b.active)\n                return 1;\n            if (a.active == b.active)\n                return 0;\n        }) || [];\n    }\n\n    ngOnInit() {\n        this.patchForm();\n\n        this.f.controls.isAutomated.valueChanges.subscribe(value => {\n            this.showReleaseDateFormControl = value;\n\n            if (value)\n                this.f.controls.automatedRelease.setValidators([Validators.required]);\n            else\n                this.f.controls.automatedRelease.clearValidators();\n        });\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    save() {\n        // get model\n        let model = this.getModel();\n\n        this.ref.close(model);\n    }\n\n    private getModel():PayrollFilter {\n        const vals = this.f.value;\n        return {\n            activeFilters: this.setActiveFilters(vals),\n            startDate: vals.startDate,\n            endDate: vals.endDate,\n            agentId: vals.agent,\n            clientId: vals.client,\n            campaignId: vals.campaign,\n            weekEnding: vals.weekEnding,\n            isAutomated: vals.isAutomated,\n            isReleased: vals.isReleased,\n            automatedRelease: vals.automatedRelease\n        };\n    }\n\n    private setActiveFilters(values:any):PayrollFilterType[] {\n        let result = [];\n        for(const p in values) {\n            switch(p) {\n                case 'agent':\n                    if(values[p] != null) result.push(PayrollFilterType.agent);\n                    break;\n                case 'client':\n                    if(values[p] != null) result.push(PayrollFilterType.client);\n                    break;\n                case 'campaign':\n                    if(values[p] != null) result.push(PayrollFilterType.campaign);\n                    break;\n                case 'weekEnding':\n                    if(values[p] != null) result.push(PayrollFilterType.weekEnding);\n                    break;\n                case 'isAutomated':\n                    if(values[p]) result.push(PayrollFilterType.isAutomated);\n                    break;\n                case 'isReleased':\n                    if(values[p]) result.push(PayrollFilterType.isReleased);\n                    break;\n                case 'automatedRelease':\n                    if(values[p] != null) result.push(PayrollFilterType.automatedRelease);\n                    break;\n                default:\n                    break;\n            }\n        }\n        return result;\n    }\n\n    private patchForm():void {\n        this.f.patchValue({\n            startDate: this.filters.startDate,\n            endDate: this.filters.endDate,\n            agent: this.filters.agentId,\n            campaign: this.filters.campaignId,\n            client: this.filters.clientId,\n            weekEnding: this.filters.weekEnding,\n            isAutomated: this.filters.isAutomated || false,\n            isReleased: this.filters.isReleased || false,\n            automatedRelease: this.filters.automatedRelease\n        });\n    }\n\n    private createForm():FormGroup {\n        return this.fb.group({\n            startDate: this.fb.control('', [Validators.required]),\n            endDate: this.fb.control('', [Validators.required]),\n            agent: this.fb.control(''),\n            campaign: this.fb.control(''),\n            weekEnding: this.fb.control(''),\n            isAutomated: this.fb.control(false),\n            isReleased: this.fb.control(false),\n            automatedRelease: this.fb.control(''),\n            client: this.fb.control('')\n        });\n    }\n}\n","\n<h3 mat-dialog-title>Narrow By:</h3>\n<div mat-dialog-content>\n    <div [formGroup]=\"f\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input type=\"text\" matInput \n                        [matDatepicker]=\"startDatepicker\"\n                        placeholder=\"Start\"\n                        formControlName=\"startDate\"\n                        required\n                    />\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatepicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #startDatepicker></mat-datepicker>\n                    <mat-error *ngIf=\"f.get('startDate').hasError('required')\">\n                        Please select a valid start date.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input type=\"text\" matInput \n                        [matDatepicker]=\"endDatepicker\"\n                        placeholder=\"End\"\n                        formControlName=\"endDate\"\n                        required\n                    />\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatepicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #endDatepicker></mat-datepicker>\n                    <mat-error *ngIf=\"f.get('endDate').hasError('required')\">\n                        Please select a valid end date.\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-select placeholder=\"Agent\" formControlName=\"agent\">\n                        <ng-container *ngIf=\"agents != null\">\n                            <mat-option *ngFor=\"let a of agents\" [value]=\"a.agentId\">\n                                {{a.firstName}} {{a.lastName}}\n                            </mat-option>\n                        </ng-container>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input type=\"text\" matInput\n                        [matDatepicker]=\"weekEnding\"\n                        placeholder=\"Week Ending\"\n                        formControlName=\"weekEnding\"\n                    />\n                    <mat-datepicker-toggle matSuffix [for]=\"weekEnding\"></mat-datepicker-toggle>\n                    <mat-datepicker #weekEnding></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <mat-select placeholder=\"Campaign\" formControlName=\"campaign\">\n                        <ng-container *ngIf=\"campaigns != null\">\n                            <mat-option *ngFor=\"let c of campaigns\" [value]=\"c.campaignId\">\n                                {{c.name}} \n                                <span class=\"font-weight-bold\"\n                                    [class.text-danger]=\"!c.active\"\n                                    [class.text-muted]=\"c.active\"\n                                >({{c.active ? 'A' : 'I'}})</span>\n                            </mat-option>\n                        </ng-container>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n                <mat-form-field>\n                    <input type=\"text\" matInput\n                        [matDatepicker]=\"automatedRelease\"\n                        placeholder=\"Release\"\n                        formControlName=\"automatedRelease\"\n                    />\n                    <mat-datepicker-toggle matSuffix [for]=\"automatedRelease\"></mat-datepicker-toggle>\n                    <mat-datepicker #automatedRelease></mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <mat-checkbox formControlName=\"isAutomated\">\n                    Auto Released\n                </mat-checkbox>\n            </div>\n            <div class=\"col-md-6\">\n                 <mat-checkbox formControlName=\"isReleased\">\n                    Status: Released        \n                </mat-checkbox>\n            </div>\n        </div>\n        \n    </div>\n</div>\n<div mat-dialog-actions class=\"d-flex justify-content-between\">\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button color=\"primary\" (click)=\"save()\">Save</button>    \n</div>","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { Payroll, User, PayrollFilter, IAgent, ICampaign, PayrollFilterType, PayrollDetails } from '@app/models';\nimport { BehaviorSubject } from 'rxjs';\nimport { MessageService } from '@app/message.service';\nimport { PayrollService } from '../payroll.service';\nimport { SessionService } from '@app/session.service';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\nimport { PayrollFilterDialogComponent } from '../payroll-filter-dialog/payroll-filter-dialog.component';\nimport { Moment } from '@app/shared/moment-extensions';\nimport * as moment from 'moment';\nimport { CampaignService } from '@app/campaigns/campaign.service';\nimport { trigger, state, style, transition, animate, sequence, query } from '@angular/animations';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { OverrideExpenseDialogComponent } from '../override-expense-dialog/override-expense-dialog.component';\nimport { ConfirmAutoreleaseDateDialogComponent } from '../confirm-autorelease-date-dialog/confirm-autorelease-date-dialog.component';\nimport { ConfirmReleaseDialogComponent } from '../confirm-release-dialog/confirm-release-dialog.component';\nimport * as _ from 'lodash';\nimport { isArray } from 'util';\n\n@Component({\n    selector: 'vs-payroll-list',\n    templateUrl: './payroll-list.component.html',\n    styleUrls: ['./payroll-list.component.scss'],\n    animations: [\n        trigger('detailExpand', [\n            state('collapsed', style({height: '0px', minHeight: '0', display: 'none'})),\n            state('expanded', style({height: '*'})),\n            transition('collapsed => expanded', [\n                sequence([\n                    animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'),\n                    query('.detail-mat-cell', [\n                        style({ height: '*' })\n                    ])\n                ])\n            ]),\n            transition('expanded => collapsed', [\n                sequence([\n                    query('.detail-mat-cell', [\n                        style({ height: '0px', minHeight: '0', display: 'none' })\n                    ]),\n                    animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n                ])\n            ])\n        ]),\n        trigger('collapseIcon', [\n            state('collapsed', style({ transform: 'rotate(0)' })),\n            state('expanded', style({ transform: 'rotate(180deg)' })),\n            transition('collapsed <=> expanded', animate('400ms ease-in-out'))\n        ])\n    ]\n})\nexport class PayrollListComponent implements OnInit {\n\n    user:User;\n    private _payrolls:Payroll[];\n    payrolls$ = new BehaviorSubject<Payroll[]>(null);\n    agents:IAgent[];\n    campaigns:ICampaign[];\n    defaultEndDate:Moment;\n    defaultStartDate:Moment;\n    filters:PayrollFilter = { \n        activeFilters: [],\n        startDate: null,\n        endDate: null\n    } as PayrollFilter;\n    private _isFilterBtnActive = false;\n    isFilterBtnActive$ = new BehaviorSubject<boolean>(this._isFilterBtnActive);\n    filteredAgent:IAgent;\n    displayingResults:string;\n\n    displayColumns = [\n        'selected', 'campaign', 'cycleStart', 'cycleEnd', 'isAutomated', \n        'isReleased', 'automatedRelease', 'status', 'collapsedState'\n    ];\n    detailColumns = ['agent', 'sales', 'gross', 'taxes', 'net'];\n    expandedItem:Payroll;\n    initialSelection = [];\n    allowMultiSelect = true;\n    selection = new SelectionModel<Payroll>(true, []);\n    @ViewChild('tableRef', { static: false }) table:MatTable<MatTableDataSource<Payroll>>; \n    disableRelease = true;\n\n    selectedAutoReleaseDate:Moment;\n\n    constructor(\n        private msg:MessageService,\n        private service:PayrollService,\n        private session:SessionService,\n        private campaignService:CampaignService,\n        private dialog:MatDialog\n    ) {}\n\n    ngOnInit() {\n        this.session.showLoader();\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n            this.populateCampaigns();\n            this.initializeComponent();\n        });\n\n        this.selection.onChange.subscribe(() => this.disableRelease = this.selection.selected.length == 0);\n    }\n\n    /**\n     * How we manage to update our payrolls and keep track of everything happening in one method to \n     * the updated list of payrolls.\n     * \n     * @param payrolls \n     */\n    private setPayrolls(payrolls:Payroll[]):void {\n        this._payrolls = payrolls;\n        this.payrolls$.next(this._payrolls);\n    }\n\n    /**\n     * Handles when the user changes the hidden datepicker value on the template that sets the auto-release \n     * date. \n     * \n     * @param event \n     */\n    dateChanged(event:MatDatepickerInputEvent<Moment>) {\n        this.selectedAutoReleaseDate = event.value;\n\n        this.dialog.open(ConfirmAutoreleaseDateDialogComponent, {\n            width: '30vw',\n            data: {\n                date: this.selectedAutoReleaseDate\n            }\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if (result == null) return;\n\n            const payrollIds = this.selection.selected.map(p => p.payrollId);\n\n            this.service.saveAutoReleaseSettings(this.user.sessionUser.sessionClient, payrollIds, result)\n                .subscribe(payrolls => {\n                    // TODO: Do we really need to do this? Can't we just pass \"payrolls\" return from the API into setPayrolls()?\n                    payrolls.forEach(p => {\n                        this._payrolls.forEach((pp, i, a) => {\n                            if (pp.payrollId == p.payrollId) \n                                a[i] = p;\n                        });\n                    });\n                    \n                    this.setPayrolls(this._payrolls);\n                });\n        });\n    }\n\n    /**\n     * If the payroll has been scheduled for autorelease and the release hasn't happened, \n     * the user can uncheck the autorelease option and it will remove the autorelease settings.\n     * \n     * @param event \n     * @param item \n     */\n    removeAutoRelease(item:Payroll) {\n        this.service.removeAutoReleaseSettings(this.user.sessionUser.sessionClient, item.payrollId)\n            .subscribe(result => {\n                this._payrolls.forEach((p, i, a) => {\n                    if (p.payrollId != result.payrollId) return;\n                    a[i] = result;\n                });\n                this.setPayrolls(this._payrolls);\n            });\n    }\n\n    filterBtnClick() {\n        this.dialog.open(PayrollFilterDialogComponent, {\n                width: '40vw',\n                data: {\n                    filters: this.filters,\n                    agents: this.agents,\n                    campaigns: this.campaigns\n                }\n            })\n            .afterClosed()\n            .subscribe(result => {\n                if (result == null) return;\n                this.filters = result;\n                this.setActiveFiltersStatus();    \n                this.applyFilters();            \n            });\n    }\n\n    getFilteredAgent(agentId:number):IAgent {\n        if (this.agents == null || !this.agents.length) return {};\n        return this.agents.find(a => a.agentId == agentId);\n    }\n\n    getFilteredCampaign(campaignId:number):ICampaign {\n        if (this.campaigns == null || !this.campaigns.length) return {} as ICampaign;\n        return this.campaigns.find(c => c.campaignId == campaignId);\n    }\n\n    populateCampaigns() {\n        this.campaignService.getCampaignsByClient(this.user.sessionUser.sessionClient)\n            .subscribe(campaigns => this.campaigns = campaigns);\n    }\n\n    getCampaignDescById(id:number):string {\n        const campaign = this.campaigns.find(c => c.campaignId == id);\n        if (campaign == null) return '';\n        return campaign.name;\n    }\n\n    removeFilter(filterType:PayrollFilterType) {\n        this.removeActiveFilter(filterType);\n        switch (filterType) {\n            case PayrollFilterType.startDate:\n                this.filters.startDate = null;\n                break;\n            case PayrollFilterType.endDate:\n                this.filters.endDate = null;\n                break;\n            case PayrollFilterType.agent:\n                this.filters.agentId = null;\n                break;\n            case PayrollFilterType.campaign:\n                this.filters.campaignId = null;\n                break;\n            case PayrollFilterType.weekEnding:\n                this.filters.weekEnding = null;\n                break;\n            case PayrollFilterType.isAutomated:\n                this.filters.isAutomated = null;\n                break;\n            case PayrollFilterType.isReleased:\n                this.filters.isReleased = null;\n                break;\n            case PayrollFilterType.automatedRelease:\n                this.filters.automatedRelease = null;\n                break;\n            default:\n                break;\n        }\n        this.setActiveFiltersStatus();\n    }\n\n    getPayrollStatus(item:Payroll) {\n        return item.payCycle.isClosed\n            ? 'Closed'\n            : item.isReleased\n                ? 'Released'\n                : 'Pending';\n    }\n\n    masterToggle():void {\n        this.isAllSelected() ?\n            this.selection.clear() :\n            this._payrolls.forEach(p => {\n                if (p.isReleased || p.payCycle.isClosed) return;\n                this.selection.select(p);\n            });\n    }\n\n    isAllSelected():boolean {\n        const numSelected = this.selection.selected.length;\n        const numRows = this._payrolls.filter(p => !p.isReleased).length;\n        return numSelected === numRows;\n    }\n\n    showExpensesAndOverrides(payroll:Payroll, detail:PayrollDetails) {\n        this.dialog.open(OverrideExpenseDialogComponent, {\n            width: '60vw',\n            maxHeight: '80vh',\n            data: {\n                payCycle: payroll.payCycle,\n                detail: detail,\n                agents: this.agents\n            }\n        })\n        .afterClosed()\n        .subscribe((result:PayrollDetails) => {\n            if (result == null) return;\n\n            console.dir(result);\n\n            /** I believe this is removing the $ from the string? */\n            // if (isNaN((<any>result.taxes).charAt(0)))\n            //     result.taxes = (<any>result.taxes).slice(0, 1);\n            // if (isNaN((<any>result.grossTotal).charAt(0)))\n            //     result.grossTotal = (<any>result.grossTotal).slice(0, 1);\n            // if (isNaN((<any>result.netTotal).charAt(0)))\n            //     result.netTotal = (<any>result.netTotal).slice(0, 1);\n\n            // result.overrides.forEach((o, i, a) => {\n            //     if (isNaN((<any>o.amount).charAt(0)))\n            //         a[i].amount = (<any>o.amount).slice(1);\n            // });\n\n            // result.expenses.forEach((e, i, a) => {\n            //     if (isNaN((<any>e.amount).charAt(0)))\n            //         a[i].amount = (<any>e.amount).slice(1);\n\n            //     a[i].expenseId = e.expenseId > 0 ? e.expenseId : null;\n            // });\n            \n            this.service.savePayrollDetails(this.user.sessionUser.sessionClient, result)\n                .subscribe(res => {\n                    this.setPayrolls(res);\n                    this.applyFilters();\n\n                    this.msg.addMessage('Successfully updated overrides & expenses.', 'dismiss', 5000);\n                });\n        });\n    }\n\n    /**\n     * Show's dialog to the user confirming their selections and showing overall total they'll \n     * be confirming to pay for the released cycles.\n     */\n    showReleaseConfirm() {\n\n        this.dialog.open(ConfirmReleaseDialogComponent, {\n            width: '50vw',\n            data: {\n                payrolls: this.selection.selected\n            },\n            autoFocus: false\n        })\n        .afterClosed()\n        .subscribe(result => {\n            if (!result) return;\n\n            const payrollIds = this.selection.selected.map(p => p.payrollId);\n\n            this.service.setReleased(this.user.sessionUser.sessionClient, payrollIds)\n                .subscribe(() => {\n                    payrollIds.forEach(id => {\n                        this._payrolls.forEach((p, i, a) => {\n                            if (p.payrollId != id) return;\n                            a[i].isReleased = true;\n                            a[i].payCycle.isPending = false;\n                        });\n                    });\n\n                    this.setPayrolls(this._payrolls);\n                    this.applyFilters();\n                    this.msg.addMessage('Successfully released!', 'dismiss', 5000);\n                });\n        });\n\n    }\n\n    private applyFilters() {\n        if (this._payrolls == null || !this._payrolls.length) return;\n\n        /** let's set our initial filter dates based on what came back from the api */\n        // if ((this.filters.startDate == null || this.filters.endDate == null) && this._payrolls.length) {\n        //     const sortedPayrolls = this._payrolls.sort((a, b) => moment(a.weekEnding).isAfter(b.weekEnding, 'day') ? 1 : 0);\n        //     const mostRecentWeekending = sortedPayrolls[sortedPayrolls.length - 1].weekEnding;\n        //     this.filters.endDate = moment(mostRecentWeekending).add(7, 'days');\n        //     this.filters.startDate = moment(mostRecentWeekending).subtract(7, 'days');\n        // }\n\n        let filteredPayrolls:Payroll[] = this._payrolls;\n        // TODO: Bad logic, this hides data that should be apparent to the user that it exists\n        // filteredPayrolls = this._payrolls.filter(p => {\n        //     const startDate = this.filters.startDate;\n        //     const endDate = this.filters.endDate;\n        //     return moment(p.weekEnding).isBetween(startDate, endDate, 'd', MomentInclusivity.includeBoth);\n        // });\n        \n        this.filters.activeFilters.forEach(af => {\n            filteredPayrolls = this.applyFilterByType(filteredPayrolls, af);\n        });\n\n        /** TODO: for now we're going to stripped closed cycles out until we add to filter */\n        // filteredPayrolls = filteredPayrolls.filter(f => !f.payCycle.isClosed);\n\n        // this is the only time we set the payroll subject direclty without the setPayrolls() method\n        this.payrolls$.next(filteredPayrolls);\n\n        this.displayingResults = `Displaying ${filteredPayrolls.length} of ${this._payrolls.length} possible results`;\n    }\n\n    private applyFilterByType(payrolls:Payroll[], type:PayrollFilterType):Payroll[] {\n        let result:Payroll[];\n        switch (type) {\n            case PayrollFilterType.agent:\n                result = payrolls.map((p) => {\n                    const hasDetails = p.details.find(d => d.agentId == this.filters.agentId) != null;\n                    if (hasDetails) {\n                        p.details = p.details.filter(d => d.agentId == this.filters.agentId);\n                        return p;\n                    }\n                });\n                break;\n            case PayrollFilterType.campaign: \n                result = payrolls.filter(p => p.campaignId == this.filters.campaignId);\n                break;\n            case PayrollFilterType.isAutomated:\n                result = payrolls.filter(p => p.isAutomated == this.filters.isAutomated);\n                break;\n            case PayrollFilterType.isReleased:\n                result = payrolls.filter(p => p.isReleased == this.filters.isReleased && p.isReleased);\n                break;\n            case PayrollFilterType.automatedRelease:\n                result = payrolls.filter(p => moment(p.automatedRelease).isSame(this.filters.automatedRelease, 'days'));\n                break;\n            case PayrollFilterType.weekEnding:\n                result = payrolls.filter(p => moment(p.weekEnding).isSame(this.filters.weekEnding));\n                break;\n            default:\n                result = payrolls;\n                break;\n        }\n\n        return result.filter(r => r);\n    }\n\n    private setActiveFiltersStatus() {\n        let setFiltersActive = false;\n        \n        if (this.filters.activeFilters.length)\n            setFiltersActive = true;\n\n        if (this._isFilterBtnActive != setFiltersActive) {\n            this._isFilterBtnActive = setFiltersActive;\n            this.isFilterBtnActive$.next(this._isFilterBtnActive);\n        }\n    }\n\n    private removeActiveFilter(type:PayrollFilterType) {\n        this.filters.activeFilters.splice(\n            this.filters.activeFilters.indexOf(type), 1\n        );\n        this.setActiveFiltersStatus();\n        this.applyFilters();\n    }\n\n    private initializeComponent() {\n        this.service.getPayrollList(this.user.sessionUser.sessionClient, this.user.id)\n            .subscribe(payrolls => {\n                if (!isArray(payrolls)) {\n                    this.session.hideLoader();\n                    return;\n                }\n                this.setPayrolls(payrolls);\n                this.applyFilters();\n\n                if (this.agents == null) \n                    this.agents = [];\n\n                this._payrolls.forEach(p => {\n                    p.details.forEach(d => {\n                        if (d.agent == null) return;\n                        if (this.agents.find(a => a.agentId == d.agentId) != null)\n                            return;\n                        this.agents = this.agents.concat(d.agent);\n                    });\n                });\n\n                this.session.hideLoader();\n            });\n    }\n\n    \n}\n","\n<div class=\"container\">\n    <div class=\"row mb-2\">\n        <div class=\"col-md-12\">\n            <mat-card class=\"page-header-accent\">\n                <mat-card-content>\n                    <div class=\"d-flex justify-content-between\">\n                        <h3>\n                            <span>Payroll Release Schedule</span>\n                        </h3>\n                        <div *ngLet=\"isFilterBtnActive$|async as active\">\n                            <button type=\"button\"\n                                mat-icon-button\n                                color=\"primary\"\n                                [class.active]=\"active\"\n                                (click)=\"filterBtnClick()\"\n                            >\n                                <mat-icon>filter_list</mat-icon>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"text-muted d-flex align-items-center justify-content-between\">\n                        <div class=\"flex-grow-1\">\n                            <span class=\"font-weight-bold\">\n                                Narrowed to:\n                            </span>\n                            <mat-chip-list #matChipList>\n                                <mat-chip *ngIf=\"filters.startDate\" [removable]=\"false\" [selectable]=\"false\" \n                                    (click)=\"filterBtnClick()\" class=\"clickable\">\n                                    <span>Start: {{filters.startDate | date:'shortDate'}}</span>\n                                </mat-chip>\n                                <mat-chip *ngIf=\"filters.endDate\" [removable]=\"false\" [selectable]=\"false\" \n                                    (click)=\"filterBtnClick()\" class=\"clickable\">\n                                    <span>End: {{filters.endDate | date:'shortDate'}}</span>\n                                </mat-chip>\n                                <mat-chip *ngIf=\"filters.campaignId\" (removed)=\"removeFilter(3)\" [selectable]=\"false\" color=\"accent\">\n                                    <ng-container *ngLet=\"getFilteredCampaign(filters.campaignId) as c\">\n                                        <span>Campaign: {{c.name}}</span>\n                                        <mat-icon matChipRemove>cancel</mat-icon>\n                                    </ng-container>\n                                </mat-chip>\n                                <mat-chip *ngIf=\"filters.agentId\" (removed)=\"removeFilter(2)\" [selectable]=\"false\" color=\"accent\">\n                                    <ng-container *ngLet=\"getFilteredAgent(filters.agentId) as a\">\n                                        <span>{{a.firstName}} {{a.lastName}}</span>\n                                        <mat-icon matChipRemove>cancel</mat-icon>\n                                    </ng-container>\n                                </mat-chip>\n                            </mat-chip-list>\n                        </div>\n                        <span class=\"text-muted\">\n                            {{displayingResults}}\n                        </span>\n                    </div>\n                    <hr />\n                    <div class=\"action-row\">\n                        <button type=\"button\" mat-raised-button \n                            color=\"primary\" \n                            (click)=\"showReleaseConfirm()\"\n                            [disabled]=\"disableRelease\"\n                        >\n                            <mat-icon inline=\"true\">send</mat-icon> Release\n                        </button>\n                        <button type=\"button\" mat-raised-button\n                            color=\"accent\"\n                            (click)=\"autoReleaseDatepicker.open()\"\n                            [disabled]=\"disableRelease\"\n                        >\n                            <mat-icon inline=\"true\">date_range</mat-icon> Schedule Auto-Release\n                        </button>\n                        <mat-form-field [style.visibility]=\"'hidden'\" class=\"d-none\">\n                            <input matInput [matDatepicker]=\"autoReleaseDatepicker\" (dateChange)=\"dateChanged($event)\" />\n                            <mat-datepicker touchUi=\"true\" #autoReleaseDatepicker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <ng-container *ngIf=\"(payrolls$|async) != null && (payrolls$|async).length; else noPayrolls\">\n                <ng-container *ngLet=\"payrolls$|async as payrolls\">\n                    <mat-table #tableRef [dataSource]=\"payrolls\" multiTemplateDataRows class=\"border-top-primary mat-elevation-z1\">\n\n                        <!-- SELECTED -->\n                        <ng-container matColumnDef=\"selected\">\n                            <mat-header-cell *matHeaderCellDef>\n                                <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                                ></mat-checkbox>\n                            </mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                <mat-checkbox\n                                    (click)=\"$event.stopPropagation()\"\n                                    (change)=\"$event ? selection.toggle(item) : null\"\n                                    [checked]=\"selection.isSelected(item)\"\n                                    [disabled]=\"item.isReleased\"\n                                ></mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <!-- CAMPAIGN -->\n                        <ng-container matColumnDef=\"campaign\">\n                            <mat-header-cell *matHeaderCellDef>Campaign</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{getCampaignDescById(item.campaignId)}}</mat-cell>\n                        </ng-container>\n\n                        <!-- CYCLE START DATE -->\n                        <ng-container matColumnDef=\"cycleStart\">\n                            <mat-header-cell *matHeaderCellDef>Start</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.payCycle.startDate | date:'shortDate'}}</mat-cell>\n                        </ng-container>\n\n                        <!-- CYCLE END DATE -->\n                        <ng-container matColumnDef=\"cycleEnd\">\n                            <mat-header-cell *matHeaderCellDef>End</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">{{item.payCycle.endDate | date:'shortDate'}}</mat-cell>\n                        </ng-container>\n\n                        <!-- IS AUTOMATED -->\n                        <ng-container matColumnDef=\"isAutomated\">\n                            <mat-header-cell *matHeaderCellDef>Auto Release</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                <mat-checkbox [checked]=\"item.isAutomated\" \n                                    [disabled]=\"!(item.isAutomated && !item.isReleased)\"\n                                    (change)=\"removeAutoRelease($event, item)\"\n                                    (click)=\"$event.stopPropagation()\"\n                                ></mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <!-- AUTOMATIC RELEASE DATE -->\n                        <ng-container matColumnDef=\"automatedRelease\">\n                            <mat-header-cell *matHeaderCellDef>Release Date</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                {{item.automatedRelease | date:'shortDate'}}\n                            </mat-cell>\n                        </ng-container>\n\n                        <!-- IS RELEASED -->\n                        <ng-container matColumnDef=\"isReleased\">\n                            <mat-header-cell *matHeaderCellDef>Released</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                <mat-checkbox [checked]=\"item.isReleased\" [disabled]=\"true\"></mat-checkbox>\n                            </mat-cell>\n                        </ng-container>\n\n                        <!-- PAYROLL STATUS -->\n                        <ng-container matColumnDef=\"status\">\n                            <mat-header-cell *matHeaderCellDef>Status</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\">\n                                <ng-container *ngLet=\"getPayrollStatus(item) as desc\">\n                                    <ng-container *ngIf=\"item.isReleased; else notReleased\">\n                                        <a [routerLink]=\"['/admin/pay/paycheck-list']\" class=\"link-unstyled\"\n                                            [queryParams]=\"{ startDate: item?.payCycle?.startDate, endDate: item?.payCycle?.endDate }\">\n                                            <span>{{desc}}</span>\n                                            <mat-icon inline=\"true\">launch</mat-icon>\n                                        </a>\n                                    </ng-container>\n                                    <ng-template #notReleased>\n                                        <span *ngIf=\"item.payCycle.isClosed; else notReady\" matTooltip=\"Ready to release to agents.\">\n                                            Ready\n                                        </span>\n                                        <ng-template #notReady>\n                                            {{desc}}\n                                        </ng-template>\n                                    </ng-template>\n                                </ng-container>\n                            </mat-cell>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"collapsedState\">\n                            <mat-header-cell *matHeaderCellDef class=\"max-width-40\">&nbsp;</mat-header-cell>\n                            <mat-cell *matCellDef=\"let item\" class=\"max-width-40\">\n                                <mat-icon\n                                    [@collapseIcon]=\"item == expandedItem ? 'expanded' : 'collapsed'\"\n                                >\n                                    keyboard_arrow_up\n                                </mat-icon>\n                            </mat-cell>\n                        </ng-container>\n\n                        <!-- EXPANDED DETAIL -->\n                        <ng-container matColumnDef=\"expandedDetail\">\n                            <mat-cell *matCellDef=\"let item\" class=\"detail-mat-cell\">\n                                <div class=\"element-detail\" [class.pb-2]=\"item == expandedItem\">\n                                    <div class=\"row w-100\">\n                                        <div class=\"col-md-12\">                                                    \n                                            <ul class=\"list-group\">\n                                                <li class=\"list-group-item\">\n                                                    <div class=\"row\">\n                                                        <div class=\"col-md-3\">\n                                                            <span class=\"font-weight-bold\">Agent</span>\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            <span class=\"font-weight-bold\">Sales</span>\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            <span class=\"font-weight-bold\">Gross</span>\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            <span class=\"font-weight-bold\">Taxes</span>\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            <span class=\"font-weight-bold\">Net</span>\n                                                        </div>\n                                                        <div class=\"col-md-auto\">\n                                                            <span>&nbsp;</span>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                                <li *ngFor=\"let detail of item.details; let didx = index;\" class=\"list-group-item\">\n                                                    <div class=\"row align-middle\">\n                                                        <div class=\"col-md-3\">\n                                                            {{detail.agent.firstName}} {{detail.agent.lastName}}\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            {{detail.sales}}\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            {{detail | payrollDetailTotals:'grossTotal' | currency}}\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            {{detail.taxes | currency}}\n                                                        </div>\n                                                        <div class=\"col-md-2\">\n                                                            {{detail | payrollDetailTotals:'netTotal' | currency}}\n                                                        </div>\n                                                        <div class=\"col-md-auto\">\n                                                            <button type=\"button\" mat-icon-button \n                                                                color=\"primary\"\n                                                                (click)=\"showExpensesAndOverrides(item, detail)\"\n                                                                [disabled]=\"item.isReleased\"\n                                                            >\n                                                                <mat-icon>settings</mat-icon>\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-cell>\n                        </ng-container>\n\n                        <mat-header-row *matHeaderRowDef=\"displayColumns\"></mat-header-row>\n                        <mat-row *matRowDef=\"let item; columns: displayColumns\"\n                            class=\"element-row clickable\"\n                            [class.expanded-row]=\"expandedItem === item\"\n                            [class.expanded]=\"expandedItem === item\"\n                            [class.released]=\"item.isReleased\"\n                            (click)=\"expandedItem = expandedItem === item ? null : item;\"\n                        ></mat-row>\n                        <mat-row \n                            *matRowDef=\"let row; columns: ['expandedDetail']\" \n                            class=\"detail-row\"\n                            [@detailExpand]=\"row == expandedItem ? 'expanded' : 'collapsed'\"\n                        ></mat-row>\n                    </mat-table>\n                </ng-container>\n            </ng-container>\n            <ng-template #noPayrolls>\n                <p class=\"text-center text-muted font-italic h4\">\n                    No Payrolls were found based on this search criteria. Please try adjusting your filters.\n                </p>\n            </ng-template>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CoreModule } from '@app/core';\nimport { MaterialModule } from '@app/material/material.module';\nimport { LoadingModule } from 'ngx-loading';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { PipesModule } from '@app/pipes/pipes.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { DirectivesModule } from '@app/directives/directives.module';\nimport { PayrollDialogComponent } from './payroll-dialog/payroll-dialog.component';\nimport { PayrollListComponent } from './payroll-list/payroll-list.component';\nimport { PayrollFilterDialogComponent } from './payroll-filter-dialog/payroll-filter-dialog.component';\nimport { OverrideExpenseDialogComponent } from './override-expense-dialog/override-expense-dialog.component';\nimport { ScheduleAutoReleaseDialogComponent } from './schedule-auto-release-dialog/schedule-auto-release-dialog.component';\nimport { ConfirmAutoreleaseDateDialogComponent } from './confirm-autorelease-date-dialog/confirm-autorelease-date-dialog.component';\nimport { ConfirmReleaseDialogComponent } from './confirm-release-dialog/confirm-release-dialog.component';\nimport { GrossTotalReleaseAmountPipe } from './confirm-release-dialog/gross-total-release-amount.pipe';\nimport { PaycheckListComponent } from './paycheck-list/paycheck-list.component';\nimport { PayCycleComponent } from './pay-cycle/pay-cycle.component';\nimport { EditPayCycleComponent } from './pay-cycle/components/edit-pay-cycle/edit-pay-cycle.component';\nimport { ConfirmUnpaidSelectionDialogComponent } from './pay-cycle/components/confirm-unpaid-selection-dialog/confirm-unpaid-selection-dialog.component';\nimport { PayCycleDialogComponent } from './pay-cycle/components/pay-cycle-dialog/pay-cycle-dialog.component';\nimport { RouterModule, Route } from '@angular/router';\nimport { AuthGuard } from '@app/auth.guard';\nimport { PaycheckDetailComponent } from './paycheck-detail/paycheck-detail.component';\nimport { PaycheckDetailService } from './paycheck-detail/paycheck-detail.service';\nimport { PaycheckDetailGuard } from './paycheck-detail.guard';\nimport { AgentPayrollViewComponent } from './agent-payroll-view/agent-payroll-view.component';\nimport { PayCycleTutorialDialogComponent } from './pay-cycle/components/pay-cycle-tutorial-dialog/pay-cycle-tutorial-dialog.component';\n\nconst routes:Route[] = [{ \n    path: 'admin/pay', \n    children: [\n        { path: 'pay-cycles', component: PayCycleComponent, canActivate: [AuthGuard] },\n        { path: 'pay-cycles/edit/:payCycleId', component: EditPayCycleComponent, canActivate: [AuthGuard] },\n        { path: 'manage', component: PayrollListComponent, canActivate: [AuthGuard] },\n        { path: 'paycheck-list', component: PaycheckListComponent, canActivate: [AuthGuard] },\n        { \n            path: 'paycheck-detail', \n            component: PaycheckDetailComponent, \n            canActivate: [PaycheckDetailGuard],\n            resolve: {\n                data: PaycheckDetailService\n            }\n        }\n    ]\n}, {\n    path: 'users/payroll',\n    children: [\n        { path: 'list', component: AgentPayrollViewComponent, canActivate: [AuthGuard] },\n        { \n            path: 'paycheck-detail', \n            component: PaycheckDetailComponent, \n            canActivate: [PaycheckDetailGuard],\n            resolve: {\n                data: PaycheckDetailService\n            }\n        }\n    ]\n}];\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MaterialModule,\n        CoreModule,\n        LoadingModule,\n        FabFloatBtnModule,\n        PipesModule,\n        DirectivesModule,\n\n        RouterModule.forChild(routes)\n    ],\n    declarations: [\n        PayCycleDialogComponent,\n        PayCycleTutorialDialogComponent,\n        PayrollDialogComponent,\n        PayrollListComponent,\n        PayrollFilterDialogComponent,\n        OverrideExpenseDialogComponent,\n        ScheduleAutoReleaseDialogComponent,\n        ConfirmAutoreleaseDateDialogComponent,\n        ConfirmReleaseDialogComponent,\n        GrossTotalReleaseAmountPipe,\n        PaycheckListComponent,\n        PayCycleComponent,\n        EditPayCycleComponent,\n        ConfirmUnpaidSelectionDialogComponent,\n        PaycheckDetailComponent,\n        AgentPayrollViewComponent\n    ],\n    exports: [\n        // not sure why i was exporting these??? \n        // PayCycleDialogComponent,\n        // PayrollDialogComponent,\n        // PayrollListComponent,\n        // PayrollFilterDialogComponent,\n        // OverrideExpenseDialogComponent,\n        // ScheduleAutoReleaseDialogComponent,\n        // ConfirmAutoreleaseDateDialogComponent,\n        // ConfirmReleaseDialogComponent,\n        // GrossTotalReleaseAmountPipe,\n        // PaycheckListComponent,\n        // PayCycleComponent,\n        // EditPayCycleComponent,\n        // ConfirmUnpaidSelectionDialogComponent\n    ],\n    entryComponents: [\n        PayCycleDialogComponent,\n        PayCycleTutorialDialogComponent,\n        PayrollDialogComponent,\n        ConfirmUnpaidSelectionDialogComponent,\n        PayrollFilterDialogComponent,\n        OverrideExpenseDialogComponent,\n        ScheduleAutoReleaseDialogComponent,\n        ConfirmAutoreleaseDateDialogComponent,\n        ConfirmReleaseDialogComponent\n    ],\n    providers: [\n        PaycheckDetailService\n    ]\n})\nexport class PayrollModule {}\n","import {Injectable} from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Payroll, PayrollDetails } from '@app/models';\nimport { Observable } from 'rxjs';\nimport { environment } from '@env/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PayrollService {\n\n    api:string = environment.apiUrl + 'api';\n\n    constructor(private http:HttpClient) {}\n\n    savePayrollList(clientId:number, payload:Payroll[]):Observable<Payroll[]> {\n        const url = `${this.api}/clients/${clientId}/payrolls`;\n        return this.http.post<Payroll[]>(url, payload);\n    }\n\n    getPayrollList(clientId:number, userId:number):Observable<Payroll[]> {\n        const url = `${this.api}/clients/${clientId}/users/${userId}/payrolls`;\n        return this.http.get<Payroll[]>(url);\n    }\n\n    saveAutoReleaseSettings(clientId:number, ids:number[], date:any) {\n        const url = `${this.api}/clients/${clientId}/payrolls/auto-release`;\n        const body = {\n            date: date,\n            payrollIds: ids\n        };\n        return this.http.post<Payroll[]>(url, body);\n    }\n\n    removeAutoReleaseSettings(clientId:number, payrollId:number):Observable<Payroll> {\n        const url = `${this.api}/clients/${clientId}/payrolls/${payrollId}/remove-auto-release`;\n        return this.http.get<Payroll>(url);\n    }\n\n    setReleased(clientId:number, payrollIds:number[]):Observable<boolean> {\n        const url = `${this.api}/clients/${clientId}/payrolls/set-released`;\n        const params = new HttpParams().set('payrollIds', JSON.stringify(payrollIds));\n        return this.http.get<boolean>(url, { params: params });\n    }\n\n    savePayrollDetails(clientId:number, details:PayrollDetails):Observable<Payroll[]> {\n        const url = `${this.api}/clients/${clientId}/payrolls/${details.payrollId}/details/${details.payrollDetailsId}`;\n        return this.http.post<Payroll[]>(url, details);\n    }\n    \n}\n","import {Component, OnInit, Inject} from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Moment } from 'moment';\n\ninterface DialogData {\n    date:Moment|Date|string;\n}\n\n@Component({\n    selector: 'vs-schedule-auto-release-dialog',\n    templateUrl: './schedule-auto-release-dialog.component.html',\n    styleUrls: ['./schedule-auto-release-dialog.component.scss']\n})\nexport class ScheduleAutoReleaseDialogComponent implements OnInit {\n\n    form:FormGroup = this.createForm();\n\n    constructor(\n        private ref:MatDialogRef<ScheduleAutoReleaseDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data:DialogData,\n        private fb:FormBuilder\n    ) {}\n\n    ngOnInit() {\n        if(this.data.date)\n            this.patchForm();\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    updateSelectedDate(event) {\n        console.dir(event);\n    }\n\n    saveAutoReleaseForm() {\n        if(this.form.invalid) return;\n\n        this.ref.close(this.form.value.releaseDate);\n    }\n\n    private createForm() {\n        return this.fb.group({\n            releaseDate: this.fb.control('', [Validators.required])\n        });\n    }\n\n    private patchForm() {\n        this.form.patchValue({\n            releaseDate: this.data.date\n        });\n    }\n\n}\n","\n<div mat-dialog-title class=\"d-flex justify-content-between\">\n    <h3>Schedule Auto Release</h3>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n<mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col-md-12\" [formGroup]=\"form\">\n            <mat-calendar-header></mat-calendar-header>\n            <mat-calendar\n                [selected]=\"form.value.releaseDate\"\n                (selectedChange)=\"updateSelectedDate($event)\"\n            ></mat-calendar>\n        </div>\n    </div>\n</mat-dialog-content>\n<mat-dialog-actions class=\"d-flex justify-content-end\">\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">\n        Cancel\n    </button>\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"saveAutoReleaseForm()\">\n        Save\n    </button>\n</mat-dialog-actions>","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'currencyInput'\n})\nexport class CurrencyInputPipe implements PipeTransform {\n    transform(value: any, args?: any): any {\n        console.dir([value, args]);\n        let result:string = this.isNumeric(value) ? value + '' : value;\n        let firstChar = result.charAt(0);\n        if(!this.isNumeric(firstChar))\n            result.slice(0, 1);\n        let decimalIndex = result.indexOf('.');\n        result.slice(decimalIndex, 2);\n        result = result == null || result.length == 0 ? `00` : result;\n        return `$${result}.00`;\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(value - parseFloat(value));\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { PayrollDetails } from '@app/models';\nimport { coerceNumberProperty } from '@app/utils';\n\n@Pipe({\n    name: 'payrollDetailTotals'\n})\nexport class PayrollDetailTotalsPipe implements PipeTransform {\n    transform(value:PayrollDetails, args:'grossTotal'|'netTotal' = 'grossTotal'): any {\n        if (args == 'grossTotal')\n            return this.calculateGrossTotal(value);\n        else if (args == 'netTotal')\n            return this.calculateNetTotal(value);\n    }\n\n    private calculateGrossTotal(detail:PayrollDetails):number {\n        let expenses = detail.expenses.map(e => e.amount).reduce((t, n) => \n            coerceNumberProperty(t) + coerceNumberProperty(n), 0);\n        let overrides = detail.overrides.map(o => (o.amount * o.units)).reduce((t, n) => \n            coerceNumberProperty(t) + coerceNumberProperty(n), 0);\n        expenses = coerceNumberProperty(expenses);\n        overrides = coerceNumberProperty(overrides);\n        const currGross = coerceNumberProperty(detail.grossTotal);\n        return currGross + expenses + overrides;\n    }\n\n    private calculateNetTotal(detail:PayrollDetails):number {\n        let result = this.calculateGrossTotal(detail);\n        result = +result - +detail.taxes;\n        return result;\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport { parsePhoneNumber, CountryCode } from 'libphonenumber-js';\n\n@Pipe({\n    name: 'phone'\n})\nexport class PhonePipe implements PipeTransform {\n    transform(value: string, country:string = 'US'): any {\n        if (!value) return '';\n        try {\n            const phoneNumber = parsePhoneNumber(`${value}`, country as CountryCode);\n            return phoneNumber.formatNational();\n        } catch (error) {\n            console.error(error);\n            return value;\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PhonePipe} from '@app/pipes/phone.pipe';\nimport { MaterialModule } from '@app/material/material.module';\nimport { CurrencyInputPipe } from './currency-input.pipe';\nimport { PayrollDetailTotalsPipe } from './payroll-detail-totals.pipe';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule\n    ],\n    declarations: [PhonePipe, CurrencyInputPipe, PayrollDetailTotalsPipe],\n    exports: [PhonePipe, CurrencyInputPipe, PayrollDetailTotalsPipe]\n})\nexport class PipesModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'vs-public-home',\n    templateUrl: './public-home.component.html',\n    styleUrls: ['./public-home.component.scss']\n})\nexport class PublicHomeComponent implements OnInit {\n    \n    constructor() {}\n\n    ngOnInit() {}\n}\n","\n<!-- <img src=\"dist/assets/images/hero.jpg\" class=\"hero-banner\" /> -->\n\n<div class=\"container-fluid\">\n    <div class=\"row flex-column\">\n        <div class=\"row hero-banner\">\n            <div class=\"col-md-5 offset-md-2 d-flex align-items-center\">\n                <h1 class=\"display-3 text-white hero-banner-text py-2\">\n                    <span>Leave the</span> \n                    <span>analytics</span> \n                    <span>to us,</span> \n                    <span>so your team</span> \n                    <span>can execute.</span>\n                </h1>\n            </div>\n        </div>\n\n        <div class=\"row my-4 justify-content-center\">\n            <div class=\"col-md-6 d-flex justify-content-center\">\n                <div>\n                    <h3 class=\"font-weight-light mb-4 text-center\">Welcome to Comprehensive Analytics</h3>\n                    <p class=\"text-center lead text-muted mb-4\" style=\"line-height: 1.2;\">\n                        We can provide you with the tools to manage clients and communicate with them effectively, employees, sales analytics while keeping your accounting \n                        in order and making sure you have the data at your fingertips that you need to be successful. \n                    </p>\n                    <hr style=\"width:80%;\" />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row my-4 justify-content-center\">\n            <div class=\"col-md-4 d-flex justify-content-center\">\n                <span class=\"mx-2\">\n                    <a href=\"#\" class=\"text-muted\">Facebook</a>\n                </span>\n                <span class=\"mx-2\">\n                    <a href=\"#\" class=\"text-muted\">Twitter</a>\n                </span>\n                <span class=\"mx-2\">\n                    <a href=\"#\" class=\"text-muted\">Medium</a>\n                </span>\n            </div>\n        </div>\n\n        <div class=\"d-flex\" style=\"flex:1 1 auto;\">&nbsp;</div>\n\n        <div class=\"row mt-4 justify-content-center\">\n            <div class=\"col-md-4 d-flex justify-content-center\">\n                <div class=\"logo-container\">\n                    <img src=\"dist/assets/images/logo.svg\" width=\"100%\" height=\"100%\" />\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\nimport { ResetPasswordService } from './reset-password.service';\n\n@Component({\n    selector: 'vs-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n    resetId:string;\n    email = new FormControl('', [Validators.required, Validators.email]);\n    password = new FormControl('', [Validators.required]);\n    passwordConfirmation = new FormControl('', [Validators.required]);\n\n    constructor(private route: ActivatedRoute, private service: ResetPasswordService, private router: Router) { }\n\n    ngOnInit() {\n        // reset id is saved as snapshot to what was requested from email to avoid tampering\n        this.resetId = this.route.snapshot.params['resetId'];\n    }\n\n    submitResetForm() {\n        const request:ResetPasswordRequest = {\n            email: this.email.value,\n            password: this.password.value,\n            password_confirmation: this.passwordConfirmation.value,\n            token: this.resetId\n        };\n\n        this.service.resetPassword(request).subscribe(() => {\n           \n            setTimeout(() => {\n                this.router.navigate(['login']);\n            }, 1500);\n\n        }, (err) => this.router.navigate(['login']));\n    }\n\n    getPasswordConfirmationErrorMessages() {\n        if (this.passwordConfirmation.getError('required')) {\n            return 'Please confirm your password.';\n        }\n\n        if (this.passwordConfirmation.getError('pattern')) {\n            return 'Oops, looks like your passwords don\\'t match.';\n        }\n    }\n\n    validatePasswordsMatch(c: FormControl) {\n        const matches = c.parent != null && c.parent.get('password').value.trim() == c.value.trim();\n        return matches ? null : {\n            passwordsMatch: true\n        };\n    }\n\n}\n","\n<div class=\"container\">\n    <div class=\"row d-flex justify-content-center\">\n        <div class=\"col-md-5\">\n            <mat-card>\n                <h1 mat-card-title>\n                    Reset Password\n                </h1>\n                <img mat-card-image src=\"dist/assets/images/my_password.svg\" class=\"p-4\" />\n                <mat-card-content>\n                    <mat-form-field class=\"wp-100\" hideRequiredMarker=\"true\">\n                        <input matInput type=\"text\" [formControl]=\"email\" placeholder=\"Email\" required />\n                        <mat-error *ngIf=\"email.hasError\">\n                            Please enter a valid email address.\n                        </mat-error>\n                    </mat-form-field>\n        \n                    <mat-form-field class=\"wp-100\" hideRequiredMarker=\"true\">\n                        <input matInput type=\"password\" [formControl]=\"password\" placeholder=\"Password\" required />\n                        <mat-error *ngIf=\"password.hasError\">\n                            Please enter a password.\n                        </mat-error>\n                    </mat-form-field>\n        \n                    <mat-form-field class=\"wp-100\" hideRequiredMarker=\"true\">\n                        <input matInput type=\"password\" [formControl]=\"passwordConfirmation\" \n                            placeholder=\"Confirm Password\" required [pattern]=\"password.value\" />\n                        <mat-error *ngIf=\"passwordConfirmation.hasError\">\n                            {{ getPasswordConfirmationErrorMessages() }}\n                        </mat-error>\n                    </mat-form-field>\n                </mat-card-content>\n                <mat-card-actions>\n                    <button type=\"button\" mat-raised-button class=\"wp-100\" color=\"primary\" (click)=\"submitResetForm()\">\n                        <mat-icon>save</mat-icon> Save\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ResetPasswordService {\n\n    api = `${environment.apiUrl}api`;\n\n    constructor(private http:HttpClient) {}\n\n    resetPassword(request:ResetPasswordRequest):Observable<void> {\n        const url = `${this.api}/save-password-reset`;\n        return this.http.post<void>(url, request);\n    }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-select-mapper',\n  templateUrl: './select-mapper.component.html',\n  styleUrls: ['./select-mapper.component.css']\n})\nexport class SelectMapperComponent implements OnInit {\n\n  isMappedByUsername: boolean;\n  toggleTitle: string;\n\n  constructor(\n    public ref: MatDialogRef<SelectMapperComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {\n    this.isMappedByUsername = false;\n  }\n\n  ngOnInit() {\n    this.toggleTitle = this.isMappedByUsername ? 'Map invoice by Username' : 'Map invoice by Sales ID';\n  }\n\n  closeDialog(mapBy: string): void {\n    this.ref.close(mapBy);\n  }\n\n}\n","\n\n<mat-card-title>Choose a mapping method.</mat-card-title>\n<mat-card-content>\n  The best method to map is to use the agent's sales id. However, it is imperative that you make sure both the sales ID is updated in their\n  profile and is displayed properly in the invoice. The fallback option would be to match the agent by name, but this requires that the name\n  typed into the invoice matches identically to the agent's profile.\n</mat-card-content>\n<mat-card-actions class=\"d-flex justify-content-between mx-0\">\n  <button type=\"button\" mat-button (click)=\"closeDialog('username')\">Username</button>\n  <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"closeDialog('salesId')\">Sales ID</button>\n</mat-card-actions>\n","import {Injectable} from '@angular/core';\nimport {User} from './models/user.model';\nimport {Observable, BehaviorSubject, Subject, ReplaySubject, Observer, forkJoin} from 'rxjs';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport {LocalStorage, JSONSchema} from '@ngx-pwa/local-storage';\nimport {ILocalStorage, IToken} from './models';\nimport {HttpRequest} from '@angular/common/http';\nimport {Router, NavigationEnd} from '@angular/router';\nimport {environment} from '../environments/environment';\n\nimport * as moment from 'moment';\nimport { filter, map } from 'rxjs/operators';\nimport { UserService } from './user-features/user.service';\n\ndeclare var window: any;\n\nconst rootUrl = environment.rootUrl;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n    static defaultUserUrl = 'my-information';\n    private sidenav: MatSidenav;\n\n    dataStore: {user: User; token: IToken} = {\n        user: null,\n        token: null\n    };\n\n    navigateQueue: string[] = [];\n    loggedInService: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n    private userLoggedIn: boolean;\n    userItem = new BehaviorSubject<User>(null);\n\n    private tokenItem$: Subject<IToken> = new ReplaySubject<IToken>(1);\n    tokenItem: Observable<IToken>;\n\n    loading$ = new BehaviorSubject<boolean>(false);\n\n    private _hasToken = new BehaviorSubject<boolean>(false);\n    isLoginSubject = new BehaviorSubject<boolean>(false);\n\n    previousUrl = '';\n    currentUrl = '';\n\n    private _navigationTitle:string = environment.defaultTitle;\n    navigationTitle$ = new BehaviorSubject<string>(this._navigationTitle);\n\n    constructor(\n        private localStorage: LocalStorage, \n        private router: Router\n    ) {\n        // make sure we're removing expired cookies on app boot\n        this.pruneExpiredStorage();\n        for (const p in this.dataStore) {\n            this.getItem(p);\n        }\n\n        this.tokenItem = this.tokenItem$.asObservable();\n\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd)\n        ).subscribe((e:any) => {\n            this.previousUrl = this.currentUrl;\n            this.currentUrl = e.url;\n        });\n\n        // this.userItem.pipe(map(u => u.selectedClient = this._selectedClient));\n    }\n\n    // private _selectedClient():number {\n    //     return this.userItem.getValue().sessionUser.sessionClient;\n    // }\n\n    get lastUser(): User {\n        const u = this.userItem.value;\n        if (u.selectedClient == null) {\n            u.selectedClient = u.sessionUser.client != null \n                ? u.sessionUser.client\n                : u.clients.find(c => c.clientId == u.sessionUser.sessionClient);\n        }\n        return u;\n    }\n\n    setNavigationTitle(value:string) {\n        if (typeof value !== 'string' || value == null) return;\n        this._navigationTitle = value;\n        this.navigationTitle$.next(this._navigationTitle);\n    }\n\n    private getToken():Observable<ILocalStorage<IToken>> {\n        return Observable.create((observer:Observer<ILocalStorage<IToken>>) => {\n\n            this.localStorage\n                .getItem('token')\n                .subscribe((token:ILocalStorage<IToken>) => {\n                    if (token == null) return;\n\n                    if (Date.now() >= token.expires) {\n                        this.removeItem('token');\n                        this.isLoginSubject.next(false);\n                    } else {\n                        this.dataStore.token = token.data;\n                        this.tokenItem$.next(token.data);\n                        this.isLoginSubject.next(true);\n                    }\n\n                    observer.next(token);\n                    observer.complete();\n                });\n\n        });\n    }\n\n    login(token: ILocalStorage<IToken>): void {\n        this.setToken(token.data);\n        this.setItem('token', token);\n        this.hideLoader();\n    }\n\n    logout(): void {\n        this.clearStorage();\n        this.isLoginSubject.next(false);\n        this._hasToken.next(false);\n        this.router.navigateByUrl('login');\n    }\n\n    getUserItem():Observable<User> {\n        return this.userItem;\n    }\n\n    // hide the loading graphics\n    hideLoader(): void {\n        this.loading$.next(false);\n    }\n\n    // show the loading graphics\n    showLoader(): void {\n        this.loading$.next(true);\n    }\n\n    /**\n     * Access router instance and redirect user to the view of your choice.\n     *\n     * @param view string\n     */\n    navigateTo(view: string): void {\n        this.navigateQueue.push(view);\n        this.router.navigateByUrl(view);\n    }\n\n    navigateByUrl(url: string): void {\n        this.router.navigateByUrl(url);\n    }\n\n    /**\n     * Navigate back to a page the user has been to very the navigation queue.\n     *\n     * @param index\n     */\n    navigateBack(index: number = 1): Promise<any> {\n        return this.router.navigateByUrl(this.navigateQueue[index]);\n    }\n\n    /**\n     * Updates the user item in the session\n     *\n     * @param user\n     */\n    setUser(user: User) {\n        this.userItem.next(user);\n    }\n\n    setToken(token: IToken) {\n        this.isLoginSubject.next(true);\n        this._hasToken.next(true);\n        this.dataStore.token = token;\n        this.tokenItem$.next(token);\n    }\n\n    setItem<T>(itemName: string, data:ILocalStorage<T>) {\n        if (this.dataStore[itemName]) this.dataStore[itemName] = data.data;\n        data.expires =\n            data.expires == null ? moment().valueOf() + moment.duration(3, 'days').milliseconds() : data.expires;\n        this.localStorage.setItemSubscribe(itemName, data);\n    }\n\n    getItem(itemName: string) {\n        itemName = itemName.trim().toLowerCase();\n        this.localStorage.getItem(itemName).subscribe((next: ILocalStorage<any>) => {\n            if (next == null) {\n                return;\n            } else if (Date.now() >= next.expires) {\n                this._hasToken.next(false);\n                this.isLoginSubject.next(false);\n                this.removeItem(itemName);\n            } else if (itemName === 'user') {\n                this._hasToken.next(true);\n                this.isLoginSubject.next(true);\n                this.dataStore.user = next.data;\n                this.userItem.next(<User>next.data);\n            } else if (itemName === 'token') {\n                this._hasToken.next(true);\n                this.isLoginSubject.next(true);\n                this.dataStore.token = next.data;\n                this.tokenItem$.next(<IToken>next.data);\n            }\n            this.loggedInService.next(this.userLoggedIn);\n        });\n    }\n\n    /**\n     * Exposes our localstorage user via the session service.\n     */\n    isUserAuthenticated(): Observable<ILocalStorage<User>> {\n        return this.localStorage.getItem('user') as Observable<ILocalStorage<User>>;\n    }\n\n    /**\n     * Explicit method to load user item from storage.\n     *\n     */\n    loadUserStorageItem(): void {\n        this.localStorage.getItem('user').subscribe((item: ILocalStorage<User>) => {\n            if (item == null) {\n                this.userLoggedIn = false;\n                return;\n            }\n\n            if (item.expires <= moment().valueOf()) {\n                this.userLoggedIn = false;\n                this.removeItem('user');\n            } else {\n                this.userLoggedIn = true;\n                this.dataStore.user = item.data;\n                this.userItem.next(item.data);\n            }\n\n            this.loggedInService.next(this.userLoggedIn);\n        });\n    }\n\n    /**\n     * Explicit method to load token item from storage.\n     *\n     */\n    getAuthenticationStorageItems():Observable<AuthenticationStorageItems> {\n        this.pruneExpiredStorage();\n\n        return Observable.create((observer:Observer<AuthenticationStorageItems>) => {\n            forkJoin(\n                this.localStorage.getItem<ILocalStorage<IToken>>('token'),\n                this.localStorage.getItem<ILocalStorage<User>>('user')\n            ).subscribe(([storageToken, storageUser]) => {\n                if (storageToken == null || storageUser == null) {\n                    //this._logoutUser(); this is always routing user to login page on page load even if they aren't a signed in user... \n                    observer.next(null);\n                    observer.complete();\n                    return;\n                }\n                    \n                const token:ILocalStorage<IToken> = storageToken as ILocalStorage<IToken>;\n                const user:ILocalStorage<User> = storageUser as ILocalStorage<User>;\n                const payload:AuthenticationStorageItems = {\n                    token: token,\n                    user: user\n                };\n    \n                if (token.expires <= Date.now()) {\n                    // this._logoutUser(); this is always routing user to login page on page load even if they aren't a signed in user... \n                    observer.next(null);\n                    observer.complete();\n                } else {\n                    this.userLoggedIn = true;\n                    this.dataStore.token = token.data;\n                    this.tokenItem$.next(token.data);\n                    this.loggedInService.next(true);\n                    observer.next(payload);\n                    observer.complete();\n                }\n            });\n        });\n    }\n\n    private _logoutUser() {\n        this.userLoggedIn = false;\n        this.localStorage.clearSubscribe();\n        this.loggedInService.next(false);\n        this.router.navigate(['login']);\n    }\n\n    /**\n     * Removes an item from the localstorage.\n     *\n     * @param itemName\n     */\n    removeItem(itemName: string): void {\n        this.localStorage.removeItemSubscribe(itemName);\n    }\n\n    /**\n     * Iterates through all stored objects in localstorage\n     * and checks their expiration dates. If the object has passed\n     * its expiration date, it is invalidated and the object is\n     * removed.\n     *\n     */\n    pruneExpiredStorage(): void {\n        const values = [];\n        const keys = Object.keys(localStorage);\n        let i = keys.length;\n\n        while (i--) {\n            values.push({\n                key: keys[i],\n                data: this.localStorage.getItem(keys[i])\n            });\n        }\n\n        for (let v = 0; v < values.length; v++) {\n            let item = values[v];\n            if (Date.now() > item.data.expires) {\n                this.removeItem(item.key);\n            }\n        }\n    }\n\n    clearStorage(): void {\n        this.localStorage.clearSubscribe();\n        this.userItem.next(null);\n        this.tokenItem$.next(null);\n    }\n\n    /**\n     * When the user has been logged in, we need to make sure we are appending these to every HTTP call,\n     * so that the user can make authorized calls to the server.\n     *\n     */\n    getTokenRequest(request: HttpRequest<any>): HttpRequest<any> {\n        if (!this.dataStore || !this.dataStore.token) {\n            return request;\n        }\n\n        return request.clone({\n            setHeaders: {\n                Authorization: 'Bearer ' + this.dataStore.token.access_token\n            }\n        });\n    }\n}\n\nexport interface AuthenticationStorageItems {\n    token:ILocalStorage<IToken>,\n    user:ILocalStorage<User>\n}","\nexport * from './models/state.model';\nexport * from './moment-extensions';\nexport * from './quill-config';\nexport * from './shared.module';","\nexport interface IState {\n  name:string,\n  abbreviation:string\n}\n\nexport class States {\n  static readonly list:IState[] = [\n    {\n        \"name\": \"Alabama\",\n        \"abbreviation\": \"AL\"\n    },\n    {\n        \"name\": \"Alaska\",\n        \"abbreviation\": \"AK\"\n    },\n    {\n        \"name\": \"American Samoa\",\n        \"abbreviation\": \"AS\"\n    },\n    {\n        \"name\": \"Arizona\",\n        \"abbreviation\": \"AZ\"\n    },\n    {\n        \"name\": \"Arkansas\",\n        \"abbreviation\": \"AR\"\n    },\n    {\n        \"name\": \"California\",\n        \"abbreviation\": \"CA\"\n    },\n    {\n        \"name\": \"Colorado\",\n        \"abbreviation\": \"CO\"\n    },\n    {\n        \"name\": \"Connecticut\",\n        \"abbreviation\": \"CT\"\n    },\n    {\n        \"name\": \"Delaware\",\n        \"abbreviation\": \"DE\"\n    },\n    {\n        \"name\": \"District Of Columbia\",\n        \"abbreviation\": \"DC\"\n    },\n    {\n        \"name\": \"Federated States Of Micronesia\",\n        \"abbreviation\": \"FM\"\n    },\n    {\n        \"name\": \"Florida\",\n        \"abbreviation\": \"FL\"\n    },\n    {\n        \"name\": \"Georgia\",\n        \"abbreviation\": \"GA\"\n    },\n    {\n        \"name\": \"Guam\",\n        \"abbreviation\": \"GU\"\n    },\n    {\n        \"name\": \"Hawaii\",\n        \"abbreviation\": \"HI\"\n    },\n    {\n        \"name\": \"Idaho\",\n        \"abbreviation\": \"ID\"\n    },\n    {\n        \"name\": \"Illinois\",\n        \"abbreviation\": \"IL\"\n    },\n    {\n        \"name\": \"Indiana\",\n        \"abbreviation\": \"IN\"\n    },\n    {\n        \"name\": \"Iowa\",\n        \"abbreviation\": \"IA\"\n    },\n    {\n        \"name\": \"Kansas\",\n        \"abbreviation\": \"KS\"\n    },\n    {\n        \"name\": \"Kentucky\",\n        \"abbreviation\": \"KY\"\n    },\n    {\n        \"name\": \"Louisiana\",\n        \"abbreviation\": \"LA\"\n    },\n    {\n        \"name\": \"Maine\",\n        \"abbreviation\": \"ME\"\n    },\n    {\n        \"name\": \"Marshall Islands\",\n        \"abbreviation\": \"MH\"\n    },\n    {\n        \"name\": \"Maryland\",\n        \"abbreviation\": \"MD\"\n    },\n    {\n        \"name\": \"Massachusetts\",\n        \"abbreviation\": \"MA\"\n    },\n    {\n        \"name\": \"Michigan\",\n        \"abbreviation\": \"MI\"\n    },\n    {\n        \"name\": \"Minnesota\",\n        \"abbreviation\": \"MN\"\n    },\n    {\n        \"name\": \"Mississippi\",\n        \"abbreviation\": \"MS\"\n    },\n    {\n        \"name\": \"Missouri\",\n        \"abbreviation\": \"MO\"\n    },\n    {\n        \"name\": \"Montana\",\n        \"abbreviation\": \"MT\"\n    },\n    {\n        \"name\": \"Nebraska\",\n        \"abbreviation\": \"NE\"\n    },\n    {\n        \"name\": \"Nevada\",\n        \"abbreviation\": \"NV\"\n    },\n    {\n        \"name\": \"New Hampshire\",\n        \"abbreviation\": \"NH\"\n    },\n    {\n        \"name\": \"New Jersey\",\n        \"abbreviation\": \"NJ\"\n    },\n    {\n        \"name\": \"New Mexico\",\n        \"abbreviation\": \"NM\"\n    },\n    {\n        \"name\": \"New York\",\n        \"abbreviation\": \"NY\"\n    },\n    {\n        \"name\": \"North Carolina\",\n        \"abbreviation\": \"NC\"\n    },\n    {\n        \"name\": \"North Dakota\",\n        \"abbreviation\": \"ND\"\n    },\n    {\n        \"name\": \"Northern Mariana Islands\",\n        \"abbreviation\": \"MP\"\n    },\n    {\n        \"name\": \"Ohio\",\n        \"abbreviation\": \"OH\"\n    },\n    {\n        \"name\": \"Oklahoma\",\n        \"abbreviation\": \"OK\"\n    },\n    {\n        \"name\": \"Oregon\",\n        \"abbreviation\": \"OR\"\n    },\n    {\n        \"name\": \"Palau\",\n        \"abbreviation\": \"PW\"\n    },\n    {\n        \"name\": \"Pennsylvania\",\n        \"abbreviation\": \"PA\"\n    },\n    {\n        \"name\": \"Puerto Rico\",\n        \"abbreviation\": \"PR\"\n    },\n    {\n        \"name\": \"Rhode Island\",\n        \"abbreviation\": \"RI\"\n    },\n    {\n        \"name\": \"South Carolina\",\n        \"abbreviation\": \"SC\"\n    },\n    {\n        \"name\": \"South Dakota\",\n        \"abbreviation\": \"SD\"\n    },\n    {\n        \"name\": \"Tennessee\",\n        \"abbreviation\": \"TN\"\n    },\n    {\n        \"name\": \"Texas\",\n        \"abbreviation\": \"TX\"\n    },\n    {\n        \"name\": \"Utah\",\n        \"abbreviation\": \"UT\"\n    },\n    {\n        \"name\": \"Vermont\",\n        \"abbreviation\": \"VT\"\n    },\n    {\n        \"name\": \"Virgin Islands\",\n        \"abbreviation\": \"VI\"\n    },\n    {\n        \"name\": \"Virginia\",\n        \"abbreviation\": \"VA\"\n    },\n    {\n        \"name\": \"Washington\",\n        \"abbreviation\": \"WA\"\n    },\n    {\n        \"name\": \"West Virginia\",\n        \"abbreviation\": \"WV\"\n    },\n    {\n        \"name\": \"Wisconsin\",\n        \"abbreviation\": \"WI\"\n    },\n    {\n        \"name\": \"Wyoming\",\n        \"abbreviation\": \"WY\"\n    }\n  ];\n\n  constructor() {}\n\n  static $get = ():IState[] => States.list;\n}\n","import * as moment from 'moment';\nimport { Moment } from 'moment';\n\nexport interface Moment extends Moment {\n    toDateString?():string\n}\n\ntype Inclusivity = \"()\" | \"[)\" | \"(]\" | \"[]\";\n\ninterface IMomentInclusivity {\n    includeNone:Inclusivity,\n    includeStart:Inclusivity,\n    includeEnd:Inclusivity,\n    includeBoth:Inclusivity\n}\n\nexport const MomentInclusivity:IMomentInclusivity = {\n    includeNone:'()',\n    includeStart: '[)',\n    includeEnd: '(]',\n    includeBoth: '[]'\n}\n\nexport class MomentExtensions {\n\n    constructor() {\n        (<any>moment.fn).toDateString = this.toDateString;\n    }\n\n    toDateString = function():string {\n        return moment(this).clone().format('YYYY-MM-DD');\n    }\n\n    static init = () => new MomentExtensions();\n}","\n\nexport class QuillConfig {\n\n    static readonly DEFAULT_MODULE:any = {\n        toolbar: [\n            ['bold', 'italic', 'underline', 'strike'],  // toggled buttons\n            [{ 'font': [] }],\n            [{ 'color': [], 'background': [] }],\n            [{ 'header': [1, 2, 3, 4, 5, 6, false] }], // headings\n            [{ 'list': 'ordered' }, { 'list': 'bullet' }], // lists\n            [{ 'align': [] }],\n            ['blockquote'],\n            [{ 'indent': '-1'}, { 'indent': '+1' }], // indentations\n            ['link', 'image'] // media\n        ]\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MaterialModule } from '../material/material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CampaignsModule } from '../campaigns/campaigns.module';\nimport { UserFeaturesModule } from '../user-features/user-features.module';\nimport { ClientSelectorComponent } from '../client-selector/client-selector.component';\nimport { SelectMapperComponent } from '../select-mapper/select-mapper.component';\nimport { LoadingSpinnerComponent } from '../loading-spinner/loading-spinner.component';\nimport { BaseModule } from '@app/base/base.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        BrowserModule,\n        MaterialModule,\n        FormsModule,\n        CampaignsModule,\n        UserFeaturesModule,\n        ReactiveFormsModule,\n        BaseModule\n    ],\n    // declarations: [\n    //     ClientSelectorComponent,\n    //     SelectMapperComponent,\n    //     LoadingSpinnerComponent\n    // ],\n    //   entryComponents: [\n    //     ClientSelectorComponent,\n    //     SelectMapperComponent,\n    //     LoadingSpinnerComponent\n    //   ],\n    // exports: [ClientSelectorComponent, SelectMapperComponent, LoadingSpinnerComponent],\n    \n    providers: []\n})\nexport class SharedModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {User} from '../models';\nimport {SessionService} from '@app/session.service';\nimport {SidenavService} from '@app/sidenav/sidenav.service';\nimport { Location } from '@angular/common';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { UserRole } from '@app/models/role.model';\n\n@Component({\n    selector: 'side-nav',\n    templateUrl: './sidenav.component.html',\n    styleUrls: ['./sidenav.component.scss']\n})\nexport class SidenavComponent implements OnInit {\n\n    roleType = {\n        systemAdmin: 7,\n        companyAdmin: 6,\n        humanResources: 5,\n        regManager: 4,\n        manager: 3,\n        supervisor: 2,\n        user: 1\n    };\n\n    user: User;\n    role: any;\n    expandPayrollLinks = false;\n    expandPeopleLinks = false;\n    expandImports = false;\n\n    constructor(\n        private session: SessionService, \n        private navService: SidenavService,\n        private location:Location,\n        private router:Router,\n        private route:ActivatedRoute\n    ) {\n        this.session.getUserItem().subscribe(u => (this.user = u));\n    }\n\n    ngOnInit() {\n        // this.expandPayrollLinks = this.location.path(true).includes('admin/pay');\n\n        this.router.events.pipe(\n            filter(event => event instanceof NavigationEnd)\n        ).subscribe(() => {\n            // we are on the contacts page if this is true\n            if (this.location.path(true).includes('contacts')) {\n                this.navService.close();\n            }\n        });\n    }\n\n    toggleSidenav(): void {\n        this.navService.toggle();\n    }\n\n    get hasMyWorkMenuItem(): boolean {\n        return this.user && this.user.agent && this.user.role && this.user.role.role < UserRole.COMPANY_ADMIN\n            && this.user.role.role != UserRole.MANAGER && this.user.role.role != UserRole.REGIONAL_MANAGER\n            && this.user.agent.isActive;\n    }\n}\n","<mat-toolbar color=\"primary\" *ngIf=\"user != null\">\n    <mat-toolbar-row>\n        <i class=\"material-icons md-48 mt-3\">account_circle</i>\n        <span class=\"fill-remaining-space\"></span>\n        <button mat-button (click)=\"toggleSidenav()\" class=\"sidenav-close\">\n            <i class=\"material-icons\">close</i>\n        </button>\n    </mat-toolbar-row>\n    <mat-toolbar-row class=\"d-flex flex-column align-items-start mb-2 mt-3\">\n        {{user.firstName}} {{user.lastName}}\n        <small>{{user.email}}</small>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-nav-list *ngIf=\"user != null\" #navList>\n    <!-- all users -->\n    <a mat-list-item routerLink=\"my-information\" routerLinkActive=\"mat-router-link-active\">\n        <mat-icon>info_outline</mat-icon>\n        <span>My Information</span>\n    </a>\n    <a mat-list-item [routerLink]=\"['users', 'payroll', 'list']\" *ngIf=\"user?.role?.role < roleType.companyAdmin\">\n        <mat-icon>attach_money</mat-icon>\n        <span>My Earnings</span>\n    </a>\n    <a mat-list-item \n        routerLink=\"daily-tracker\" \n        routerLinkActive=\"mat-router-link-active\"\n        *ngIf=\"user?.role?.role < roleType.companyAdmin && user?.role?.isSalesAdmin && user?.role?.role != roleType.manager && user?.role?.role != roleType.regManager\"\n    >\n        <mat-icon>ballot</mat-icon>\n        <span>Daily Tracker</span>\n    </a>\n\n    <!-- agents only -->\n    <ng-container *ngIf=\"hasMyWorkMenuItem\">\n        <a mat-list-item routerLink=\"dashboard\" routerLinkActive=\"mat-router-link-active\">\n            <mat-icon>pie_chart</mat-icon>\n            <span>My Work</span>\n        </a>\n    </ng-container>\n\n    <!-- do we have hr level links? -->\n\n    <!-- COMPANY ADMIN || SYSTEM ADMIN ONLY -->\n    <ng-container *ngIf=\"user?.role?.role >= roleType.companyAdmin\">\n        <!-- THIS WHOLE COMPONENT NEEDS TO BE REWORKED AFTER SO MANY SCHEMA CHANGES\n        <a mat-list-item routerLink=\"dashboard\" routerLinkActive=\"mat-router-link-active\">\n            <mat-icon>pie_chart</mat-icon>\n            <span>Analyze</span>\n        </a> -->\n        \n        <mat-accordion mat-list-item class=\"navigation-accordion\">\n            <mat-expansion-panel [expanded]=\"expandImports\" (opened)=\"expandImports=!expandImports;\"\n                (closed)=\"expandImports=!expandImports;\">\n                <mat-expansion-panel-header [class.expanded-menu-item]=\"expandImports\">\n                    <mat-panel-title>\n                        <mat-icon>import_contacts</mat-icon>\n                        <span>Imports</span>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n\n                <mat-nav-list>\n                    <a mat-list-item routerLink=\"imports/models\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>build</mat-icon>\n                        <span>Manage</span>\n                    </a>\n\n                    <a mat-list-item routerLink=\"imports/process\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>backup</mat-icon>\n                        <span>Process</span>\n                    </a>\n                </mat-nav-list>\n            </mat-expansion-panel>\n        </mat-accordion>\n\n        <a mat-list-item routerLink=\"daily-tracker\" routerLinkActive=\"mat-router-link-active\">\n            <mat-icon>ballot</mat-icon>\n            <span>Sales</span>\n        </a>\n        <a mat-list-item routerLink=\"client-information\" routerLinkActive=\"mat-router-link-active\">\n            <mat-icon>business</mat-icon>\n            <span>Company</span>\n        </a>\n\n        <mat-accordion mat-list-item class=\"navigation-accordion\">\n            <mat-expansion-panel [expanded]=\"expandPayrollLinks\" (opened)=\"expandPayrollLinks=!expandPayrollLinks;\"\n                (closed)=\"expandPayrollLinks=!expandPayrollLinks;\">\n                <mat-expansion-panel-header [class.expanded-menu-item]=\"expandPayrollLinks\">\n                    <mat-panel-title>\n                        <mat-icon>account_balance</mat-icon>\n                        <span>Payroll</span>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n\n                <mat-nav-list>\n                    <a mat-list-item routerLink=\"admin/pay/pay-cycles\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>assignment</mat-icon>\n                        <span>Pay Runs</span>\n                    </a>\n                    <a mat-list-item routerLink=\"admin/pay/manage\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>date_range</mat-icon>\n                        <span>Release Pay</span>\n                    </a>\n                    <a mat-list-item [routerLink]=\"['admin', 'pay', 'paycheck-list']\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>local_atm</mat-icon>\n                        <span>View Paychecks</span>\n                    </a>\n                </mat-nav-list>\n            </mat-expansion-panel>\n        </mat-accordion>\n        \n        <mat-accordion mat-list-item class=\"navigation-accordion\">\n            <mat-expansion-panel [expanded]=\"expandPeopleLinks\" (opened)=\"expandPeopleLinks=!expandPeopleLinks;\" \n                (closed)=\"expandPeopleLinks=!expandPeopleLinks;\">\n                <mat-expansion-panel-header [class.expanded-menu-item]=\"expandPeopleLinks\">\n                    <mat-panel-title>\n                        <mat-icon>{{ expandPeopleLinks ? 'people_outline' : 'group_add' }}</mat-icon>\n                        <span>People</span>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n\n                <mat-nav-list>\n                    <a mat-list-item routerLink=\"agents\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>person</mat-icon>\n                        <span>Agents</span>\n                    </a>\n\n                    <a mat-list-item [routerLink]=\"['/contacts']\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>contacts</mat-icon>\n                        <span>Contacts</span>\n                    </a>\n                </mat-nav-list>\n            </mat-expansion-panel>\n        </mat-accordion>\n        \n        <a mat-list-item routerLink=\"campaigns\" routerLinkActive=\"mat-router-link-active\">\n            <mat-icon>assignment</mat-icon>\n            <span>Campaigns</span>\n        </a>\n        \n        <!-- end of admin links -->\n    </ng-container>\n\n    <ng-container *ngIf=\"user?.role?.role == roleType.manager || user?.role?.role == roleType.regManager\">\n        <mat-accordion mat-list-item class=\"navigation-accordion\">\n            <mat-expansion-panel [expanded]=\"expandPeopleLinks\" (opened)=\"expandPeopleLinks=!expandPeopleLinks;\" \n                (closed)=\"expandPeopleLinks=!expandPeopleLinks;\">\n                <mat-expansion-panel-header [class.expanded-menu-item]=\"expandPeopleLinks\">\n                    <mat-panel-title>\n                        <mat-icon>{{ expandPeopleLinks ? 'people_outline' : 'group_add' }}</mat-icon>\n                        <span>People</span>\n                    </mat-panel-title>\n                </mat-expansion-panel-header>\n\n                <mat-nav-list>\n                    <a mat-list-item routerLink=\"agents\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>person</mat-icon>\n                        <span>Agents</span>\n                    </a>\n\n                    <a mat-list-item [routerLink]=\"['/contacts']\" routerLinkActive=\"mat-router-link-active\">\n                        <mat-icon>contacts</mat-icon>\n                        <span>Contacts</span>\n                    </a>\n                </mat-nav-list>\n            </mat-expansion-panel>\n        </mat-accordion>\n    </ng-container>\n\n    \n</mat-nav-list>","import {Injectable, OnChanges, SimpleChanges} from '@angular/core';\nimport { MatSidenav, MatDrawerToggleResult } from '@angular/material/sidenav';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SidenavService {\n    private sidenav:MatSidenav;\n    opened$:Subject<boolean> = new Subject<boolean>();\n\n    constructor() {\n        // if(this.sidenav != null) \n        //     this.opened$.next(this.sidenav.opened);\n        // else\n        //     this.opened$.next(false);\n    }\n\n    open():Promise<MatDrawerToggleResult> {\n        this.opened$.next(true);\n        return this.sidenav.open();\n    }\n\n    close():Promise<MatDrawerToggleResult> {\n        this.opened$.next(false);\n        if(this.sidenav == null) return;\n        return this.sidenav.close();\n    }\n\n    toggle(isOpen?:boolean):Promise<MatDrawerToggleResult> {\n        if(this.sidenav != null) \n            this.opened$.next(!this.sidenav.opened);\n        return this.sidenav.toggle(isOpen);\n    }\n\n    setSidenav(nav:MatSidenav):void {\n        this.sidenav = nav;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SessionService } from './session.service';\nimport { User } from './models';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  user:User;\n  apiUrl:string;\n  userLoggedIn:boolean;\n\n  constructor(private session:SessionService, private auth:AuthService) {\n    this.session.userItem.subscribe((next:User) => { this.user = next; });\n    this.apiUrl = this.auth.apiUrl;\n\n    // get user authenticated status from the session service.\n    this.session\n      .isLoginSubject\n      .subscribe((authenticated:boolean) => {\n        this.userLoggedIn = authenticated;\n      });\n  }\n\n  intercept(request:HttpRequest<any>, next:HttpHandler):Observable<HttpEvent<any>> {\n    this.session.navigateQueue.push(request.url);\n\n    // if the url is nothing our WebAPI, we are not going to append HTTP headers\n    const url = this.apiUrl.substring(7, 11);\n    if (request.url.indexOf(url) == -1 || !this.userLoggedIn) {\n      return next.handle(request);\n    } else {\n      return next.handle(this.session.getTokenRequest(request));\n    }\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, RequiredValidator } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { MaterialModule } from '../material/material.module';\n// import { FileUploadModule } from 'ng2-file-upload';\nimport { AdFileUploadModule } from 'ad-file-upload';\n\nimport { WeatherService } from '../weather.service';\n\nimport { MyInformationComponent } from '../my-information/my-information.component';\nimport { UserService } from './user.service';\n// import { PayrollComponent } from '../payroll/payroll.component';\n// import { ChangeAgentDialogComponent } from '../payroll/dialogs/change-agent.component';\n// import { RejectNoteDialogComponent } from '../payroll/dialogs/reject-note.component';\n// import { SalesMappingComponent } from '../payroll/dialogs/sales-mapping.component';\n\n// import { HotTableModule } from '@handsontable/angular';\n\nimport { MaskSsn } from '../masks/ssn.directive';\nimport { RequiredValidatorDirective } from '../validators/required-validator.directive';\nimport { CampaignsModule } from '@app/campaigns/campaigns.module';\n// import { VsPasteDirective } from '@app/payroll/paste.directive';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdFileUploadModule,\n    CampaignsModule\n  ],\n  declarations: [\n    MyInformationComponent,\n    // PayrollComponent,\n    // ChangeAgentDialogComponent,\n    MaskSsn,\n    // RejectNoteDialogComponent,\n    // SalesMappingComponent,\n    RequiredValidatorDirective,\n    // VsPasteDirective\n  ],\n  entryComponents: [\n    // RejectNoteDialogComponent,\n    // SalesMappingComponent,\n    // ChangeAgentDialogComponent\n  ],\n  providers: [WeatherService, UserService]\n})\nexport class UserFeaturesModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {User, IUserDetail, IAgent, ILocalStorage, SessionUser} from '../models/index';\nimport {Observable, ReplaySubject, Subject, BehaviorSubject, of} from 'rxjs';\n\nimport {SessionService} from '../session.service';\n\nimport * as _ from 'lodash';\nimport * as moment from 'moment';\nimport {environment} from '@env/environment';\nimport {IUserDetailInfo} from '@app/models/user-detail-info.model';\nimport {IRole, UserRole} from '@app/models/role.model';\nimport { tap, map } from 'rxjs/operators';\n\ninterface DataStore {\n    user: User;\n    users: User[];\n    detail: IUserDetail;\n    agents: IAgent[];\n}\n\n@Injectable()\nexport class UserService {\n    private graphql = environment.graphql;\n    private apiUrl: string = environment.apiUrl;\n    private api = environment.apiUrl + 'api/';\n\n    dataStore: DataStore = {\n        user: null,\n        users: null,\n        detail: null,\n        agents: null\n    };\n\n    user: Observable<User>;\n    user$ = new BehaviorSubject<User>(null);\n    users: Observable<User[]>;\n    private users$: Subject<User[]> = new ReplaySubject<User[]>(1);\n    agents: Observable<IAgent[]>;\n    private agents$: Subject<IAgent[]> = new ReplaySubject<IAgent[]>(1);\n    userDetail: Observable<IUserDetail>;\n    userDetail$: Subject<IUserDetail> = new ReplaySubject<IUserDetail>(1);\n\n    constructor(\n        private http:HttpClient, \n        private session:SessionService\n    ) {\n        this.user = this.user$.asObservable();\n        this.users = this.users$.asObservable();\n        this.userDetail = this.userDetail$.asObservable();\n        this.agents = this.agents$.asObservable();\n\n        this.session.userItem.subscribe((user: User) => {\n            const detail = user == null ? null : user.detail;\n            this.user$.next(user);\n            this.dataStore.user = user;\n            this.dataStore.detail = detail;\n            this.userDetail$.next(detail);\n        });\n    }\n\n    setUser(user: User): void {\n        this.user$.next(user);\n    }\n\n    reloadUserPromise(): Promise<void> {\n        return new Promise<void>(resolve => {\n            if (this.dataStore.user == null) {\n                this.session.getItem('user');\n            }\n            this.user$.next(this.dataStore.user);\n        });\n    }\n\n    reloadUsers(): Promise<boolean> {\n        return new Promise<boolean>(resolve => {\n            this.users$.next(this.dataStore.users);\n            return true;\n        });\n    }\n\n    /**\n     * Get's session user's detail.\n     */\n    getUserDetail(): Promise<IUserDetail> {\n        return new Promise<IUserDetail>((resolve, reject) => {\n            if (this.dataStore.detail == null) reject();\n            this.userDetail$.next(this.dataStore.detail);\n            resolve(this.dataStore.detail);\n        });\n    }\n\n    reloadUserDetail(): void {\n        this.userDetail$.next(this.dataStore.detail);\n    }\n\n    reloadUser(): void {\n        if (this.dataStore.user == null) {\n            this.user$.next(this.session.dataStore.user);\n        } else {\n            this.user$.next(this.dataStore.user);\n        }\n    }\n\n    /**\n     * Gets a user's detail entity.\n     *\n     * @param userId\n     */\n    getUserDetailById(userId: number): Promise<IUserDetail> {\n        return this.http\n            .get(this.apiUrl + 'api/users/' + userId + '/detail')\n            .toPromise()\n            .then((detail: IUserDetail) => {\n                return detail;\n            });\n    }\n\n    loadUsersByActiveState(activeOnly: boolean = true): void {\n        this.http.get(this.apiUrl + 'api/users/all/statuses/' + activeOnly).subscribe((data: User[]) => {\n            this.dataStore.users = data;\n            this.users$.next(this.dataStore.users);\n        });\n    }\n\n    /**\n     *\n     *\n     * @param activeOnly\n     */\n    loadAgents(activeOnly: boolean = true): void {\n        this.http.get(this.apiUrl + 'api/agents').subscribe((data: IAgent[]) => {\n            this.dataStore.agents = data;\n            this.agents$.next(this.dataStore.agents);\n        });\n    }\n\n    /**\n     * Get all agents, return a promise asynchronously.\n     */\n    refreshAgents(): Promise<IAgent[]> {\n        return new Promise<IAgent[]>(resolve => {\n            if (this.dataStore.agents == null) this.loadAgents(true);\n            resolve(this.dataStore.agents);\n        });\n    }\n\n    getAgentByUserId(userId: number): Promise<IAgent> {\n        if (this.dataStore.agents == null) this.loadAgents(true);\n        return new Promise(resolve => {\n            let agent = _.filter(this.dataStore.agents, (a: IAgent) => {\n                return a.userId == userId;\n            }) as IAgent;\n            resolve(agent);\n        });\n    }\n\n    getAgentsByManagerId(managerId: number): Promise<IAgent[]> {\n        if (this.dataStore.agents == null) {\n            return new Promise(resolve => {\n                this.http.get(this.apiUrl + 'api/agents').subscribe((agents: IAgent[]) => {\n                    this.dataStore.agents = agents;\n                    this.agents$.next(agents);\n                    agents = _.filter(agents, (a: IAgent) => {\n                        return a.managerId == managerId;\n                    });\n                    resolve(agents);\n                });\n            });\n        } else {\n            return new Promise(resolve => {\n                let agents: IAgent[] = _.filter(this.dataStore.agents, (agent: IAgent) => {\n                    return agent.managerId == managerId;\n                });\n                resolve(agents);\n            });\n        }\n    }\n\n    /**\n     * Get a user entity by user id for use, this is not to be used for session user info.\n     *\n     * @param userId\n     */\n    getUser(userId: number): Promise<User> {\n        return this.http\n            .get(this.apiUrl + 'api/users/' + userId)\n            .toPromise()\n            .then((user: User) => {\n                return user;\n            });\n    }\n\n    /**\n     * Get a user by username... ONLY use if the user is authenticated. This route should\n     * be covered with middleware on the server.\n     *\n     * @param username\n     */\n    loadUser(username: string): void {\n        // this.http.get(this.apiUrl + 'api/users/' + username + '/session').subscribe((data: User) => {\n        //     this.dataStore.detail = data.detail;\n        //     this.userDetail$.next(data.detail);\n\n        //     this.dataStore.user = data;\n        //     this.session.setUser(this.dataStore.user);\n        //     this.user$.next(this.dataStore.user);\n        //     this.setLocalStorageUser(this.dataStore.user);\n        // });\n\n        const query = `\n        {\n            user(username:\"${username}\") {\n              id\n              firstName\n              lastName\n              username\n              active\n              createdAt\n              updatedAt\n              detail {\n                userDetailId\n                userId\n                street\n                  street2\n                city\n                state\n                zip\n              }\n              role {\n                role\n                is_sales_admin\n              }\n              clients {\n                clientId\n                name\n              }\n              sessionUser {\n                id\n                sessionClient\n                client {\n                  clientId\n                  name\n                  street\n                  city\n                  state\n                  zip\n                  phone\n                  active\n                  modifiedBy\n                }\n              }\n            }\n          }\n        `;\n\n        this.http.post(this.graphql, {\n            query: query,\n        })\n        .pipe(\n            map((result: { data: {user: User} }) => {\n                const user = result.data.user;\n                const roles = [];\n                for (const v in UserRole) {\n                    if (typeof UserRole[v] === 'number') roles.push(v);\n                }\n                const role = UserRole[(<unknown>user.role.role as string)];\n                user.role.role = role;\n                user.createdAt = moment(user.createdAt);\n                user.updatedAt = moment(user.updatedAt);\n                return user;\n            })\n        )\n        .subscribe((data: User) => {\n            this.dataStore.detail = data.detail;\n            this.userDetail$.next(data.detail);\n\n            this.dataStore.user = data;\n            this.session.setUser(this.dataStore.user);\n            this.user$.next(this.dataStore.user);\n            this.setLocalStorageUser(this.dataStore.user);\n        });\n    }\n\n    storeNgUser(user: User): void {\n\n        if (!user.sessionUser) {\n            this.createNewSessionUser(user)\n                .subscribe(sessionUser => {\n                    user.sessionUser = sessionUser;\n                    this.storeUser(user);\n                });\n        } else {\n            this.storeUser(user);\n        }\n    }\n\n    private storeUser(user:User):void {\n        this.dataStore.detail = user.detail;\n        this.userDetail$.next(user.detail);\n\n        this.dataStore.user = user;\n        this.session.setUser(this.dataStore.user);\n        this.user$.next(this.dataStore.user);\n        this.setLocalStorageUser(this.dataStore.user);\n    }\n\n    createNewSessionUser(user:User):Observable<SessionUser> {\n        const dto:SessionUser = {\n            id: null,\n            sessionClient: user.clients[0].clientId,\n            client: user.clients[0],\n            userId: user.id\n        };\n\n        const url = `${this.api}user-session`;\n        return this.http.post<SessionUser>(url, dto);\n    }\n\n    changeClient(clientId:number):Observable<boolean> {\n        const url = `${this.api}users/select-client/${clientId}`;\n        return this.http.get<boolean>(url)\n            .pipe(\n                tap(res => {\n                    if (!res) return;\n                    const newClient = this.dataStore.user.clients.find(c => c.clientId == clientId);\n                    this.dataStore.user.sessionUser.sessionClient = clientId;\n                    this.dataStore.user.sessionUser.client = newClient;\n                    this.session.setUser(this.dataStore.user);\n                    this.user$.next(this.dataStore.user);\n                    this.setLocalStorageUser(this.dataStore.user);\n                })\n            );\n    }\n\n    updateUser(user: User, detail: IUserDetail):Observable<User> {\n        const url = `${this.api}users/${user.id}`;\n        const body = { \n            user: user,\n            detail: detail\n        };\n        return this.http.post<User>(url, body)\n            .pipe(\n                tap((data:any) => {\n                    if(data.user) {\n                        this.dataStore.user = data.user;\n                        this.session.setUser(this.dataStore.user);\n                    } else {\n                        this.dataStore.user = data;\n                    }\n\n                    if(data.detail) {\n                        this.dataStore.detail = data.detail;\n                        this.userDetail$.next(this.dataStore.detail);\n                    }\n\n                    this.user$.next(this.dataStore.user);\n                    this.setLocalStorageUser(this.dataStore.user);\n                }),\n                map((resp:any) => {\n                    if(resp.user)\n                        return resp.user as User;\n                    else\n                        return resp as User;\n                })\n            );\n    }\n\n    updateUserEntity(user: User): Promise<User> {\n        return this.http\n            .post(this.apiUrl + 'api/users/' + user.id, user)\n            .toPromise()\n            .then((user: User) => {\n                return user;\n            });\n    }\n\n    saveNewUserAgentEntity(\n        user: User,\n        agent: IAgent,\n        detail: IUserDetail,\n        clientId: number,\n        role: number\n    ): Observable<boolean> {\n        let dto = {user: user, agent: agent, detail: detail, role: role};\n        return this.http.post<boolean>(`${this.apiUrl}api/users/clients/${clientId}/new-user-agent`, dto);\n    }\n\n    /**\n     * @description This will allow us to the update the current signed in user's cached session information\n     * without having to persist anything back to the server. This should only be used if the updated information\n     * on the user's session is non-related to the user's table (e.g. The current client selected has options changed\n     * and the logged in user's object needs to know about those changes).\n     *\n     * @param user\n     * @return void\n     */\n    cacheUser(user: User): void {\n        this.dataStore.user = user;\n        this.user$.next(this.dataStore.user);\n        this.setLocalStorageUser(this.dataStore.user);\n    }\n\n    loadUserDetail(userId: number = null): void {\n        userId = userId || this.dataStore.user.id;\n        this.http.get(this.apiUrl + 'api/users/' + userId + '/detail').subscribe((data: IUserDetail) => {\n            if (data == null) return;\n            this.dataStore.detail = data;\n            this.userDetail$.next(this.dataStore.detail);\n        });\n    }\n\n    /**\n     * For use to update a user's detail information and return promise.\n     *\n     * @param detail\n     */\n    saveDetailEntity(detail: IUserDetail): Promise<IUserDetail> {\n        let executionUrl =\n            detail.userDetailId != null\n                ? this.apiUrl + 'api/users/' + detail.userId + '/details/' + detail.userDetailId\n                : this.apiUrl + 'api/users/' + detail.userId + '/details';\n        return this.http\n            .post(executionUrl, detail)\n            .toPromise()\n            .then((detail: IUserDetail) => {\n                return detail;\n            });\n    }\n\n    /**\n     * Update user detail sale info\n     *\n     * @param detail\n     */\n    updateDetailSaleInfo(detail: IUserDetail): Promise<IUserDetail> {\n        let url = this.api + 'users/' + detail.userId + '/details/' + detail.userDetailId + '/sale-info';\n        return this.http\n            .post(url, detail)\n            .toPromise()\n            .then((detail: IUserDetail) => {\n                return detail;\n            });\n    }\n\n    updateDetailAgentInfo(detail: IUserDetailInfo): Promise<IUserDetailInfo> {\n        let url = this.api + 'users/' + detail.userId + '/details/' + detail.userDetailId + '/agent-info';\n        return this.http\n            .post(url, detail)\n            .toPromise()\n            .then((detail: IUserDetailInfo) => {\n                return detail;\n            });\n    }\n\n    /**\n     * Only for use on session user, this will update session user details.\n     *\n     * @param detail\n     */\n    updateDetail(detail: IUserDetail): void {\n        this.http\n            .post(this.apiUrl + 'api/users/' + detail.userId + '/details/' + detail.userDetailId, detail)\n            .subscribe((data: IUserDetail) => {\n                this.dataStore.detail = data;\n                this.userDetail$.next(this.dataStore.detail);\n            });\n    }\n\n    saveUserRoleEntity(role:IRole):Observable<IRole> {\n        const url = `${this.apiUrl}api/users/${role.userId}/roles`;\n        return this.http.post<IRole>(url, role);\n    }\n\n    logout(): void {\n        this.dataStore.user = null;\n        this.user$.next(null);\n        this.dataStore.detail = null;\n        this.userDetail$.next(null);\n    }\n\n    getActiveClientName():string {\n        const currentUser:User = this.user$.getValue();\n        if(currentUser == null) return '';\n        return currentUser.sessionUser.client.name;\n    }\n\n    /**\n     * This sets the session user. It will save/overwrite any existing user information for the logged in\n     * user on the session cookie.\n     *\n     * @param user\n     */\n    private setLocalStorageUser(user: User): void {\n        let data: ILocalStorage<User> = <ILocalStorage<User>>{\n            expires: moment().valueOf() + 1000 * (60 * 24 * 3),\n            data: user\n        };\n        this.session.setItem('user', data);\n    }\n}\n","import { animation, trigger, transition, style, animate } from '@angular/animations';\n\nexport const showFieldAnimation = [\n    trigger('showField', [\n        transition(':enter', [\n            style({ transform: 'translateY(-10%)', opacity: 0 }),\n            animate('350ms', style({ transform: 'translateY(0)', opacity: 1 }))\n        ]),\n        transition(':leave', animate('350ms', style({ transform: 'translateY(-10%)', opacity: 0 })))\n    ])\n];","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nexport function coerceBooleanProperty(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","export * from './number-property';\nexport * from './animations';\nexport * from './boolean-property';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any): number;\nexport function coerceNumberProperty<D>(value: any, fallback: D): number | D;\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nexport function _isNumberValue(value: any): boolean {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value as any)) && !isNaN(Number(value));\n}","import { Directive, ElementRef, Renderer2, HostListener, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[requiredValidator]'\n})\nexport class RequiredValidatorDirective {\n\n  protected _elementClass: string[] = [];\n\n  constructor(private el: ElementRef, private renderer: Renderer2) {\n    console.dir(el);\n\n    if(el.nativeElement.firstElementChild !== null) console.dir(el.nativeElement.firstElementChild.validity);\n  }\n\n  @HostListener('mouseleave') fieldBlur() {\n    // this.el.nativeElement.validity.valid = false;\n      // this.invalidateField();\n\n    if(!this.el.nativeElement.validity.valid) this.invalidateField();\n  }\n\n  @HostBinding('class')\n  get elementClass(): string {\n    return this._elementClass.join(' ');\n  }\n\n  private invalidateField(): void {\n    // this.renderer.addClass(this.el.nativeElement, 'mat-form-field-invalid');\n    // this.renderer.addClass(this.el.nativeElement, 'mat-input-invalid');\n    // this.renderer.addClass(this.el.nativeElement, 'text-danger');\n\n    this._elementClass.push('mat-form-field-invalid');\n    this._elementClass.push('mat-input-invalid');\n    this._elementClass.push('text-danger');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class WeatherService {\n  private APIKEY: string = '2580c0421b529216d4197f97870a52a6';\n\n  constructor(private http: HttpClient) { }\n\n  getWeatherByGeoLocale(long: number, lat: number): Promise<any> {\n    return this.http.get('http://api.openweathermap.org/data/2.5/weather?lat='+ lat +'&lon=' + long + '&APPID=' + this.APIKEY).toPromise();\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  rootUrl: 'http://verostack',\n  apiUrl: 'http://verostack/',\n  graphql: 'http://verostack/graphql',\n  defaultTitle: 'Payment Dyanmics',\n  headless: '5764D6B5E7A5575B22201D646C5695ECB6AEF498A467B01D4D2167637D8F81A1',\n  // Geocoding API Key\n  geocodingApi: 'AIzaSyACQIjgGrlpl1-DtmI6CP6-6_7qrtx_rh0',\n  // Geocoding API URL \n  geocoding: 'https://maps.googleapis.com/maps/api/geocode/json?address='\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}