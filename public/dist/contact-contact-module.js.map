{"version":3,"sources":["./src/app/contact/contact-list/contact-list.component.ts","./src/app/contact/contact-list/contact-list.component.html","./src/app/contact/contact-outlet/contact-outlet.component.ts","./src/app/contact/contact-outlet/contact-outlet.component.html","./src/app/contact/contact.module.ts","./src/app/contact/knock-list/add-dnc-contact-dialog/add-dnc-contact-dialog.component.ts","./src/app/contact/knock-list/add-dnc-contact-dialog/add-dnc-contact-dialog.component.html","./src/app/contact/knock-list/confirm-delete-sheet/confirm-delete-sheet.component.ts","./src/app/contact/knock-list/confirm-delete-sheet/confirm-delete-sheet.component.html","./src/app/contact/knock-list/knock-list.component.ts","./src/app/contact/knock-list/knock-list.component.html","./src/app/contact/knock-list/knock-list.service.ts"],"names":[],"mappings":"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","file":"contact-contact-module.js","sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { SessionService } from '@app/session.service';\nimport { ContactService } from '../contact.service';\nimport { User } from '@app/models';\nimport { Contact } from '@app/models/contact.model';\n\n@Component({\n    selector: 'vs-contact-list',\n    templateUrl: './contact-list.component.html',\n    styleUrls: ['./contact-list.component.scss']\n})\nexport class ContactListComponent implements OnInit, OnDestroy {\n\n    // have to store the site title on this so that we can reset it after we navigate away from the CRM.\n    siteTitle:string;\n    user:User;\n    contacts:Contact[];\n    \n    constructor(\n        private session:SessionService,\n        private contactService:ContactService\n    ) {}\n\n    ngOnInit() {\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n\n            this.siteTitle = this.session.navigationTitle$.getValue();\n            this.session.setNavigationTitle('Contact Manager');\n\n            this.contactService.getContactsByClient(this.user.sessionUser.sessionClient)\n                .subscribe(contacts => {\n                    this.contacts = contacts;\n                });\n        });\n    }\n\n    ngOnDestroy() {\n        this.session.setNavigationTitle(this.siteTitle);\n    }\n\n}\n","\n<mat-table [dataSource]=\"contacts\" class=\"mat-elevation-z1\">\n\n    <ng-container matColumnDef=\"select\">\n        <mat-header-cell *matHeaderCellDef class=\"w-50\">&nbsp;</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            <mat-checkbox></mat-checkbox>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"contactName\">\n        <mat-header-cell *matHeaderCellDef>Contact</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            {{item.firstName}} {{item.lastName}}\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"company\">\n        <mat-header-cell *matHeaderCellDef>Company</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            {{item.businessName}}\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"phone\">\n        <mat-header-cell *matHeaderCellDef>Phone</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            {{item.phone | phone}}\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"email\">\n        <mat-header-cell *matHeaderCellDef>Email</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            {{item.email}}\n        </mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"['select', 'contactName', 'company', 'phone', 'email']\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: ['select', 'contactName', 'company', 'phone', 'email']\"></mat-row>\n</mat-table>","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { startWith, distinctUntilChanged, debounce, debounceTime } from 'rxjs/operators';\nimport { ContactService } from '../contact.service';\n\n@Component({\n    selector: 'vs-contact-outlet',\n    templateUrl: './contact-outlet.component.html',\n    styleUrls: ['./contact-outlet.component.scss']\n})\nexport class ContactOutletComponent implements OnInit {\n\n    searchInput = new FormControl();\n    showClearButton = false;\n    userClickedSearch = false;\n\n    constructor(private contactService:ContactService) { }\n\n    ngOnInit() {\n        this.searchInput.valueChanges\n            .pipe(\n                startWith(''),\n                distinctUntilChanged()\n            )\n            .subscribe(value => this.showClearButton = value && value.length > 0);\n    }\n\n    searchContacts() {\n        this.userClickedSearch = true;\n        const value = this.searchInput.value.toLowerCase();\n        let filtered = this.contactService.getAllRestrictedContacts();\n        filtered = filtered.filter(f => {\n            return f.firstName.toLowerCase().includes(value) ||\n                f.lastName.toLowerCase().includes(value) ||\n                f.address.toLowerCase().includes(value) ||\n                f.city.toLowerCase().includes(value);\n        });\n        this.contactService._restrictedContacts$.next(filtered);\n    }\n\n    clearSearch() {\n        this.searchInput.setValue('');\n        const allContacts = this.contactService.getAllRestrictedContacts();\n        this.contactService._restrictedContacts$.next(allContacts);\n        this.showClearButton = false;\n        this.userClickedSearch = false;\n    }\n\n}\n","<div class=\"crm-toolbar\">\n    <div class=\"container-fluid\">\n        <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark pl-5 mb-3\">\n            <a href=\"#\" class=\"navbar-brand\">\n                <i class=\"material-icons md-48\">location_city</i>\n            </a>\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapseContent\" \n                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse\" id=\"navbarCollapseContent\">\n                <ul class=\"navbar-nav mr-auto\">\n                    <!-- <li class=\"nav-item\">\n                        <a routerLink=\"/contacts/list\" routerLinkActive=\"active\" class=\"nav-link text-uppercase\">Contacts</a>\n                    </li> -->\n                    <li class=\"nav-item\">\n                        <a routerLink=\"/contacts/knock-list\" routerLinkActive=\"active\" class=\"nav-link text-uppercase\">Restricted Contacts</a>\n                    </li>\n                    <!-- <li class=\"nav-item\">\n                        <a href=\"#\" class=\"nav-link text-uppercase\">Deals</a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a href=\"#\" class=\"nav-link text-uppercase\">Leads</a>\n                    </li> -->\n                </ul>\n                <div class=\"form-inline my-2 my-lg-0\">\n                    <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" [formControl]=\"searchInput\" />\n                    <button type=\"button\" class=\"btn btn-outline-light my-2 my-lg-0\" (click)=\"searchContacts()\">Search</button>\n                    <button type=\"button\" class=\"btn btn-outline-light my-2 ml-2 my-lg-0\" \n                        *ngIf=\"showClearButton && userClickedSearch\" (click)=\"clearSearch()\">Clear</button>\n                </div>\n            </div>\n        </nav>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\"> \n                <router-outlet></router-outlet>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContactListComponent } from './contact-list/contact-list.component';\nimport { Route, RouterModule } from '@angular/router';\nimport { AuthGuard } from '@app/auth.guard';\nimport { MaterialModule } from '@app/material/material.module';\nimport { FabFloatBtnModule } from '@app/fab-float-btn/fab-float-btn.module';\nimport { ContactOutletComponent } from './contact-outlet/contact-outlet.component';\nimport { PipesModule } from '@app/pipes/pipes.module';\nimport { KnockListComponent } from './knock-list/knock-list.component';\nimport { KnockListService } from './knock-list/knock-list.service';\nimport { AddDncContactDialogComponent } from './knock-list/add-dnc-contact-dialog/add-dnc-contact-dialog.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ConfirmDeleteSheetComponent } from './knock-list/confirm-delete-sheet/confirm-delete-sheet.component';\n\nconst routes: Route[] = [\n    { \n        path: '', \n        component: ContactOutletComponent, canActivate: [AuthGuard],\n        children: [\n            { path: '', redirectTo: 'knock-list', pathMatch: 'full' },\n            { path: 'list', component: ContactListComponent, canActivate: [AuthGuard] },\n            { \n                path: 'knock-list', \n                component: KnockListComponent, \n                canActivate: [AuthGuard],\n                resolve: {\n                    contacts: KnockListService\n                }\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule, \n        MaterialModule,\n        PipesModule,\n        FabFloatBtnModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        RouterModule.forChild(routes)\n    ],\n\n    declarations: [\n        ContactListComponent,\n        ContactOutletComponent,\n        KnockListComponent,\n        AddDncContactDialogComponent,\n        ConfirmDeleteSheetComponent\n    ],\n\n    exports: [\n        ContactListComponent,\n        ContactOutletComponent\n    ],\n\n    providers: [\n        KnockListService\n    ],\n\n    entryComponents: [\n        AddDncContactDialogComponent,\n        ConfirmDeleteSheetComponent\n    ]\n})\nexport class ContactModule {}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { User, DncContact, GeocodingRequest, GeocodingResponseStatus } from '@app/models';\nimport { SessionService } from '@app/session.service';\nimport { States } from '@app/shared';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { MessageService } from '@app/message.service';\nimport { ContactService } from '@app/contact/contact.service';\n\n@Component({\n    selector: 'vs-add-dnc-contact-dialog',\n    templateUrl: './add-dnc-contact-dialog.component.html',\n    styleUrls: ['./add-dnc-contact-dialog.component.scss']\n})\nexport class AddDncContactDialogComponent implements OnInit {\n\n    user:User;\n    form:FormGroup;\n\n    formSubmitted = false;\n    states = States.$get();\n\n    constructor(\n        public ref: MatDialogRef<AddDncContactDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data: any,\n        private fb:FormBuilder,\n        private session:SessionService,\n        private message:MessageService,\n        private service: ContactService\n    ) { }\n\n    ngOnInit() {\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n            this.initializeComponent();\n        });\n    }\n\n    initializeComponent() {\n        this.createForm();\n    }\n\n    requiredValidator(control:AbstractControl):ValidationErrors | null {\n        if (control.value) return null;\n        return {\n            required: true\n        };\n    }\n\n    createForm() { \n        this.form = this.fb.group({\n            clientId: this.fb.control(this.user.selectedClient),\n            firstName: this.fb.control(''),\n            lastName: this.fb.control(''),\n            description: this.fb.control(''),\n            address: this.fb.control('', [Validators.required]),\n            addressCont: this.fb.control(''),\n            city: this.fb.control('', [Validators.required]),\n            state: this.fb.control('', [Validators.required]),\n            zip: this.fb.control('', [Validators.required, Validators.pattern(/^\\d+$/)]),\n            note: this.fb.control('')\n        });\n    }\n\n    prepareModel():DncContact {\n        return {\n            dncContactId: null,\n            clientId: this.form.value.clientId,\n            firstName: this.form.value.firstName,\n            lastName: this.form.value.lastName,\n            description: this.form.value.description,\n            address: this.form.value.address,\n            addressCont: this.form.value.addressCont,\n            city: this.form.value.city,\n            state: this.form.value.state,\n            zip: this.form.value.zip,\n            note: this.form.value.note\n        } as DncContact;\n    }\n\n    onNoClick() {\n        this.ref.close();\n    }\n\n    saveDncContact() {\n        \n        if (!this.form.value.firstName && !this.form.value.lastName && !this.form.value.description) {\n            this.form.get('firstName').setErrors({ required: true });\n            this.form.get('lastName').setErrors({ required: true });\n            this.form.get('description').setErrors({ required: true });\n            this.message.addMessage('Please enter one of the following: First & Last Names OR Description');\n        }\n\n        this.formSubmitted = true;\n        this.form.updateValueAndValidity();\n        console.log(`The form is valid: ${this.form.valid}`);\n        console.dir(this.form);\n\n        if (this.form.valid) {\n            const address: GeocodingRequest = {\n                address: this.form.value.address,\n                city: this.form.value.city,\n                state: this.form.value.state,\n            };\n            if (this.form.value.addressCont) {\n                address.address2 = this.form.value.addressCont;\n            }\n\n            this.service.getGeocoding(address).subscribe(result => {\n                if (result.status !== GeocodingResponseStatus.Ok) {\n                    this.message.addMessage('We were unable to resolve that address. Please review for accuracy.', 'dismiss', 5000);\n                    return;\n                }\n\n                const model = this.prepareModel();\n                model.lat = result.results[0].geometry.location.lat.toString();\n                model.long = result.results[0].geometry.location.lng.toString();\n                model.geocode = JSON.stringify(result.results[0].geometry);\n\n                this.ref.close(model);\n            });\n        }\n    }\n\n}\n","<div mat-dialog-title class=\"d-flex justify-content-between\">\n    <h3>Non-Solicitation Contact</h3>\n    <button type=\"button\" mat-icon-button (click)=\"onNoClick()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n</div>\n\n<div mat-dialog-content>\n    <p class=\"text-muted font-italic\">Please enter a name OR description for the Do Not Knock entry.</p>\n    <div [formGroup]=\"form\" *ngIf=\"form\" class=\"form-container\">\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"firstName\" placeholder=\"First Name\" [required]=\"form.get('description').value == null\" />\n            <mat-error *ngIf=\"form.get('firstName').errors != null && form.get('firstName').errors['required'] && (form.get('firstName').touched || formSubmitted)\">\n                Please enter a first name.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"lastName\" placeholder=\"Last Name\" [required]=\"form.get('description').value == null\" />\n            <mat-error *ngIf=\"form.get('lastName').errors != null && form.get('lastName').errors['required'] && (form.get('lastName').touched || formSubmitted)\">\n                Please enter a last name.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"description\" placeholder=\"Description\"\n                [required]=\"form.get('firstName').value == null && form.get('lastName').value == null\" />\n            <mat-hint>Use <span class=\"font-italic\">description</span> if you have a location that doesn't have a person by name.</mat-hint>\n            <mat-error *ngIf=\"form.get('description').errors != null && form.get('description').errors['required'] && (form.get('description').touched || formSubmitted)\">\n                Please enter a description.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"address\" placeholder=\"Street Address\" required />\n            <mat-error *ngIf=\"form.get('address').invalid && (form.get('address').touched || formSubmitted)\">\n                Please enter a full address.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"addressCont\" placeholder=\"Apt/Unit\" />\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"city\" placeholder=\"City\" required />\n            <mat-error *ngIf=\"form.get('city').invalid && (form.get('city').touched || formSubmitted)\">\n                Please enter a city.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <mat-select placeholder=\"State\" formControlName=\"state\" required>\n                <mat-option *ngFor=\"let s of states\" [value]=\"s.abbreviation\">\n                    {{s.name}}\n                </mat-option>\n            </mat-select>\n            <mat-error *ngIf=\"form.get('state').invalid && (form.get('state').invalid || formSubmitted)\">\n                Please select a state.\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <input matInput type=\"text\" formControlName=\"zip\" placeholder=\"Zip Code\" maxlength=\"9\" required />\n            <mat-error *ngIf=\"form.get('zip').invalid && (form.get('zip').invalid || formSubmitted)\">\n                <ng-container *ngIf=\"form.get('zip').errors['required']\">\n                    Please enter a zip code.\n                </ng-container>\n                <ng-container *ngIf=\"form.get('zip').errors['pattern']\">\n                    Numbers only please.\n                </ng-container>\n            </mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n            <textarea matInput formControlName=\"note\" placeholder=\"Notes\" rows=\"3\"></textarea>\n        </mat-form-field>\n    </div>\n</div>\n\n<div mat-dialog-actions class=\"d-flex justify-content-end\">\n    <button type=\"button\" mat-button color=\"primary\" (click)=\"saveDncContact()\">\n        <mat-icon inline=\"true\">save</mat-icon>\n        Save\n    </button>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">\n        <mat-icon inline=\"true\">clear</mat-icon>\n        Cancel\n    </button>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatBottomSheetRef, MAT_BOTTOM_SHEET_DATA } from '@angular/material/bottom-sheet';\n\n@Component({\n    selector: 'vs-confirm-delete-sheet',\n    templateUrl: './confirm-delete-sheet.component.html'\n})\nexport class ConfirmDeleteSheetComponent implements OnInit {\n\n    pendingDeletes:number;\n\n    constructor(\n        private ref: MatBottomSheetRef<ConfirmDeleteSheetComponent>,\n        @Inject(MAT_BOTTOM_SHEET_DATA) public data: { pendingCount:number }\n    ) { \n        this.pendingDeletes = this.data.pendingCount;\n    }\n\n    ngOnInit() {\n    }\n\n    confirmDelete(confirmed:boolean) {\n        this.ref.dismiss(confirmed);\n    }\n\n}\n","<mat-nav-list>\n    <a mat-list-item (click)=\"$event.preventDefault(); confirmDelete(true)\" class=\"text-danger\">\n        <span mat-line class=\"font-weight-bold\">Delete {{pendingDeletes}} selected {{ pendingDeletes > 1 ? 'contacts' : 'contact' }}?</span>\n        <span mat-line>Click Here to Confirm</span>\n    </a>\n\n    <a mat-list-item (click)=\"$event.preventDefault(); confirmDelete(false)\">\n        <span mat-line class=\"font-weight-bold\">Do NOT delete selected contacts</span>\n        <span mat-line>Click Here to Cancel</span>\n    </a>\n</mat-nav-list>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DncContact, User } from '@app/models';\nimport { SessionService } from '@app/session.service';\nimport { SelectionModel, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject } from 'rxjs';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { AddDncContactDialogComponent } from './add-dnc-contact-dialog/add-dnc-contact-dialog.component';\nimport { KnockListService } from './knock-list.service';\nimport { MessageService } from '@app/message.service';\nimport { ConfirmDeleteSheetComponent } from './confirm-delete-sheet/confirm-delete-sheet.component';\nimport { ContactService } from '../contact.service';\n\n@Component({\n    selector: 'vs-knock-list',\n    templateUrl: './knock-list.component.html',\n    styleUrls: ['./knock-list.component.scss'],\n    animations: [\n        trigger('showHideActionBar', [\n            transition(':enter', [\n                style({ opacity: 0 }),\n                animate('0.5s', style({ opacity: 1 }))\n            ]),\n            transition(':leave', [\n                animate('0.5s', style({ opacity: 0 }))\n            ])\n        ]),\n    ]\n})\nexport class KnockListComponent implements OnInit, OnDestroy {\n\n    private siteTitle:string;\n    user:User;\n    displayColumns = ['checked', 'name', 'address', 'notes'];\n    dataSource:MatTableDataSource<DncContact>;\n    \n    selection:SelectionModel<DncContact>;\n    isFabOpen$ = new BehaviorSubject<boolean>(false);\n\n    constructor(\n        private route:ActivatedRoute, \n        private session:SessionService, \n        private dialog:MatDialog, \n        private service:KnockListService,\n        private message:MessageService,\n        private sheet:MatBottomSheet,\n        private contactService:ContactService\n    ) { }\n\n    ngOnInit() {\n        this.contactService._restrictedContacts$.subscribe(contacts => {\n            this.dataSource = new MatTableDataSource<DncContact>(contacts);\n        });\n\n        this.session.getUserItem().subscribe(user => {\n            this.user = user;\n\n            this.siteTitle = this.session.navigationTitle$.getValue();\n            this.session.setNavigationTitle('Contact Manager');\n\n            this.selection = new SelectionModel<DncContact>(true, []);\n        });\n    }\n\n    ngOnDestroy() {\n        this.session.setNavigationTitle(this.siteTitle);\n    }\n\n    selectAllToggle() {\n        this.isAllSelected() ?\n            this.selection.clear() : \n            this.dataSource.data.forEach(r => this.selection.select(r));\n    }\n\n    checkboxLabel(row?:DncContact) {\n        if (!row) {\n            return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n        } \n        return `${this.selection.isSelected(row) ? 'deselect' : 'select'}`;\n    }\n\n    isAllSelected() {\n        return this.selection.selected != null && this.dataSource.data != null \n            && this.selection.selected.length === this.dataSource.data.length;\n    }\n\n    addDncContact() {\n        this.dialog.open(AddDncContactDialogComponent, {\n            width: '50vw',\n            minHeight: '50vh'\n        })\n        .afterClosed()\n        .subscribe((result:DncContact) => {\n            if (result == null) return;\n            this.session.showLoader();\n\n            result.clientId = this.user.sessionUser.sessionClient;\n            this.service.saveNewDncContact(result)\n                .subscribe(dnc => {\n                    this.session.hideLoader();\n\n                    const updatedList = this.contactService._restrictedContacts$.getValue();\n                    updatedList.push(dnc);\n                    this.contactService._restrictedContacts$.next(updatedList.sort(this.sortContacts));\n                    this.message.addMessage('Saved new DNK Contact!', 'dismiss', 2500);\n                });\n        });\n    }\n\n    deleteDncContacts() { \n        const pendingDelete = this.selection.selected;\n        this.sheet.open(ConfirmDeleteSheetComponent, {\n            data: {\n                pendingCount: pendingDelete.length\n            }\n        })\n        .afterDismissed()\n        .subscribe(res => {\n            // user confirmed to delete contacts\n            if (res) {\n                const deleteIds = pendingDelete.map(pd => pd.dncContactId);\n                this.service.deleteDncContacts(deleteIds)\n                    .subscribe(result => {\n                        const contacts = this.contactService._restrictedContacts$.getValue();\n                        for (let i = 0; i < contacts.length; i ++) {\n                            for (let j = 0; j < deleteIds.length; j++) {\n                                if (contacts[i].dncContactId === deleteIds[j]) {\n                                    contacts.splice(i, 1);\n                                }\n                            } \n                        }\n\n                        this.contactService._restrictedContacts$.next(contacts);\n                        this.message.addMessage(\n                            `Deleted ${deleteIds.length} ${deleteIds.length > 1 ? 'contacts' : 'contact'}`, \n                            'dismiss', 2500);\n                    });\n            } \n        });\n    }\n\n    sortContacts(a:DncContact, b:DncContact):number {\n        const aField = a.lastName ? a.lastName : a.firstName ? a.firstName : a.description;\n        const bField = b.lastName ? b.lastName : b.firstName ? b.firstName : b.description;\n        if (aField < bField) return -1;\n        if (aField > bField) return 1;\n        return 0;\n    }\n\n}\n","\n<mat-toolbar class=\"bg-transparent\">\n    <h3>Non-Solicitation List</h3>\n</mat-toolbar>\n\n<p class=\"pl-3\">\n    The following contacts and locations are listed as registered with the supplier, FTC or other regulatory body\n    and cannot be visited. (Only manually added contacts can be removed.)\n</p>\n\n<!-- action bar -->\n<mat-toolbar class=\"action-bar bg-transparent\">\n\n    <!-- DELETE -->\n    <button type=\"button\" mat-button @showHideActionBar *ngIf=\"selection.selected.length\" (click)=\"deleteDncContacts()\">\n        <mat-icon class=\"md-18\">delete</mat-icon>\n        Remove\n    </button>\n    \n</mat-toolbar>\n\n<mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z1\">\n    <ng-container matColumnDef=\"checked\">\n        <mat-header-cell *matHeaderCellDef class=\"check-column\">\n            <mat-checkbox (change)=\"$event ? selectAllToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n                [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n                [aria-label]=\"checkboxLabel()\"></mat-checkbox>\n        </mat-header-cell>\n        <mat-cell *matCellDef=\"let item\" class=\"check-column\">\n            <mat-checkbox *ngIf=\"item.dncContactId != null\"\n                (click)=\"$event.stopPropagation();\"\n                (change)=\"$event ? selection.toggle(item) : null\"\n                [checked]=\"selection.isSelected(item)\"\n                [aria-label]=\"checkboxLabel(item)\"></mat-checkbox>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"name\">\n        <mat-header-cell *matHeaderCellDef>Location</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">\n            <ng-container *ngIf=\"item.firstName && item.lastName; else noName;\">\n                {{ item.firstName }} {{ item.lastName }}\n            </ng-container>\n            <ng-template #noName>\n                {{ item.description }}\n            </ng-template>\n        </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"address\">\n        <mat-header-cell *matHeaderCellDef>Address</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">{{ item.address }} {{ item.addressCont }} {{ item.city }}, {{ item.state }}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"notes\">\n        <mat-header-cell *matHeaderCellDef>Notes</mat-header-cell>\n        <mat-cell *matCellDef=\"let item\">{{ item.note }}</mat-cell>\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayColumns\" class=\"mat-elevation-z1\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayColumns;\"></mat-row>\n</mat-table>\n\n<vs-float-button\n    mat-icon=\"add\"\n    color=\"accent\"\n    (callback)=\"addDncContact()\"\n    [isOpen]=\"isFabOpen$\"\n></vs-float-button>","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRoute, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\nimport { DncContact, Graphql } from '@app/models';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { Observable, Observer } from 'rxjs';\nimport { ContactService } from '../contact.service';\nimport { tap, map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class KnockListService implements Resolve<DncContact[]> {\n\n    api = environment.apiUrl + 'api';\n\n    constructor(private http:HttpClient, private contactService:ContactService) { }\n\n    resolve(route:ActivatedRouteSnapshot, state:RouterStateSnapshot):Observable<DncContact[]> {\n        return Observable.create((observer:Observer<DncContact[]>) => {\n            this.getDncContacts().subscribe(contacts => {\n                this.contactService.setRestrictedContacts(contacts.sort(this._sortContacts));\n                observer.next(this.contactService._restrictedContacts$.getValue());\n                observer.complete();\n            }, err => {\n                observer.next(null);\n                observer.complete();\n            });\n        });\n    }\n\n    getDncContacts():Observable<DncContact[]> {\n        return this.http.get<DncContact[]>(`${this.api}/dnc-contacts`)\n            .pipe(\n                tap(contacts => this.contactService._restrictedContacts$.next(contacts))\n            );\n    }\n\n    saveNewDncContact(contact:DncContact):Observable<DncContact> {\n        return this.http.post<DncContact>(`${this.api}/dnc-contacts`, contact);\n    }\n\n    deleteDncContacts(dncContactIds:number[]) {\n        const params = new HttpParams().set('dncContactIds', dncContactIds.join(','));\n        // dncContactIds.forEach(d => params = params.append('dncContactIds', d.toString()));\n        return this.http.delete(`${this.api}/dnc-contacts`, { params: params });\n    }\n\n    private _sortContacts(a:DncContact, b:DncContact):number {\n        const aField = a.lastName ? a.lastName : a.firstName ? a.firstName : a.description;\n        const bField = b.lastName ? b.lastName : b.firstName ? b.firstName : b.description;\n        if (aField < bField) return -1;\n        if (aField > bField) return 1;\n        return 0;\n    }\n\n    \n}\n"],"sourceRoot":"webpack:///"}